{"version":3,"sources":["components/DropPin.js","../node_modules/require_optional sync","components/clientdb.js","components/MapView.js","components/mode.js","components/Menu/Menu.js","components/Login.js","components/Menu/NavMenu.js","components/Module.js","components/EditModule.js","components/ViewModules.js","components/ManageModules.js","components/ViewPinOnMap.js","components/completed.js","App.js","serviceWorker.js","index.js"],"names":["globalPosition","floatStyle","position","width","height","bottom","right","backgroundColor","color","borderRadius","textAlign","boxShadow","zIndex","HandleUpload","base64data","id","basestring","replace","fileBuffer","Buffer","binaryImageData","BSON","Binary","Uint8Array","aws","client","getServiceClient","AwsServiceClient","factory","args","ACL","Bucket","ContentType","Key","ContentEncoding","Body","request","AwsRequest","Builder","withService","withAction","withRegion","withArgs","execute","build","then","result","console","log","catch","err","OpenFile","props","srcurl","imgurl","type","multiple","onChange","e","fileReader","FileReader","readAsDataURL","target","files","onloadend","setbase64data","HandleFileChange","style","src","onError","onerror","EditForm","useState","pin","setPin","handleInputChange","name","value","Date","now","setimgurl","centered","show","Header","Title","Group","Label","Control","title","as","rows","description","hint","destination","Footer","variant","onClick","cancel","save","PinMarker","modalShow","setModalShow","key","coords","_id","query","update","$set","db","collection","findOneAndUpdate","objectID","toString","AddpinForm","placeholder","setPlaceHolder","categories","setCategories","useEffect","find","asArray","onSelect","JSON","parse","Toggle","Menu","map","curr","placeholders","Item","eventKey","stringify","className","htmlFor","required","placeHolder","onHide","document","getElementById","lng","lat","owner_id","auth","authInfo","userId","audio","video","insertOne","res","insertedId","setMarkers","markers","module","pins","setModule","upsert","error","DropPin","setPosition","canPlacePin","setCanPlacePin","owner_email","owner_name","shared_array","public","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","ObjectId","match","params","findOne","pipeline","$match","$in","$addFields","__order","$indexOfArray","$sort","aggregate","toArray","center","zoom","latlng","left","window","history","back","fontSize","url","attribution","webpackEmptyContext","req","Error","code","keys","resolve","exports","appId","Stitch","hasAppClient","getAppClient","initializeDefaultAppClient","RemoteMongoClient","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","myIcon","divIcon","html","searchStyle","MapView","state","currentLocation","userLocation","userLocationFound","modules","getpins","bind","getUserPosition","getDistance","toRadian","centerMap","newZip","mongodb","setState","this","origin","lon1","lat1","lon2","lat2","deltaLat","deltaLon","a","Math","pow","sin","cos","asin","sqrt","degree","PI","isLoggedIn","$ne","shared_with","userProfile","data","email","pin_array","i","length","obj","refs","leafletElement","doubleClickZoom","disable","setTimeout","enable","setView","zip_code","prompt","fetch","response","json","records","fields","geopoint","alert","Marker","icon","Popup","Map","ref","maxZoom","TileLayer","info","idx","location","assign","faStreetView","size","faSearchLocation","Component","userMode","username","useremail","userID","stitch_res","menuOpen","open","usermode","first_name","picture","$and","user_id","credential","GoogleRedirectCredential","loginWithRedirect","logout","reload","temp_module_name","owner","viewrmenu","href","creatormenu","StyledMenu","setOpen","center_container","top","data-toggle","aria-pressed","autoComplete","set_usermode","userImg","alt","maxHeigh","maxWidth","listStyleType","paddingLeft","current","opacity","fontColor","styled","nav","Login","login","hasRedirectResult","handleRedirectResult","user","class","margin","StyledBurger","button","Burger","NavMenu","React","Module","fileToBase64","filename","filepath","Promise","file","File","reader","onload","event","current_position","module_info","base64img","accessed_links","fetch_userinfo","update_user","initializeAppClient","undefined","includes","$addToSet","Container","EditModule","ind","modal","modal2","copied","link","show_modal","show_modal2","hide_modal","hide_modal2","delete_pin_modal","share_modal","list_shared","add_email","delete_email","delete_email_modal","copy_clipboard","save_pin","delete_pin","list_pins","module_form","save_pin_order","save_module","textArea","select","execCommand","copy","modal_message","Modal","marginTop","closeButton","Button","preventDefault","returnNewDocument","$pull","multi","Row","form","Col","xs","FormGroup","FormControl","plaintext","readOnly","sz","maxHeight","overflowY","overflowX","Form","block","textarea","pathname","display","justifyContent","marginBottom","Check","inline","label","checked","values","oldIndex","newIndex","arrayMove","renderList","children","renderItem","index","deleteOne","splice","pin_ids","updateOne","Tabs","defaultActiveKey","transition","Tab","ViewModules","my_modules","shared_modules","img1","accessed_modules","module_results","goto_module_id","createRef","add_module_cards","fetch_modules","goto_module","0","1","2","$setOnInsert","options","userid","Card","Width","Img","Subtitle","Text","paddingTop","mds","module_card","CardDeck","defaultTab","my_modules_tab","query_modules","userQuery","$regex","$options","docs","forceUpdate","marginLeft","marginRight","onSubmit","controlId","ManageModules","toggle","list_modules","delete_module","add_module","save_modules","all","nextButtonStyle","previousButtonStyle","currentButtonStyle","ViewPinOnMap","pins_line","pins_array","current_pin_index","finish_modal","bounds","search","split","shareUrl","host","drawpins","clearInterval","interval","userloc","openPopup","temp","toggle_modal","FacebookShareButton","quote","FacebookIcon","go_home","marker_icon","len","openGoogle","ButtonGroup","nextPin","faArrowAltCircleRight","previousPin","faArrowAltCircleLeft","currentPin","faMapMarkerAlt","imgSrc","Completed","setUsername","useParams","App","Home","cleanUrl","join","stitchClient","basename","Navbar","Brand","exact","path","component","Boolean","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1c5712c6.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { BSON } from \"mongodb-stitch-browser-sdk\"\nimport { AwsServiceClient, AwsRequest } from 'mongodb-stitch-browser-services-aws'\nimport { Button, Form, Modal, Dropdown } from \"react-bootstrap\";\nimport { ObjectId } from \"mongodb\";\nimport { client, db } from \"./clientdb\"\nvar base64data = 'default'\n\n\nvar globalPosition = {};\n\nconst floatStyle = {\n    position: \"fixed\",\n    width: \"60px\",\n    height: \"60px\",\n    bottom: \"40px\",\n    right: \"40px\",\n    backgroundColor: \"#0C9\",\n    color: \"#FFF\",\n    borderRadius: \"50px\",\n    textAlign: \"center\",\n    boxShadow: \"2px 2px 3px #999\",\n    zIndex: 1500,\n};\n\nvar HandleFileChange = (props, e) => {\n    let fileReader = new FileReader();\n    fileReader.readAsDataURL(e.target.files[0])\n    fileReader.onloadend = (e) => {\n        props.setbase64data(e.target.result)\n        return e.target.result\n    }\n}\n\nconst HandleUpload = (base64data, id) => {\n    // Convert the base64 encoded image string to a BSON Binary object\n    var basestring = base64data.replace(/^data:image\\/\\w+;base64,/, '');\n    var fileBuffer = new Buffer(basestring, 'base64');\n    const binaryImageData = new BSON.Binary(new Uint8Array(fileBuffer), 0)\n\n    const aws = client.getServiceClient(AwsServiceClient.factory, \"capstoneusercontent\");\n    // These are the arguments specifically for the s3 service PutObject function\n    const args = {\n        ACL: 'public-read',\n        Bucket: \"capstoneusercontent\",\n        ContentType: \"image/jpeg\",\n        Key: id + '.jpeg',\n        ContentEncoding: 'base64',\n        Body: binaryImageData,\n        // or Body could be a BSON object\n    };\n\n    const request = new AwsRequest.Builder()\n        .withService(\"s3\")\n        .withAction(\"PutObject\")\n        .withRegion(\"us-west-2\") // this is optional\n        .withArgs(args); // depending on the service and action, this may be optional as well\n    aws.execute(request.build())\n        .then(result => {\n            console.log(result)\n        }).catch(err => {\n            console.log(err)\n        });\n}\n\nconst OpenFile = (props) => {\n    console.log(\"open file\")\n\n    console.log(props.base64data)\n    var srcurl = ''\n    if(props.base64data === 'default'){\n        srcurl = props.imgurl\n    }\n    else{\n        srcurl = props.base64data\n    }\n\n    return (\n        <div>\n            <input type=\"file\" multiple=\"single\" onChange={(e) => {\n                HandleFileChange(props, e)\n            }}></input>\n            <img style={{\n                height: '200px',\n                width : '300px'\n                    }} \n                src={srcurl}\n                onError={(e)=>{e.target.onerror = null; e.target.src='https://capstoneusercontent.s3-us-west-2.amazonaws.com/default.png'}}></img>\n              \n        </div>\n    )\n}\n\nexport const EditForm = (props) => {\n    const [pin, setPin] = useState(props.pin);\n    const handleInputChange = (e) => {\n        setPin({ ...pin, [e.target.name]: e.target.value });\n    };\n    const [imgurl, setimgurl] = useState(\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + props.id + \".jpeg?versionid=latest&date=\" + Date.now());\n\n\n    return (\n        <Modal {...props} centered show={props.show} style={{ zIndex: \"1600\" }}>\n            <Modal.Header>\n                <Modal.Title>Edit a Pin</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control\n                            type=\"title\"\n                            id=\"title\"\n                            name=\"title\"\n                            value={pin.title}\n                            onChange={handleInputChange}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control\n                            as=\"textarea\"\n                            rows=\"2\"\n                            id=\"description\"\n                            name=\"description\"\n                            value={pin.description}\n                            onChange={handleInputChange}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Hint</Form.Label>\n                        <Form.Control\n                            as=\"textarea\"\n                            rows=\"2\"\n                            id=\"hint\"\n                            name=\"hint\"\n                            value={pin.hint}\n                            onChange={handleInputChange}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Destination</Form.Label>\n                        <Form.Control\n                            id=\"destination\"\n                            name=\"destination\"\n                            value={pin.destination}\n                            onChange={handleInputChange}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <OpenFile base64data={props.base64data} setbase64data={props.setbase64data} imgurl={imgurl} setimgurl={setimgurl}></OpenFile>\n                        <img style={{\n                            height: '200px',\n                            width: '300px'\n                        }} src={imgurl}></img>\n                    </Form.Group>\n                </Form>\n\n            </Modal.Body>\n            <Modal.Footer>\n            <Button variant=\"secondary\" onClick={\n                    () =>{\n                        props.cancel()\n                        props.setbase64data('default')\n                    }\n                    }>\n                    Cancel\n                </Button>\n                <Button\n                    variant=\"primary\"\n                    onClick={() => {\n                        /*\n                  \n                                          const title =\n                                              document.getElementById(\"title\").value || \"\";\n                                          const hint =\n                                              document.getElementById(\"hint\").value || \"\";\n                                          const description =\n                                              document.getElementById(\"description\").value || \"\";\n                                          const destination =\n                                              document.getElementById(\"destination\").value || \"\";\n                                          const query = { _id: props.objectID };\n                                          const update = {\n                                              $set: {\n                                                  title: title,\n                                                  description: description,\n                                                  hint: hint,\n                                                  destination: destination,\n                                              },\n                                          };\n                                          // update a pin on the database\n                                          db.collection(\"PINS\")\n                                              .findOneAndUpdate(query, update)\n                                              .then((objectID) => {\n                                                  console.log(objectID._id.toString())\n                                                  console.log(base64data)\n                                                  if(base64data === \"default\")\n                                                  {}\n                                                  else{\n                                                      //upload image\n                                                      HandleUpload(base64data, objectID._id.toString())\n                  \n                                                  }\n                                                  \n                                                  setDefaultValues({\n                                                      title: title,\n                                                      description: description,\n                                                      hint: hint,\n                                                      destination: destination\n                                                  });\n                                                  setimgurl(\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + props.id + \".jpeg?versionid=latest&date=\" + Date.now())\n                                                  props.cancel();\n                                              });\n                  */\n                        props.save(pin);\n                    }}\n                >\n                    Submit\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nconst PinMarker = (props) => {\n    const [modalShow, setModalShow] = useState(false);\n    const [base64data, setbase64data] = useState(\"default\");\n\n    return (\n        <Marker\n            key={globalPosition}\n            position={props.pin.coords}\n            onClick={() => {\n                setModalShow(!modalShow);\n            }}\n        >\n            <EditForm\n                pin={props.pin}\n                id={props.pin._id}\n                show={modalShow}\n                save={(pin) => {\n                    const query = { _id: pin._id };\n                    const update = {\n                        $set: pin,\n                    };\n                    // update a pin on the database\n                    db.collection(\"PINS\")\n                        .findOneAndUpdate(query, update)\n                        .then((objectID) => {\n                            if (base64data === \"default\") { }\n                            else {\n                                //upload image\n                                HandleUpload(base64data, objectID._id.toString())\n                                setbase64data(\"default\")\n\n                            }\n                            setModalShow(false);\n\n                        });\n                }}\n                cancel={() => setModalShow(false)}\n                setbase64data={setbase64data}\n                base64data={base64data}\n            />\n        </Marker>\n    );\n};\n\nconst AddpinForm = (props) => {\n    const [placeholder, setPlaceHolder] = useState({\n        hint: \"\",\n        description: \"\"\n    });\n    const [categories, setCategories] = useState([]);\n    useEffect(() => {\n        db.collection(\"CATEGORIES\")\n            .find({})\n            .asArray()\n            .then(setCategories);\n    }, []);\n\n    return (\n        <Modal {...props} centered style={{ zIndex: \"1600\" }}>\n            <Modal.Header>\n                <Modal.Title>Add a Pin</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form.Group>\n                    <Form.Label>Category</Form.Label>\n                    <Dropdown\n                        onSelect={(e) => {\n                            setPlaceHolder(JSON.parse(e));\n                        }}\n                    >\n                        <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                            Dropdown Button\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {categories.map(curr => {\n                                const placeholders = { description: curr.description, hint: curr.hint };\n                                return (<Dropdown.Item\n                                    eventKey={JSON.stringify(placeholders)}\n                                >\n                                    {curr.title}\n                                </Dropdown.Item>)\n                            }\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Form.Group>\n                <label className=\"d-block\" htmlFor=\"title\">\n                    Title\n                </label>\n                <input type=\"text\" className=\"w-100\" id=\"title\" required />\n                <label className=\"d-block\" htmlFor=\"description\">\n                    Description\n                </label>\n                <textarea className=\"w-100\" id=\"description\" placeHolder={placeholder.description} required />\n                <label className=\"d-block\" htmlFor=\"hint\">\n                    Hint\n                </label>\n                <textarea className=\"w-100\" id=\"hint\" placeHolder={placeholder.hint} required />\n                <label className=\"d-block\" htmlFor=\"destination\">\n                    Student Feedback\n                </label>\n                <textarea className=\"w-100\" id=\"destination\" required />\n                <label className=\"d-block\" htmlFor=\"pinImage\">\n                    Image\n                </label>\n                <OpenFile base64data={props.base64data} setbase64data={props.setbase64data}> </OpenFile>\n            </Modal.Body>\n            <Modal.Footer>\n            <button className=\"btn btn-secondary\" onClick={ ()=> {\n                    props.onHide() \n                    props.setbase64data(\"default\")\n                }}>\n                    Cancel\n                </button>\n                <button\n                    className=\"btn btn-primary\"\n                    onClick={() => {\n                        const title =\n                            document.getElementById(\"title\").value || \"\";\n                        const hint =\n                            document.getElementById(\"hint\").value || \"\";\n                        const description =\n                            document.getElementById(\"description\").value || \"\";\n                        const destination =\n                            document.getElementById(\"destination\").value || \"\";\n                        const { lng, lat } = globalPosition;\n                        // insert a new pin on the database\n                        const pin = {\n                            title: title,\n                            owner_id: client.auth.authInfo.userId,\n                            description: description,\n                            hint: hint,\n                            destination: destination,\n                            audio: \"\",\n                            video: \"\",\n                            coords: [lat, lng],\n                        };\n                        db.collection(\"PINS\")\n                            .insertOne(pin)\n                            .then((res) => {\n                                if (props.base64data === \"default\") { }\n                                else {\n                                    //upload image\n                                    HandleUpload(props.base64data, res.insertedId.toString())\n                                    props.setbase64data(\"default\")\n\n                                }\n                                // add the new pin to the map on success of adding the pin to\n                                // to the database\n                                props.setMarkers([\n                                    ...props.markers,\n                                    <PinMarker\n\n                                        id={res.insertedId.toString()}\n                                        description={description}\n                                        hint={hint}\n                                        destination={destination}\n                                        title={title}\n                                        objectID={res.insertedId}\n                                        lng={lng}\n                                        lat={lat}\n\n                                        key={res.insertedId}\n                                        pin={pin}\n\n                                    />,\n                                ]);\n                                var module = props.module;\n                                module.pins = [...module.pins, res.insertedId];\n                                props.setModule(module);\n                                const query = { _id: module._id };\n                                const update = {\n                                    $set: {\n                                        pins: module.pins,\n                                    },\n                                };\n                                const options = { upsert: false };\n                                db.collection(\"MODULES\")\n                                    .findOneAndUpdate(query, update, options)\n                                    .then((res) => { })\n                                    .catch(console.error);\n                            });\n                        props.onHide();\n                    }}\n                >\n                    Submit\n                </button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nconst DropPin = (props) => {\n    const [position, setPosition] = useState([45, 45]);\n    const [markers, setMarkers] = useState([]);\n    const [canPlacePin, setCanPlacePin] = useState(false);\n    const [modalShow, setModalShow] = useState(false);\n    const [base64data, setbase64data] = useState(\"default\");\n    const [module, setModule] = useState({\n        _id: \"\",\n        title: \"\",\n        owner_email: \"\",\n        owner_id: \"\",\n        owner_name: \"\",\n        description: \"\",\n        pins: [],\n        shared_array: [],\n        public: false,\n    });\n\n    // Getting the users current location\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((pos) => {\n            const { latitude, longitude } = pos.coords;\n            setPosition([latitude, longitude]);\n        });\n    }, []);\n\n    // Getting the module and pins for the module\n    useEffect(() => {\n        const query = {\n            _id: ObjectId(props.match.params.id),\n        };\n        db.collection(\"MODULES\")\n            .findOne(query)\n            .then((res) => {\n                setModule(res);\n\n                // Pipeline to ensure that the order of the pins stays the same after the query\n                const pipeline = [\n                    { $match: { _id: { $in: res.pins } } },\n                    {\n                        $addFields: {\n                            __order: { $indexOfArray: [res.pins, \"$_id\"] },\n                        },\n                    },\n                    { $sort: { __order: 1 } },\n                ];\n\n                db.collection(\"PINS\")\n                    .aggregate(pipeline)\n                    .toArray()\n                    .then((res) => {\n                        setMarkers(\n                            res.map((pin) => {\n                                return <PinMarker\n                                    key={pin._id} pin={pin}\n                                    setbase64data={setbase64data}\n                                    base64data={base64data}\n                                />;\n                            })\n                        );\n                    });\n            })\n            .catch(console.error);\n    }, [props.match.params.id]);\n\n    return (\n        <Map\n            center={position}\n            zoom={13}\n            onClick={(e) => {\n                if (canPlacePin) {\n                    globalPosition = e.latlng;\n                    setModalShow(true);\n                    setCanPlacePin(!canPlacePin);\n                }\n            }}\n        >\n            <AddpinForm\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                setMarkers={setMarkers}\n                markers={markers}\n                setModule={setModule}\n                module={module}\n                setbase64data={setbase64data}\n                base64data={base64data}\n            />\n            <button\n                style={{\n                    zIndex: 1500,\n                    position: \"fixed\",\n                    bottom: \"10px\",\n                    left: \"10px\",\n                    textAlign: \"center\",\n                }}\n                className=\"btn btn-primary\"\n                onClick={() => {\n                    window.history.back();\n                }}\n            >\n                Save\n            </button>\n            <button\n                style={floatStyle}\n                onClick={() => setCanPlacePin(!canPlacePin)}\n            >\n                <div style={{ fontSize: \"40px\" }}>+</div>\n            </button>\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            <Marker position={position}>\n                <Popup>Your location</Popup>\n            </Marker>\n            {markers}\n        </Map>\n    );\n};\n\nexport default DropPin;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 229;","import { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\"\n\nconst appId = \"capstonear_app-xkqng\";\nexport const client = Stitch.hasAppClient(appId)\n    ? Stitch.getAppClient(appId)\n    : Stitch.initializeDefaultAppClient(appId);\nconst mongodb = client.getServiceClient(\n    RemoteMongoClient.factory,\n    \"mongodb-atlas\"\n);\nexport const db = mongodb.db(\"APP\");","import React, {Component} from 'react'\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport L from 'leaflet'\nimport {Stitch, RemoteMongoClient, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\nimport { ObjectId } from 'mongodb'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStreetView,faSearchLocation } from '@fortawesome/free-solid-svg-icons'\n\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nconst Style = {\n  position: \"fixed\",\n  width: \"60px\",\n  height: \"60px\",\n  bottom: \"40px\",\n  right: \"40px\",\n  backgroundColor: \"#0C9\",\n  color: \"#FFF\",\n  textAlign: \"center\",\n  boxShadow: \"2px 2px 3px #999\",\n  zIndex: 1500\n}\nvar greenIcon = new L.Icon({\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\nvar myIcon = new L.divIcon({\n  className: 'my-div-icon',\n  html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png\"/>'\n})\n\nconst floatStyle = {\n  position: \"fixed\",\n  width: \"60px\",\n  height: \"60px\",\n  bottom: \"40px\",\n  right: \"40px\",\n  backgroundColor: \"#0C9\",\n  color: \"#FFF\",\n  borderRadius: \"50px\",\n  textAlign: \"center\",\n  boxShadow: \"2px 2px 3px #999\",\n  zIndex: 1500,\n};\nconst searchStyle = {\n  position: \"fixed\",\n  width: \"60px\",\n  height: \"60px\",\n  bottom: \"40px\",\n  right: \"120px\",\n  backgroundColor: \"purple\",\n  color: \"#FFF\",\n  borderRadius: \"50px\",\n  textAlign: \"center\",\n  boxShadow: \"2px 2px 3px #999\",\n  zIndex: 1500,\n};\n\nclass MapView extends Component{\n  constructor(props){\n    super(props)\n\n    this.state ={\n      currentLocation: {lat: 45.51, lng:-122.68},\n      zoom: 13,\n      userLocation:[],\n      userLocationFound: false,\n      modules: [],\n      pins: [],\n    }\n\n  this.getpins = this.getpins.bind(this)\n  this.getUserPosition = this.getUserPosition.bind(this)\n  this.getDistance = this.getDistance.bind(this)\n  this.toRadian = this.toRadian.bind(this)\n  this.centerMap = this.centerMap.bind(this)\n  this.newZip = this.newZip.bind(this)\n\n\n  const appId = \"capstonear_app-xkqng\"\n  this.client = Stitch.hasAppClient(appId)\n  ? Stitch.getAppClient(appId)\n  : Stitch.initializeDefaultAppClient(appId)\n  const mongodb = this.client.getServiceClient(\n  RemoteMongoClient.factory,\n  \"mongodb-atlas\"\n  );\n  this.db = mongodb.db(\"APP\"); \n  }\n  \n\n  getUserPosition(){\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\n      \n      console.log(this.state)\n      \n    })\n  \n  }\n\n  componentDidMount(){\n    this.getUserPosition()\n    this.getpins()\n\n  }\n\n  //find distance between two points in meters. Returns true for less than meters or false if not\n  getDistance(origin, destination) {\n    var lon1 = this.toRadian(origin[1]);\n    var lat1 = this.toRadian(origin[0]);\n    var lon2 = this.toRadian(destination[1]);\n    var lat2 = this.toRadian(destination[0]);\n\n    var deltaLat = lat2 - lat1;\n    var deltaLon = lon2 - lon1;\n\n    var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\n    var c = 2 * Math.asin(Math.sqrt(a));\n    var EARTH_RADIUS = 6371;\n    var d = c * EARTH_RADIUS * 1000;\n\n    // 24000 meters ~ 15 miles\n    if(d < 35000)\n      return true;\n    else\n      return false;\n  }\n\n  toRadian(degree) {\n    return degree*Math.PI/180;\n  }\n\n  async getpins() {\n    if(!this.client.auth.isLoggedIn){\n      return\n    }\n    await this.db.collection(\"MODULES\")\n      .find({\n        owner_id: { $ne: this.client.auth.authInfo.userId},\n        shared_with: { $ne: this.client.auth.authInfo.userProfile.data.email},\n        public: true,\n        pins: { $ne: []},\n      })\n      .asArray()\n      .then((res) => {\n        this.setState({modules: res})\n        res = res.map(curr => {\n          curr = curr.pins[0];\n          return curr;\n        })\n        this.setState({pin_array: res})\n        console.log(\"Pin Array: \", res);\n        console.log(\"Modules: \", this.state.modules);\n      })\n\n    await this.db\n      .collection(\"PINS\")\n      .find({\n        _id: { $in: [...this.state.pin_array]}\n      })\n      .toArray()\n      .then((res) => {\n        res = res.map(curr => {\n          curr = curr.coords;\n          return curr;\n        })\n        console.log(\"Pins: \", res);\n        this.setState({ pins: res });\n      });\n\n    // limits pins to only those within specific miles of userlocation\n    var pins = [...this.state.pins];\n    var modules = [...this.state.modules];\n    for(var i = 0; i < this.state.pins.length; i++) {\n      if(!this.getDistance(this.state.userLocation, this.state.pins[i])) {\n        if(i !== -1)\n          delete pins[i];\n          delete modules[i];\n      }\n    }\n    this.setState({ pins: pins });\n    this.setState({ modules: modules});\n  }\n\n  centerMap(obj,coords)\n  {\n\n    if(this.state.userLocation.length!=0)\n    {\n      this.getUserPosition()\n      const map = this.refs.map.leafletElement;\n      map.doubleClickZoom.disable();\n      setTimeout(function() {\n         map.doubleClickZoom.enable();\n      }, 1000);\n      map.setView(coords, 13);\n      \n     \n    }\n    else\n    {\n      var zip_code = prompt(\"Please enter your zip code\");\n      if (zip_code != null) {\n        fetch('https://public.opendatasoft.com/api/records/1.0/search/?dataset=us-zip-code-latitude-and-longitude&q='+zip_code+'&facet=state&facet=timezone&facet=dst')\n        .then(response => response.json())\n        .then(data => this.setState({currentLocation:data.records[0].fields.geopoint,userLocation:data.records[0].fields.geopoint}));\n        //console.log(data.records[0].fields.geopoint))\n        this.getpins(); \n        \n      }\n    }\n\n  }\n  newZip()\n  {\n    //var zip_code = null;\n    var zip_code = prompt(\"Please enter your zip code\");\n      if (zip_code != null) {\n        fetch('https://public.opendatasoft.com/api/records/1.0/search/?dataset=us-zip-code-latitude-and-longitude&q='+zip_code+'&facet=state&facet=timezone&facet=dst')\n        .then(response => response.json())\n        .then(data => this.setState({currentLocation:data.records[0].fields.geopoint,userLocation:data.records[0].fields.geopoint}))\n        .catch( (err) => {\n          console.log(err)\n          alert(\"you have entered a nuclear code\")\n          }\n            \n         )\n        \n        //console.log(data.records[0].fields.geopoint))\n        this.getpins(); \n\n\n      }\n  }\n\n  render(){\n    const userLocation = this.state.userLocationFound ? (\n      <Marker position={this.state.userLocation} icon= {myIcon} >\n        <Popup >Your location</Popup>\n      </Marker>\n    ) :  (\n      <Marker position={this.state.currentLocation} icon= {myIcon} >\n        <Popup >Your location</Popup>\n      </Marker>\n    )\n\n    return (\n      <div id='leaflet-container'>\n      <Map ref='map' center={this.state.currentLocation} zoom={13} maxZoom={18} >\n        <TileLayer\n          \n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n        />\n        {userLocation}   \n        {this.state.pins.map((info,idx) => {\n            return <Marker \n              key = {idx} position={info} \n              icon= {new L.divIcon({\n                className: 'my-div-icon',\n                html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png\"/>' \n              })} >\n              <Popup>\n                <h1>{this.state.modules[idx].title}</h1>\n                <p>{this.state.modules[idx].description}</p>\n                <p>{this.state.modules[idx].owner_name}</p>\n                <p>{this.state.modules[idx].owner_email}</p>\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={() =>\n                  window.location.assign(\"#/module/\" + this.state.modules[idx]._id)\n                  }\n                  >View Details</button>\n              </Popup>\n            </Marker>\n          })}  \n          <button style={floatStyle} onClick={()=>this.centerMap(this,this.state.userLocation)} >\n            <div><FontAwesomeIcon icon={faStreetView} size=\"3x\" /></div>\n          </button>\n          <button style={searchStyle} onClick={()=>this.newZip()} >\n            <div><FontAwesomeIcon icon={faSearchLocation} size=\"3x\" /></div>\n          </button>\n          \n      </Map>\n      </div>\n    );\n    }\n}\n\nexport default MapView;","export let userMode = true;\n\nexport function toggle_usermode() {\n    userMode = !userMode;\n    return userMode;\n}","import React, { Component } from \"react\";\nimport {\n    Stitch,\n    RemoteMongoClient,\n    GoogleRedirectCredential,\n} from \"mongodb-stitch-browser-sdk\";\nimport { ObjectId } from \"mongodb\";\nimport { db } from \"../clientdb\";\nimport styled from \"styled-components\";\nimport { userMode, toggle_usermode } from \"../mode\";\nimport './toggle.css';\n \nclass Menu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            useremail: \"\",\n            userID: \"\",\n            stitch_res: [],\n            menuOpen: this.props.open,\n            usermode: userMode, //usermode  true = viewer, false = creator\n        };\n\n        console.log(props);\n        const appId = \"capstonear_app-xkqng\";\n        if (Stitch.hasAppClient(appId)) {\n            this.client = Stitch.getAppClient(appId);\n            const mongodb = this.client.getServiceClient(\n                RemoteMongoClient.factory,\n                \"mongodb-atlas\"\n            );\n            //select the db in our mongdb atlas cluster\n            this.db = mongodb.db(\"APP\");\n        }\n    }\n\n    async componentDidMount() {\n        //init mongodb stitch\n\n        if (\n            this.client.auth.isLoggedIn &&\n            this.client.auth.authInfo.userProfile\n        ) {\n            const username = this.client.auth.authInfo.userProfile.data.first_name;\n            const userID = this.client.auth.authInfo.userId;\n            this.setState({\n                username,\n                userID,\n                useremail: this.client.auth.authInfo.userProfile.data.email,\n                userID: this.client.auth.authInfo.userId,\n                userImg: this.client.auth.authInfo.userProfile.data.picture,\n            });\n            db.collection(\"USERS\")\n                .findOne({ $and: [ { user_id: userID }, { username }] })\n                .then((data)=> {\n                    if(data) return;\n                    db.collection(\"USERS\")\n                        .findOneAndUpdate({ user_id: userID }, { $set: { username } })\n                })\n            console.log(this.client.auth.authInfo.userProfile.data);\n        }\n    }\n\n    //login button handler\n    async login() {\n        //login using google redirect\n        const credential = new GoogleRedirectCredential();\n        this.client.auth.loginWithRedirect(credential);\n        console.log(this.state);\n    }\n    async logout() {\n        await this.client.auth.logout();\n        this.setState({\n            username: \"\",\n            useremail: \"\",\n            userID: \"\",\n        });\n        window.location.reload();\n    }\n\n\n    addamodule() {\n        this.db\n            .collection(\"MODULES\")\n            .insertOne({\n                owner_id: this.state.userID,\n                name: this.state.temp_module_name,\n                owner: this.state.useremail,\n            })\n            .catch(console.error);\n    }\n\n    listmymodules() {\n        if (!this.client.auth.isLoggedIn) {\n            return;\n        }\n        this.db\n            .collection(\"PINS\")\n            .find({ _id: ObjectId(\"5ebed1bc5992681f357d7948\") })\n            .asArray()\n            .then((stitch_res) => {\n                this.setState({ stitch_res });\n                console.log(this.state.stitch_res[0]);\n            });\n    }\n\n    set_usermode() {\n        this.setState({usermode: toggle_usermode()})\n    }\n\n    render() {\n\n        //viewer menu\n        const viewrmenu = this.state.usermode ? (\n            <div>\n                <li>\n                <a href=\"#/modules/student\">View Modules</a>\n                </li>\n                <br />\n            </div>\n        ) : null\n\n        //creator menu\n\n        const creatormenu = this.state.usermode ? null : (\n            <div>\n                <li>\n                    <a href=\"#/modules/instructor\">View Modules</a>\n                </li>\n                <br />\n                <li>\n                    <a href=\"#/modules/edit\">Create Modules</a>\n                </li>\n                <br />\n            </div>\n        ) \n        return (\n            <StyledMenu\n                open={this.props.open}\n                setOpen={this.props.setOpen}\n                center_container={this.props.center_container}\n                style={{}}\n            >\n                <div\n                    style={{\n                        position: \"absolute\",\n                        top: \"2rem\",\n                    }}\n                >\n                    <div>\n                        <button type=\"button\" \n                            className={`btn btn-md btn-toggle ${this.state.usermode || \"active\"}`} \n                            data-toggle=\"button\" aria-pressed={this.state.usermode || \"true\"} \n                            autoComplete=\"off\"\n                            onClick={()=>this.set_usermode()}\n                        >\n                            <div className=\"handle\" />\n                        </button>\n                    </div>\n                    <img\n                        src={this.state.userImg}\n                        alt=\"test\"\n                        style={{\n                            maxHeigh: \"80px\",\n                            maxWidth: \"80px\",\n                            borderRadius: \"50%\",\n                            top: \"1rem\",\n                        }}\n                    ></img>\n                    <p\n                        style={{\n                            fontSize: \"1.5rem\",\n                            top: \"4rem\",\n                            color: \"white\",\n                            zIndex: 1002,\n                        }}\n                    >\n                        {\" \"}\n                        Welcome, <br /> {this.state.username}{\" \"}\n                    </p>\n\n                </div>\n\n               \n                \n\n                <ul\n                    style={{ listStyleType: \"none\", paddingLeft: 0}}\n                    onClick={() => {\n                        this.props.center_container.center_container.current.style.opacity = 1;\n                        this.props.setOpen(!this.props.open);\n                    }}\n                >\n                    \n                    <li>\n                        <a href=\"#/\">Home</a>\n                    </li>\n                    <br />\n                    \n                    {viewrmenu}\n                    {creatormenu}\n\n                </ul>\n\n                <a\n                    href=\"#/logout\"\n                    onClick={this.logout}\n                    style={{\n                        position: \"absolute\",\n                        fontSize: \"1rem\",\n                        fontColor: \"#00000\",\n                        bottom: \"10rem\",\n                    }}\n                >\n                    Log Out\n                </a>\n            </StyledMenu>\n        );\n    }\n}\n\n// menu style sheet\n// tutorial from https://css-tricks.com/hamburger-menu-with-a-side-of-react-hooks-and-styled-components/ with modified styles\nconst StyledMenu = styled.nav`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background: #343a40;\n    transform: ${({ open }) =>\n        open ? \"translateX(-100)\" : \"translateX(100%)\"};\n    height: 100vh;\n    text-align: left;\n    padding: 2rem;\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    transition: transform 0.3s ease-in-out;\n    z-index: 1501;\n    @media (max-width: 150px) {\n        width: 100%;\n    }\n    a {\n        font-size: 1.5rem;\n        text-transform: uppercase;\n        padding: 2rem 0;\n        font-weight: Light;\n        letter-spacing: 0.5rem;\n        color: #FFFFF;\n        text-decoration: none;\n        transition: color 0.3s linear;\n        @media (max-width: 150px) {\n            font-size: 1rem;\n            text-align: center;\n        }\n        &:hover {\n            color: #343078;\n        }\n    }\n`;\n\nexport default Menu;","import React, {Component} from 'react'\nimport './Login.css'\nimport {Stitch, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\n\nexport default class Login extends Component{\n    constructor(){\n        super()\n        const appId = \"capstonear_app-xkqng\"\n        this.client = Stitch.getAppClient(appId)\n        this.login = this.login.bind(this)\n    }\n\n    componentDidMount(){\n      if (this.client.auth.hasRedirectResult()) {\n        console.log(\"has results\")\n  \n        this.client.auth.handleRedirectResult().then(user => {\n          this.setState(\n            {\n              username: this.client.auth.authInfo.userProfile.data.name,\n              useremail: this.client.auth.authInfo.userProfile.data.email,\n              userID: this.client.auth.authInfo.userId,\n  \n            }\n          )\n          window.location.assign('#/')\n        }\n        )\n      }\n        \n       \n    }\n\n\n    async login(){\n          \n          //login using google redirect\n          const credential = new GoogleRedirectCredential();\n          await this.client.auth.loginWithRedirect(credential);\n          console.log(this.state)\n          \n        \n    }\n\n\n  render() {\n    return (\n      \n          <div class=\"row justify-content-center\" style={{\n            position: \"fixed\",\n            margin: \"auto\",\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0,\n            height: \"50px\"\n          }}>\n              <button class=\"btn btn-primary\"onClick={this.login}>Login with Google</button>\n          </div>\n      \n    )\n  }\n}","import React from 'react'\nimport styled from 'styled-components'\nimport Menu from './Menu'\n\n\nconst StyledBurger = styled.button`\n  position: fixed;\n  top: 10px;\n  right: 2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 2rem;\n  height: 2rem;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 1502;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 2rem;\n    height: 0.25rem;\n    background: ${({ open }) => open ? '#FFFFFF' : '#FFFFFF'};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => open ? '0' : '1'};\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`\n\nconst Burger = ({ open, setOpen, center_container }) => {\n  console.log(center_container.center_container.current)\n  return (\n    <StyledBurger open={open} onClick={() => {\n      setOpen(!open)\n      if(!open)\n        center_container.center_container.current.style.opacity = .5 \n      else\n        center_container.center_container.current.style.opacity = 1\n    }}>\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  )\n}\n\n\n\n\nconst NavMenu = (center_container) => {\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <div>\n        <Burger open={open} setOpen={setOpen} center_container={center_container} />\n        <Menu open={open} setOpen={setOpen} center_container={center_container}/>\n        </div>\n    )\n}\n\nexport default NavMenu","import React, { Component} from 'react'\n\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport {Container} from 'react-bootstrap'\nimport 'leaflet/dist/leaflet.css'\nimport {Stitch,RemoteMongoClient,BSON} from \"mongodb-stitch-browser-sdk\"\nimport {AwsServiceClient, AwsRequest } from 'mongodb-stitch-browser-services-aws'\nimport {ObjectId} from 'mongodb'\n//const BSON = require('bson');\n\nexport default class Module extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            current_position:[],\n            module_info: {\n                name:'',\n                owner_email: '',\n                owner_id: '',\n                owner_name: '',\n                description: '',\n            },\n          \n            base64img:'',\n            user: {\n                _id: '',\n                user_id: '',\n                accessed_links: [],\n            },\n\n        }\n\n        this.getUserPosition = this.getUserPosition.bind(this)\n        this.fetch_userinfo = this.fetch_userinfo.bind(this)\n\n        this.update_user = this.update_user.bind(this);\n\n        const appId = \"capstonear_app-xkqng\"\n        if (Stitch.hasAppClient(appId)) {\n            this.client = Stitch.getAppClient(appId)\n            const mongodb = this.client.getServiceClient(\n                RemoteMongoClient.factory,\n                \"mongodb-atlas\"\n              );\n              //select the db in our mongdb atlas cluster\n              this.db = mongodb.db(\"APP\");\n            console.log(\"client\")\n        }\n        else{\n            this.client = Stitch.initializeAppClient(appId)\n            console.log(\"client init\")\n        }\n    }\n\n    componentDidMount(){\n\n        this.getUserPosition()\n        this.fetch_userinfo()\n\n        const appId = \"capstonear_app-xkqng\"\n        if (Stitch.hasAppClient(appId)) {\n            this.client = Stitch.getAppClient(appId)\n            const mongodb = this.client.getServiceClient(\n                RemoteMongoClient.factory,\n                \"mongodb-atlas\"\n              );\n              //select the db in our mongdb atlas cluster\n              this.db = mongodb.db(\"APP\");\n            console.log(\"client\")\n        }\n        else{\n            this.client = Stitch.initializeAppClient(appId)\n            console.log(\"client init\")\n        }\n    }\n\n    async fetch_userinfo(){\n        await this.db.collection(\"MODULES\").find({\n            _id: ObjectId(this.props.match.params.id)\n        })\n        .asArray()\n        .then((module_info) => {\n            if(module_info === undefined || module_info.length === 0)\n            {\n                console.log(module_info)\n                return\n            }\n            this.setState({module_info: module_info[0]}\n            )\n          console.log(module_info)\n        }\n        )\n        .catch((err) => {this.setState({error: err})\n         console.log(err)\n        }\n        )\n\n        const query = {\n            user_id: this.client.auth.authInfo.userId,\n        };\n        await this.db\n            .collection(\"USERS\")\n            .findOne(query)\n            .then((res) => {\n                console.log(\"User: \", res);\n\n                this.setState({ user: res });\n            })\n            .catch(console.error);\n\n        this.update_user();\n    }\n\n    getUserPosition(){\n        navigator.geolocation.getCurrentPosition(position => {\n          this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\n          \n          console.log(this.state)\n          \n        })\n    }\n\n    update_user() {\n        if(\n            this.client.auth.authInfo.userId != this.state.module_info.owner_id && this.state.module_info.public == true && !this.state.module_info.shared_with.includes(this.client.auth.authInfo.userProfile.email)){\n            const query = {\n                _id: this.state.user._id,\n                user_id: this.client.auth.authInfo.userId,\n            };\n            const update = { $addToSet: { accessed_links: ObjectId(this.state.module_info._id) } };\n    \n            this.db\n                .collection(\"USERS\")\n                .findOneAndUpdate(query, update)\n                .then((res) => {\n                    console.log(\"Update response: \", res);\n                })\n                .catch(console.error);\n        }\n    }\n\n    renderMap(){\n        const userLocation = this.state.userLocationFound ? (\n            <Marker position={this.state.userLocation}>\n              <Popup >Your location</Popup>\n            </Marker>\n          ) : null\n\n        return (\n        <div id='leaflet-container'>\n        <Map center={this.state.currentLocation} zoom={13} maxZoom={18} >\n            <TileLayer\n            \n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n            />\n            {userLocation}     \n        </Map>\n        </div>\n        )   \n    }\n\n\n    fileToBase64 = (filename, filepath) => {\n        return new Promise(resolve => {\n          var file = new File([filename], filepath);\n          var reader = new FileReader();\n          // Read file content on file loaded event\n          reader.onload = function(event) {\n            resolve(event.target.result);\n          };\n          \n          // Convert data to base64 \n          reader.readAsDataURL(file);\n        });\n      };\n\n\n    render(){\n      \n        return(\n            <Container>\n                title: \n                <br />\n                {this.state.module_info.title}\n                <br />\n                <br />\n\n                owner_email: \n                <br />\n                {this.state.module_info.owner_email}\n                <br />\n                <br />\n\n                owner_name: \n                <br />\n                {this.state.module_info.owner_name}\n                <br />\n                <br />\n\n                owner_id: \n                <br />\n                {this.state.module_info.owner_id}\n                <br />\n                <br />\n\n                description: \n                <br />\n                {this.state.module_info.description}\n                <br />\n                <br />\n              \n             \n        \n\n                <button className='btn btn-primary' \n                        onClick={() =>\n                            window.location.assign(\n                                \"#/module/\" + this.state.module_info._id+\"/pins\"\n                        )}\n                        >start module</button>\n            </Container>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport {\n    Container,\n    Row,\n    Col,\n    Form,\n    Button,\n    Tabs,\n    Tab,\n    Modal,\n    FormControl,\n    FormGroup,\n} from \"react-bootstrap\";\nimport { List, arrayMove } from \"react-movable\";\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport { ObjectId } from \"mongodb\";\nimport \"./EditModule.css\";\n\nimport { EditForm } from \"./DropPin\";\n\n// @classdesc Used to make the Edit Module view.\nexport default class EditModule extends Component {\n    // Creates a new EditModule\n    // @param {Object} props\n    // @class\n    constructor(props) {\n        super(props);\n        this.state = {\n            module_info: {\n                _id: \"\",\n                title: \"\",\n                owner_email: \"\",\n                owner_id: \"\",\n                owner_name: \"\",\n                description: \"\",\n                pins: [],\n                shared_with: [],\n                public: false,\n            },\n            email: \"\",\n            shared_with: [],\n            pins: [],\n            idx: -1,\n            ind: -1,\n            modal: null,\n            modal2: null,\n            copied: false,\n            link: \"\",\n        };\n\n        this.fetch_userinfo = this.fetch_userinfo.bind(this);\n\n        this.show_modal = this.show_modal.bind(this);\n        this.show_modal2 = this.show_modal2.bind(this);\n        this.hide_modal = this.hide_modal.bind(this);\n        this.hide_modal2 = this.hide_modal2.bind(this);\n        this.delete_pin_modal = this.delete_pin_modal.bind(this);\n        this.share_modal = this.share_modal.bind(this);\n        this.list_shared = this.list_shared.bind(this);\n        this.add_email = this.add_email.bind(this);\n        this.delete_email = this.delete_email.bind(this);\n        this.delete_email_modal = this.delete_email_modal.bind(this);\n        this.copy_clipboard = this.copy_clipboard.bind(this);\n\n        this.save_pin = this.save_pin.bind(this);\n        this.delete_pin = this.delete_pin.bind(this);\n        this.list_pins = this.list_pins.bind(this);\n        this.module_form = this.module_form.bind(this);\n        this.save_pin_order = this.save_pin_order.bind(this);\n        this.save_module = this.save_module.bind(this);\n\n        const appId = \"capstonear_app-xkqng\";\n        this.client = Stitch.hasAppClient(appId)\n            ? Stitch.getAppClient(appId)\n            : Stitch.initializeDefaultAppClient(appId);\n        const mongodb = this.client.getServiceClient(\n            RemoteMongoClient.factory,\n            \"mongodb-atlas\"\n        );\n        this.db = mongodb.db(\"APP\");\n\n        this.fetch_userinfo();\n    }\n\n    // Gets the module ID from the routing parameter and uses it to get the\n    // associated module and pins for that module.\n    // @return {Promise} Query to set state.module_info and state.pins\n    async fetch_userinfo() {\n        const query = {\n            _id: ObjectId(this.props.match.params.id),\n        };\n\n        await this.db\n            .collection(\"MODULES\")\n            .findOne(query)\n            .then((res) => {\n                console.log(\"Module: \", res);\n                this.setState({ module_info: res });\n\n                // Pipeline to ensure that the order of the pins stays the same after the query\n                const pipeline = [\n                    { $match: { _id: { $in: res.pins } } },\n                    {\n                        $addFields: {\n                            __order: { $indexOfArray: [res.pins, \"$_id\"] },\n                        },\n                    },\n                    { $sort: { __order: 1 } },\n                ];\n\n                this.db\n                    .collection(\"PINS\")\n                    .aggregate(pipeline)\n                    .toArray()\n                    .then((res) => {\n                        console.log(\"Pins: \", res);\n                        this.setState({ pins: res });\n                    });\n            })\n            .catch(console.error);\n    }\n\n    // copies textarea to clipboard and sets copy state\n    copy_clipboard() {\n        const e = this.textArea;\n        e.select();\n        document.execCommand(\"copy\");\n        this.setState({ copy: true });\n    }\n\n    // Sets state.modal to true\n    show_modal(id) {\n        this.setState({ modal: id });\n    }\n\n    // Sets state.modal2 to true\n    show_modal2(id) {\n        this.setState({ modal2: id });\n    }\n\n    // Sets state.modal to false\n    hide_modal() {\n        this.setState({ modal: null });\n    }\n\n    // Sets state.modal2 to false\n    hide_modal2() {\n        this.setState({ modal2: null });\n    }\n\n    // @return {JSX.Element} Modal to confirm deletion\n    delete_pin_modal() {\n        var modal_message;\n        if (this.state.idx < 0) modal_message = <p>Nothing to delete</p>;\n        else\n            modal_message = (\n                <p>\n                    Are you sure you want to delete{\" \"}\n                    <b>{this.state.pins[this.state.idx].title}</b>?\n                </p>\n            );\n\n        return (\n            <Modal\n                // size=\"sm\"\n                show={this.state.modal === \"delete\"}\n                onHide={(e) => {\n                    this.hide_modal();\n                }}\n                style={{\n                    marginTop: \"50px\",\n                }}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Confirm Deletion</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{modal_message}</Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        variant=\"danger\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            if (this.state.idx > -1)\n                                this.delete_pin(this.state.idx);\n                            this.hide_modal();\n                        }}\n                    >\n                        Delete\n                    </Button>{\" \"}\n                    <Button\n                        variant=\"secondary\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.hide_modal();\n                        }}\n                    >\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n\n    // @return {JSX.Element} Modal to confirm deletion of email\n    delete_email_modal() {\n        var modal_message;\n        if (this.state.ind < 0) modal_message = <p>Nothing to delete</p>;\n        else\n            modal_message = (\n                <p>\n                    Are you sure you want to delete{\" \"}\n                    <b>{this.state.module_info.shared_with[this.state.ind]}</b>?\n                </p>\n            );\n\n        return (\n            <Modal\n                // size=\"sm\"\n                show={this.state.modal2 === \"delete_email\"}\n                onHide={(e) => {\n                    this.hide_modal2();\n                }}\n                style={{\n                    marginTop: \"50px\",\n                }}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Confirm Deletion</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{modal_message}</Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        variant=\"danger\"\n                        onClick={(e) => {\n                            if (this.state.ind > -1)\n                                this.delete_email(this.state.ind);\n                            this.hide_modal2();\n                        }}\n                    >\n                        Delete\n                    </Button>{\" \"}\n                    <Button\n                        variant=\"secondary\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.hide_modal2();\n                        }}\n                    >\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n\n    // This function adds a email to MODULES.shared_with and avoids duplicates\n    add_email() {\n        const query = { _id: this.state.module_info._id };\n        const update = {\n            $addToSet: { shared_with: this.state.email },\n        };\n        const options = { upsert: false, returnNewDocument: true };\n\n        this.db\n            .collection(\"MODULES\")\n            .findOneAndUpdate(query, update, options)\n            .then((res) => {\n                var shared_with = res.shared_with;\n                this.setState({ shared_with: shared_with });\n                this.setState({ module_info: res });\n                console.log(\"Save response: \", res);\n            })\n            .catch(console.error);\n    }\n\n    // This function will remove a email from MODULES.shared_with\n    // @param {number} ind - The index of the email to delete\n    delete_email(ind) {\n        const query = { _id: this.state.module_info._id };\n        const update = {\n            $pull: { shared_with: this.state.shared_with[ind] },\n        };\n        const options = { multi: false, returnNewDocument: true };\n\n        this.db\n            .collection(\"MODULES\")\n            .findOneAndUpdate(query, update, options)\n            .then((res) => {\n                var shared_with = res.shared_with;\n                this.setState({ shared_with: shared_with, ind: -1 });\n                this.setState({ module_info: res });\n                console.log(\"Save response: \", res);\n            })\n            .catch(console.error);\n    }\n\n    // Creates the list of emails in MODULES.shared_with\n    // @return {JSX.Element} The list of emails.\n    list_shared() {\n        return this.state.module_info.shared_with.map((module_info, ind) => {\n            return (\n                <div key={ind}>\n                    <Row form>\n                        <Col xs=\"8\">\n                            <FormGroup>\n                                <FormControl\n                                    plaintext\n                                    readOnly\n                                    type=\"text\"\n                                    value={\n                                        this.state.module_info.shared_with[ind]\n                                    }\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Col>\n                            <Button\n                                variant=\"danger\"\n                                onClick={(event) => {\n                                    event.preventDefault();\n                                    this.setState({ ind: ind });\n                                    this.show_modal2(\"delete_email\");\n                                }}\n                            >\n                                Delete\n                            </Button>\n                        </Col>\n                    </Row>\n                    {this.delete_email_modal()}\n                </div>\n            );\n        });\n    }\n\n    // Modal to display MODULE.shared_with emails to allow adding and deleting\n    share_modal() {\n        return (\n            <Modal\n                sz=\"lg\"\n                show={this.state.modal === \"share\"}\n                onHide={(event) => {\n                    this.hide_modal();\n                }}\n                style={{\n                    maxHeight: \"100vh\",\n                    marginTop: \"50px\",\n                }}\n            >\n                <Modal.Header closeButton>Shared With</Modal.Header>\n                <Modal.Body>\n                    <div\n                        style={{\n                            maxHeight: \"calc(100vh - 450px)\",\n                            overflowY: \"auto\",\n                            overflowX: \"hidden\",\n                        }}\n                    >\n                        {this.list_shared()}\n                    </div>\n                </Modal.Body>\n                <Modal.Footer\n                    style={{\n                        maxHeight: \"calc(100vh - 450px)\",\n                        overflowY: \"auto\",\n                        overflowX: \"hidden\",\n                    }}\n                >\n                    <Form\n                        style={{\n                            position: \"relative\",\n                            margin: \"auto\",\n                        }}\n                    >\n                        <Form.Group>\n                            <FormControl\n                                id=\"email\"\n                                type=\"email\"\n                                value={this.state.email}\n                                onChange={(e) => {\n                                    var email = this.state.email;\n                                    email = e.target.value;\n                                    this.setState({ email: email });\n                                }}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Button\n                                variant=\"primary\"\n                                size=\"lg\"\n                                block\n                                onClick={(event) => {\n                                    event.preventDefault();\n                                    if (this.state.email !== \"\")\n                                        this.add_email();\n                                }}\n                            >\n                                Add\n                            </Button>\n                            <Button\n                                variant=\"primary\"\n                                size=\"lg\"\n                                block\n                                onClick={(event) => {\n                                    event.preventDefault();\n                                    this.hide_modal();\n                                }}\n                            >\n                                Save\n                            </Button>\n                            <Form.Group\n                                style={{\n                                    marginTop: \"15px\",\n                                }}\n                            >\n                                <textarea\n                                    ref={(textarea) =>\n                                        (this.textArea = textarea)\n                                    }\n                                    plaintext\n                                    readOnly\n                                    value={this.state.link}\n                                    placeholder=\"Sharing This Module Requires They Be Set To Public!\"\n                                    style={{\n                                        width: \"100%\",\n                                        height: \"80px\",\n                                    }}\n                                />\n                                <Button\n                                    variant=\"secondary\"\n                                    size=\"sm\"\n                                    block\n                                    onClick={(event) => {\n                                        event.preventDefault();\n                                        this.setState({\n                                            link:\n                                                window.location.origin +\n                                                window.location.pathname+\"/#/module/\" +\n                                                this.state.module_info._id,\n                                        });\n                                        this.copy_clipboard();\n                                    }}\n                                >\n                                    Copy Link\n                                </Button>\n                                {this.state.copy ? (\n                                    <div style={{ color: \"green\" }}>\n                                        Copied to clipboard!\n                                    </div>\n                                ) : null}\n                            </Form.Group>\n                        </Form.Group>\n                    </Form>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n\n    // @return {JSX.Element} Form to fill out module title, description, and\n    // public/private status\n    module_form() {\n        return (\n            <Form>\n                <Form.Group>\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                        type=\"title\"\n                        id=\"title\"\n                        value={this.state.module_info.title}\n                        onChange={(e) => {\n                            var module_info = this.state.module_info;\n                            module_info.title = e.target.value;\n                            this.setState({ module_info: module_info });\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows=\"5\"\n                        id=\"description\"\n                        value={this.state.module_info.description}\n                        onChange={(e) => {\n                            var module_info = this.state.module_info;\n                            module_info.description = e.target.value;\n                            this.setState({ module_info: module_info });\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group\n                    style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        marginBottom: \"0\",\n                    }}\n                >\n                    <Form.Check\n                        inline\n                        type=\"radio\"\n                        label=\"Public\"\n                        name=\"formHorizontalRadios\"\n                        id=\"true\"\n                        checked={this.state.module_info.public}\n                        onChange={(e) => {\n                            var module_info = this.state.module_info;\n                            module_info.public = true;\n                            this.setState({\n                                module_info: module_info,\n                            });\n                        }}\n                    />\n                    <Form.Check\n                        inline\n                        type=\"radio\"\n                        label=\"Private\"\n                        name=\"formHorizontalRadios\"\n                        id=\"false\"\n                        checked={!this.state.module_info.public}\n                        onChange={(e) => {\n                            var module_info = this.state.module_info;\n                            module_info.public = false;\n                            this.setState({\n                                module_info: module_info,\n                            });\n                        }}\n                    />\n                </Form.Group>\n            </Form>\n        );\n    }\n\n    // Creates the list of pins based on state.pins. Uses the react-movable\n    // library to make the list of pins draggable.\n    // @return {JSX.Element} The list of pins.\n    list_pins() {\n        return (\n            <List\n                values={this.state.pins}\n                onChange={({ oldIndex, newIndex }) => {\n                    var pins = this.state.pins;\n                    pins = arrayMove(pins, oldIndex, newIndex);\n                    this.setState({ pins: pins });\n                }}\n                renderList={({ children, props }) => (\n                    <ol\n                        {...props}\n                        style={{\n                            display: \"grid\",\n                            justifyContent: \"center\",\n                            paddingLeft: \"0px\",\n                        }}\n                    >\n                        {children}\n                    </ol>\n                )}\n                renderItem={({ index, props }) => (\n                    <li {...props}>\n                        <Row style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\n                            <Col\n                                xs=\"4\"\n                                style={{\n                                    marginTop: \"auto\",\n                                    marginBottom: \"auto\",\n                                }}\n                            >\n                                {this.state.pins[index].title}\n                            </Col>\n                            <Col>\n                                <Button\n                                    variant=\"link\"\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        this.setState({ idx: index });\n                                        this.show_modal(\"edit_pin_\" + index);\n                                    }}\n                                >\n                                    Edit\n                                </Button>\n                            </Col>\n                            <Col>\n                                <Button\n                                    variant=\"danger\"\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        this.setState({ idx: index });\n                                        this.show_modal(\"delete\");\n                                    }}\n                                >\n                                    Delete\n                                </Button>\n                            </Col>\n                        </Row>\n\n                        <EditForm\n                            pin={this.state.pins[index]}\n                            show={this.state.modal === \"edit_pin_\" + index}\n                            save={(pin) => {\n                                this.save_pin(pin);\n                            }}\n                            cancel={() => this.hide_modal()}\n                        />\n                    </li>\n                )}\n            />\n        );\n    }\n\n    save_pin(pin) {\n        const query = { _id: pin._id };\n        const update = {\n            $set: pin,\n        };\n        // update a pin on the database\n        this.db\n            .collection(\"PINS\")\n            .findOneAndUpdate(query, update)\n            .then((res) => {\n                console.log(\"Pin update response: \", res);\n\n                // Update pin list\n                var pins = this.state.pins;\n                pins[this.state.idx] = pin;\n                this.setState({ pins: pins });\n                this.hide_modal();\n            });\n    }\n\n    // This function will remove a pin from the DB and state.pins\n    // @param {number} idx - The index of the pin to delete\n    delete_pin(idx) {\n        const query = { _id: this.state.pins[idx]._id };\n        this.db\n            .collection(\"PINS\")\n            .deleteOne(query)\n            .then((res) => {\n                console.log(\"Delete response: \", res);\n\n                // Update pin list\n                var pins = this.state.pins;\n                pins.splice(idx, 1);\n                this.setState({ pins: pins, idx: -1 });\n            })\n            .catch(console.error);\n    }\n\n    // Converts state.pins to a list of ObjectIDs, then updates\n    // state.module_info.pins based on the new list\n    save_pin_order() {\n        var module = this.state.module_info;\n        const pin_ids = this.state.pins.map((pin) => {\n            return pin._id;\n        });\n        module.pins = pin_ids;\n        this.setState({ module_info: module });\n    }\n\n    // Saves the module to the DB\n    save_module() {\n        this.save_pin_order();\n        const query = { _id: this.state.module_info._id };\n        const update = {\n            $set: this.state.module_info,\n        };\n        const options = { upsert: false };\n\n        this.db\n            .collection(\"MODULES\")\n            .updateOne(query, update, options)\n            .then((res) => {\n                console.log(\"Save response: \", res);\n\n                // Go back to Manage Module view\n                window.location.assign(\"#/modules/edit/\");\n            })\n            .catch(console.error);\n    }\n\n    // @return {JSX.Element} The EditModule componenet\n    render() {\n        return (\n            <Container\n                style={{\n                    marginTop: \"10px\",\n                    maxWidth: \"540px\",\n                    height:\"100vh\",\n\n                }}\n            >\n                <Form style={{ height: \"100%\" }}>\n                    <Tabs\n                        defaultActiveKey=\"Module Info\"\n                        transition={false}\n                        style={{\n                            textAlign: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Tab eventKey=\"Module Info\" title=\"Module Info\">\n                            {this.module_form()}\n                                <Form.Group>\n                                <Button\n                                    variant=\"primary\"\n                                    size=\"lg\"\n                                    block\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        var id = this.state.module_info._id;\n                                        window.location.assign(\n                                            \"#/module/\" + id + \"/pins/edit\"\n                                        );\n                                    }}\n                                >\n                                    Pin Map\n                                </Button>\n                                <Button\n                                    variant=\"secondary\"\n                                    size=\"lg\"\n                                    block\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        this.save_module();\n                                    }}\n                                >\n                                    Save\n                                </Button>\n                            </Form.Group>\n\n                            <Form.Group\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Button\n                            variant=\"primary\"\n                            size=\"lg\"\n                            block\n                            onClick={(e) => {\n                                e.preventDefault();\n                                this.show_modal(\"share\");\n                            }}\n                        >\n                            Share\n                        </Button>\n                    </Form.Group>\n                        </Tab>\n                        <Tab\n                            eventKey=\"Pins\"\n                            title=\"Pins\"\n                            style={{ height: \"100%\" }}\n                        >\n                            {this.list_pins()}\n                        </Tab>\n                    </Tabs>\n\n                    <Form.Group>\n                        <Button\n                            variant=\"primary\"\n                            size=\"lg\"\n                            block\n                            onClick={(e) => {\n                                e.preventDefault();\n                                var id = this.state.module_info._id;\n                                window.location.assign(\n                                    \"#/module/\" + id + \"/pins/edit\"\n                                );\n                            }}\n                        >\n                            Pin Map\n                        </Button>\n                        <Button\n                            variant=\"secondary\"\n                            size=\"lg\"\n                            block\n                            onClick={(e) => {\n                                e.preventDefault();\n                                this.save_module();\n                            }}\n                        >\n                            Save\n                        </Button>\n                    </Form.Group>\n\n                    <Form.Group\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Button\n                            variant=\"primary\"\n                            size=\"lg\"\n                            block\n                            onClick={(e) => {\n                                e.preventDefault();\n                                this.show_modal(\"share\");\n                            }}\n                        >\n                            Share\n                        </Button>\n                    </Form.Group>\n\n                </Form>\n                {this.delete_pin_modal()}\n                {this.share_modal()}\n            </Container>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { Card, Tab, Tabs, CardDeck, Form, Button } from \"react-bootstrap\";\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport { ObjectId } from \"mongodb\";\nimport { waitForElementToBeRemoved } from \"@testing-library/react\";\n//import {AwsServiceClient, AwsRequest} from 'mongodb-stitch-browser-services-aws'\n\nexport default class ViewModules extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modules: [],\n            my_modules: [],\n            shared_modules: [],\n            img1: \"\",\n            stitch_res: [],\n            user: {\n                _id: '',\n                user_id: '',\n                accessed_links: [],\n            },\n            accessed_modules: [],\n        };\n        this.module_results = null;\n        \n\n        //refs\n        this.goto_module_id = React.createRef();\n\n        this.add_module_cards = this.add_module_cards.bind(this);\n        this.fetch_modules = this.fetch_modules.bind(this);\n        this.goto_module = this.goto_module.bind(this);\n\n        const appId = \"capstonear_app-xkqng\";\n        if (Stitch.hasAppClient(appId)) {\n            this.client = Stitch.getAppClient(appId);\n            const mongodb = this.client.getServiceClient(\n                RemoteMongoClient.factory,\n                \"mongodb-atlas\"\n            );\n            //select the db in our mongdb atlas cluster\n            this.db = mongodb.db(\"APP\");\n        } else {\n            this.client = Stitch.initializeAppClient(appId);\n            //console.log(\"client init\")\n        }\n    }\n\n    componentDidMount() {\n        this.fetch_modules();\n\n    }\n\n    async fetch_modules() {\n        await this.db\n            .collection(\"MODULES\")\n            .find({\n                owner_id: this.client.auth.authInfo.userId,\n            })\n            .asArray()\n            .then((my_modules) => {\n                this.setState({\n                    my_modules: my_modules,\n                    modules: {\n                        0: my_modules,\n                        1: this.state.shared_modules,\n                        2: this.state.accessed_modules,\n                    },\n                });\n\n                console.log(this.state.my_modules);\n            });\n\n        //fetch shared modules\n        await this.db\n            .collection(\"MODULES\")\n            .find({\n                shared_with: this.client.auth.authInfo.userProfile.data.email,\n            })\n            .asArray()\n            .then((shared_modules) => {\n                this.setState({\n                    shared_modules: shared_modules,\n                    modules: {\n                        0: this.state.my_modules,\n                        1: shared_modules,\n                        2: this.state.accessed_modules,\n                    },\n                });\n                console.log(shared_modules);\n            });\n        console.log(this.state.modules);\n\n        // fetch user collection, create new if not found\n        const query = {\n            user_id: this.client.auth.authInfo.userId,\n        };\n        const update = {\n            $setOnInsert: {accessed_links: [],}\n        };\n        const options = {\n            returnNewDocument: true,\n            upsert: true,\n        };\n        await this.db\n            .collection(\"USERS\")\n            .findOneAndUpdate(query, update, options)\n            .then((res) => {\n                console.log(\"User: \", res);\n                this.setState({ user: res });\n            })\n            .catch(console.error);\n\n        // fetch accessed links and set accessed modules\n        await this.db\n            .collection(\"MODULES\")\n            .find({\n                shared_with: { $ne: this.client.auth.authInfo.userProfile.data.email},\n                _id: { $in: [...this.state.user.accessed_links]},\n                public: true,\n            })\n            .asArray()\n            .then((accessed_modules) => {\n                this.setState({\n                    accessed_modules: accessed_modules,\n                    modules: {\n                        0: this.state.my_modules,\n                        1: this.state.shared_modules,\n                        2: accessed_modules,\n                    },\n                });\n                console.log(\"Accessed: \",accessed_modules);\n            });\n        console.log(this.state.accessed_modules);\n    }\n\n    goto_module(id) {\n        window.location.assign(\"#/module/\" + id);\n    }\n\n    module_card (module, idx) {\n        const userid = this.state.user.user_id; \n        return (\n            <div className=\"col-md-6 col-lg-4 \" key={idx}>\n                <Card\n                    className=\"h-100\"\n                    style={{\n                        display: \"fixed\",\n                        Width: \"25rem\",\n                        margin: \"0.25rem\",\n                        justifyContent: \"center\",\n                        textAlign: \"center\",\n                    }}\n                >\n                    <Card.Body>\n                        <Card.Img\n                            variant=\"top\"\n                            src={\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + module.pins[0] + \".jpeg?versionid=latest&date=\" + Date.now()}\n                            onError={(e)=>{e.target.onerror = null; e.target.src=\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/ar.png\"}}\n\n                        />\n                        <Card.Title>{module.title}</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">\n                            by {module.owner_name} ({module.owner_email})\n                        </Card.Subtitle>\n                        <Card.Text>{module.description}</Card.Text>\n                        <div\n                            className=\"btn-toolbar\"\n                            style={{\n                                justifyContent: \"center\",\n                            }}\n                        >\n                            <div className=\"btn-group mr-1\" style={{paddingTop: \"10px\"}}>\n                                <button\n                                    className=\"btn btn-primary\"\n                                    onClick={() => window.location.assign(`#/module/${module._id}`)}\n                                >\n                                    View Details\n                                </button>\n                            </div>\n                            <div className=\"btn-group mr-1\" style={{paddingTop: \"10px\"}}>\n                                <button className=\"btn btn-primary\"\n                                    onClick={() =>{\n                                        window.location.assign(`#/module/${module._id}/pins/?user=${userid}`)\n                                    }\n                                }>\n                                    Start Module\n                                </button>\n                            </div>\n                        </div>\n                    </Card.Body>\n                </Card>\n            </div>\n        );\n    }\n\n    add_module_cards(type) {\n        if (this.state.modules.length === 0) return;\n        console.log(this.state.modules[type])\n        const mds = this.state.modules[type].map(this.module_card, this);\n        return (\n            <div\n                style={{\n                    top: \"50px\",\n                    bottom: \"0px\",\n                    position: \"relative\",\n                }}\n                className=\"container\"\n            >\n                <CardDeck\n                    style={{\n                        top: \"50px\",\n                    }}\n                >\n                    {mds}\n                </CardDeck>\n            </div>\n        );\n    }\n\n    render() {\n        const url =this.props.location.pathname\n        var defaultTab= null\n        var my_modules_tab=null\n        if(url==\"/modules/student\")\n        {\n            defaultTab=\"Shared Modules\"\n        }\n        else\n        {\n            defaultTab=\"My Modules\"\n            my_modules_tab= (<Tab eventKey=\"My Modules\" title=\"My Modules\">\n                                {this.add_module_cards(0)}\n                            </Tab>)\n        }\n\n        const query_modules = () => {\n            const userQuery = this.goto_module_id.current.value;\n            try {\n                ObjectId(userQuery);\n                window.location.assign(`#/module/${userQuery}`);\n            }\n            catch (err) {\n                this.db.collection(\"MODULES\")\n                    .find({ title: { $regex: userQuery, $options: \"i\" } })\n                    .asArray()\n                    .then(docs => {\n                        this.module_results = docs.map(this.module_card, this);\n                        this.forceUpdate();\n                    });\n            }\n        }\n\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    top: \"0px\",\n                    bottom: \"0px\",\n                    width: \"100%\",\n                    overflowY: \"scroll\",\n                }}\n            >\n                <div\n                    style={{\n                        top: \"10px\",\n                        bottom: '0px',\n                        position: \"relative\",\n                        height: \"100vh\",\n                        marginLeft: \"auto\",\n                        marginRight: \"auto\",\n                    }}\n                >\n                    <Tabs\n                        defaultActiveKey= {defaultTab}\n                        transition={false}\n                        style={{\n                            textAlign: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        {my_modules_tab}\n                        <Tab eventKey=\"Shared Modules\" title=\"Shared with me\">\n                            <div>\n                                {this.add_module_cards(1)}\n                            </div>\n                            <div>\n                                {this.add_module_cards(2)}\n                            </div>\n                        </Tab>\n\n                        <Tab eventKey=\"Go To\" title=\"Search\">\n                            <Form\n                                onSubmit={e => {\n                                    e.preventDefault();\n                                    query_modules();\n                                }}\n                            >\n                                <Form.Group controlId=\"formModuleId\">\n                                    <Form.Label>Module</Form.Label>\n                                    <Form.Control\n                                        required\n                                        type=\"string\"\n                                        placeholder=\"Enter module title or id\"\n                                        ref={this.goto_module_id}\n                                    />\n                                </Form.Group>\n\n                                <Button\n                                    variant=\"primary\"\n                                    style={{marginBottom: \"10px\"}}\n                                    onClick={query_modules}\n                                >\n                                    Search\n                                </Button>\n                            </Form>\n                            {this.module_results}\n                        </Tab>\n                    </Tabs>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\n\nexport default class ManageModules extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modules: [],\n            modal: false,\n            idx: -1,\n        };\n\n        this.fetch_userinfo = this.fetch_userinfo.bind(this);\n\n        this.toggle = this.toggle.bind(this);\n        this.modal_message = this.modal_message.bind(this);\n        this.list_modules = this.list_modules.bind(this);\n        this.delete_module = this.delete_module.bind(this);\n        this.add_module = this.add_module.bind(this);\n        this.save_modules = this.save_modules.bind(this);\n\n        // Setting up DB with Stitch\n        const appId = \"capstonear_app-xkqng\";\n        this.client = Stitch.hasAppClient(appId)\n            ? Stitch.getAppClient(appId)\n            : Stitch.initializeDefaultAppClient(appId);\n        const mongodb = this.client.getServiceClient(\n            RemoteMongoClient.factory,\n            \"mongodb-atlas\"\n        );\n        this.db = mongodb.db(\"APP\");\n\n        this.fetch_userinfo();\n    }\n\n    async fetch_userinfo() {\n        const query = {\n            owner_id: this.client.auth.authInfo.userId,\n        };\n        await this.db\n            .collection(\"MODULES\")\n            .find(query)\n            .toArray()\n            .then((res) => {\n                console.log(\"Modules loaded: \", res);\n\n                this.setState({ modules: res });\n            })\n            .catch(console.error);\n    }\n\n    toggle() {\n        var modal = !this.state.modal;\n        this.setState({ modal: modal });\n    }\n\n    modal_message() {\n        if (this.state.idx < 0) return <p>Nothing to delete</p>;\n        else\n            return (\n                <p>\n                    Are you sure you want to delete{\" \"}\n                    <b>{this.state.modules[this.state.idx].title}</b>?\n                </p>\n            );\n    }\n\n    list_modules() {\n        return this.state.modules.map((module, idx) => {\n            return (\n                <div key={idx} className=\"pt-1\">\n                    <div className=\"row\">\n                        <div className=\"col-6 offset-sm-2 col-sm-4\">\n                            <input\n                                type=\"text\"\n                                value={this.state.modules[idx].title}\n                                onChange={(event) => {\n                                    event.preventDefault();\n\n                                    var modules = [...this.state.modules];\n                                    modules[idx].title = event.target.value;\n                                    this.setState({ modules });\n                                }}\n                            />\n                        </div>\n                        <div className=\"col-6 col-sm-4\">\n                            <button\n                                className=\"btn btn-link float-right\"\n                                onClick={(event) => {\n                                    event.preventDefault();\n                                    var id = this.state.modules[idx]._id;\n                                    window.location.assign(\n                                        \"#/module/\" + id + \"/edit\"\n                                    );\n                                }}\n                            >\n                                Edit\n                            </button>\n                            <button\n                                className=\"btn btn-danger float-right\"\n                                onClick={(event) => {\n                                    event.preventDefault();\n                                    this.setState({ idx: idx });\n                                    this.toggle();\n                                }}\n                            >\n                                Delete\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    delete_module(idx) {\n        const query = { _id: this.state.modules[idx]._id };\n        this.db\n            .collection(\"MODULES\")\n            .deleteOne(query)\n            .then((res) => {\n                console.log(\"Delete response: \", res);\n\n                // Update module list\n                var modules = [...this.state.modules];\n                modules.splice(idx, 1);\n                this.setState({ modules: modules, idx: -1 });\n            })\n            .catch(console.error);\n    }\n\n    add_module() {\n        const query = {\n            title: \"title\",\n            owner_id: this.client.auth.authInfo.userId,\n            owner_name: this.client.auth.authInfo.userProfile.name,\n            owner_email: this.client.auth.authInfo.userProfile.email,\n            description: \"\",\n            pins: [],\n            shared_with: [],\n            public: false,\n        };\n\n        this.db\n            .collection(\"MODULES\")\n            .insertOne(query)\n            .then((res) => {\n                console.log(\"Add response: \", res);\n\n                // Navigate to Edit Module view\n                var id = res.insertedId;\n                window.location.assign(\"#/module/\" + id + \"/edit\");\n            })\n            .catch(console.error);\n    }\n\n    save_modules() {\n        Promise.all(\n            this.state.modules.map((module) => {\n                const query = { _id: module._id };\n                const update = {\n                    $set: {\n                        title: module.title,\n                    },\n                };\n                const options = { upsert: false };\n\n                return this.db\n                    .collection(\"MODULES\")\n                    .updateOne(query, update, options);\n            })\n        )\n            .then((res) => {\n                console.log(\"Save response: \", res);\n            })\n            .catch(console.error);\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <form\n                    style={{ height: \"100%\" }}\n                    onSubmit={(event) => {\n                        event.preventDefault();\n                        this.save_modules();\n                    }}\n                >\n                    <div\n                        style={{\n                            height: \"70vh\",\n                            overflowY: \"scroll\",\n                            overflowX: \"hidden\"\n                        }}\n                    >\n                        {this.list_modules()}\n                    </div>\n\n                    <div style={{ marginTop: \"10px\" }}>\n                        <button\n                            className=\"btn btn-primary btn-lg btn-block\"\n                            onClick={(event) => {\n                                event.preventDefault();\n                                this.add_module();\n                            }}\n                        >\n                            Add Module\n                        </button>\n                        <button\n                            className=\"btn btn-secondary btn-lg btn-block\"\n                            onClick={(event) => {\n                                event.preventDefault();\n                                this.save_modules();\n                                window.location.assign(\"#/\");\n                            }}\n                        >\n                            Save\n                        </button>\n                    </div>\n                </form>\n                <Modal\n                    show={this.state.modal}\n                    toggle={(event) => {\n                        event.preventDefault();\n                        this.toggle();\n                    }}\n                    style={{\n                        marginTop: \"50px\",\n                    }}\n                >\n                    <Modal.Header\n                        toggle={(event) => {\n                            event.preventDefault();\n                            this.toggle();\n                        }}\n                    >\n                        Confirm Deletion\n                    </Modal.Header>\n                    <Modal.Body>{this.modal_message()}</Modal.Body>\n                    <Modal.Footer>\n                        <button\n                            className=\"btn btn-danger\"\n                            onClick={(event) => {\n                                event.preventDefault();\n                                if (this.state.idx > -1)\n                                    this.delete_module(this.state.idx);\n                                this.toggle();\n                            }}\n                        >\n                            Delete\n                        </button>{\" \"}\n                        <button\n                            className=\"btn btn-secondary\"\n                            onClick={(event) => {\n                                event.preventDefault();\n                                this.toggle();\n                            }}\n                        >\n                            Cancel\n                        </button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport { Map, Marker, Popup, TileLayer, Polyline } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport L from 'leaflet'\nimport { Stitch, RemoteMongoClient, GoogleRedirectCredential } from \"mongodb-stitch-browser-sdk\"\nimport { ObjectId } from 'mongodb'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowAltCircleRight, faArrowAltCircleLeft, faMapMarkerAlt, faStreetView } from '@fortawesome/free-solid-svg-icons'\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap'\nimport { userMode } from './mode'\nimport { FacebookShareButton, FacebookIcon } from 'react-share'\n\n\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n\nvar myIcon = new L.divIcon({\n  className: 'my-div-icon',\n  html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png\"/>'\n})\n\nconst floatStyle = {\n  position: \"fixed\",\n  width: \"60px\",\n  height: \"60px\",\n  bottom: \"40px\",\n  right: \"40px\",\n  backgroundColor: \"#0C9\",\n  color: \"#FFF\",\n  borderRadius: \"50px\",\n  textAlign: \"center\",\n  boxShadow: \"2px 2px 3px #999\",\n  zIndex: 1500,\n};\nconst nextButtonStyle = {\n  position: \"fixed\",\n  width: \"60px\",\n  height: \"60px\",\n  bottom: \"40px\",\n  right: \"120px\",\n  backgroundColor: \"#74E4E9\",\n  color: \"#000000\",\n  borderRadius: \"40px\",\n  textAlign: \"center\",\n  boxShadow: \"2px 2px 3px #999\",\n  zIndex: 1500,\n};\nconst previousButtonStyle = {\n  position: \"fixed\",\n  width: \"60px\",\n  height: \"60px\",\n  bottom: \"40px\",\n  right: \"240px\",\n  backgroundColor: \"#74E4E9\",\n  color: \"#000000\",\n  borderRadius: \"40px\",\n  textAlign: \"center\",\n  boxShadow: \"2px 2px 3px #999\",\n  zIndex: 1500,\n};\nconst currentButtonStyle = {\n  position: \"fixed\",\n  width: \"60px\",\n  height: \"60px\",\n  bottom: \"40px\",\n  right: \"180px\",\n  backgroundColor: \"#0C9\",\n  color: \"#FFF\",\n  borderRadius: \"50px\",\n  textAlign: \"center\",\n  boxShadow: \"2px 2px 3px #999\",\n  zIndex: 1500,\n};\n\nclass ViewPinOnMap extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      currentLocation: { lat: 45.51, lng: -122.68 },\n      zoom: 13,\n      userLocation: [],\n      userLocationFound: false,\n      username: \"\",\n      useremail: \"\",\n      userID: \"\",\n      stitch_res: {},\n      pin: [],\n      pins_line: [],\n      pins_array: [],\n      current_pin_index: 0,\n      finish_modal: false,\n    }\n\n\n    this.bounds = undefined;\n    this.userID = this.props.location.search.split(\"user=\")[1];\n    this.shareUrl = `${window.location.host}${window.location.pathname}#/completed/${this.props.match.params.id}/${this.userID}`;\n    console.log(\"the share url\", this.shareUrl);\n\n    const appId = \"capstonear_app-xkqng\"\n    this.client = Stitch.hasAppClient(appId)\n      ? Stitch.getAppClient(appId)\n      : Stitch.initializeDefaultAppClient(appId)\n    const mongodb = this.client.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    );\n    this.db = mongodb.db(\"APP\");\n  }\n\n\n  getUserPosition() {\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({ userLocation: [position.coords.latitude, position.coords.longitude], userLocationFound: true, currentLocation: [position.coords.latitude, position.coords.longitude] })\n\n    })\n  }\n\n  componentDidMount() {\n    this.getUserPosition()\n    this.drawpins()\n\n    //this.interval = setInterval(this.getUserPosition, 10000);\n   \n\n  }\n  componentWillUnmount() {\n    // Clear the interval right before component unmount\n    clearInterval(this.interval);\n}\n  /**\n   * Retrieve pins from database using Module ID\n   */\n\n  async drawpins() {\n    if (!this.client.auth.isLoggedIn) {\n      return\n    }\n    const query = { _id: ObjectId(this.props.match.params.id) };\n    await this.db.collection(\"MODULES\").findOne(query)\n      .then((stitch_res) => {\n        this.setState({ stitch_res })\n        const pipeline = [\n          { $match: { _id: { $in: stitch_res.pins } } },\n          {\n            $addFields: {\n              __order: { $indexOfArray: [stitch_res.pins, \"$_id\"] },\n            },\n          },\n          { $sort: { __order: 1 } },\n        ];\n        this.db.collection(\"PINS\").aggregate(pipeline)\n          .toArray()\n          .then((res) => {\n            this.setState({ pins_array: res })\n          });\n\n      }\n      )\n  }\n \n  /**\n   * Open google map to that coords\n   * @param  {} coords\n   */\n  openGoogle(coords) {\n    var url = \"http://maps.google.com?q=\" + coords[0] + \",\" + coords[1]\n    var win = window.open(url, '_blank');\n    return\n  }\n\n  \n  /**\n   * Set map view to the user current location\n   * @param  {} coords\n   */\n  centerMap( coords) {\n\n    if(this.state.userLocation.length!=0)\n    {\n      const map = this.refs.map.leafletElement\n      map.doubleClickZoom.disable();\n      setTimeout(function () {\n        map.doubleClickZoom.enable();\n      }, 1000);\n      map.setView(coords, 13)\n      const pin = this.refs.userloc.leafletElement\n      setTimeout(function(){\n        pin.openPopup()\n      },400)\n    }\n    else\n    {\n      var zip_code = prompt(\"Please enter your zip code\");\n      if (zip_code != null) {\n        fetch('https://public.opendatasoft.com/api/records/1.0/search/?dataset=us-zip-code-latitude-and-longitude&q='+zip_code+'&facet=state&facet=timezone&facet=dst')\n        .then(response => response.json())\n        .then(data => this.setState({currentLocation:data.records[0].fields.geopoint,userLocation:data.records[0].fields.geopoint}));\n        //console.log(data.records[0].fields.geopoint))\n      }\n    }\n\n  }\n  /**\n   * Set map view to the next pin in the pin array\n   */\n  nextPin() {\n    if(this.state.pins_array.length>0)\n    {\n      const map = this.refs.map.leafletElement\n      map.doubleClickZoom.disable();\n      setTimeout(function () {\n        map.doubleClickZoom.enable();\n      }, 1000);\n      var temp = this.state.current_pin_index + 1\n      if (temp >= this.state.pins_array.length - 1) {\n        temp = this.state.pins_array.length - 1\n      }\n      map.setView(this.state.pins_array[temp].coords)\n      const pin = this.refs[temp].leafletElement\n      setTimeout(function(){\n        pin.openPopup()\n      },400)\n      this.setState({ current_pin_index: temp })\n  \n  }\n}\n  /**\n   * Set map view to the previous pin in the pin array\n   */\n  previousPin() {\n\n    if(this.state.pins_array.length>0)\n    {\n      const map = this.refs.map.leafletElement\n      map.doubleClickZoom.disable();\n      setTimeout(function () {\n        map.doubleClickZoom.enable();\n      }, 1000);\n      var temp = this.state.current_pin_index - 1\n      if (temp <= 0) {\n        temp = 0\n      }\n      map.setView(this.state.pins_array[temp].coords)\n      const pin = this.refs[temp].leafletElement\n      setTimeout(function(){\n        pin.openPopup()\n      },400)\n      this.setState({ current_pin_index: temp })\n  }\n}\n\n  /**\n   * Set map view to the current pin in the pin array\n   */\n  currentPin() {\n    if(this.state.pins_array.length>0)\n    {\n      const map = this.refs.map.leafletElement\n      map.doubleClickZoom.disable();\n      setTimeout(function () {\n        map.doubleClickZoom.enable();\n      }, 1000);\n      map.setView(this.state.pins_array[this.state.current_pin_index].coords)\n      const pin = this.refs[this.state.current_pin_index].leafletElement\n      setTimeout(function(){\n        pin.openPopup()\n      },400)\n    }\n  }\n\n  toggle_modal() {\n    var finish_modal = !this.state.finish_modal\n    this.setState({finish_modal: finish_modal})\n  }\n  go_home(){\n    if(userMode== true)\n    {\n      window.location.assign(\n        \"#/modules/student\");\n    }\n    else\n    {\n      window.location.assign(\n        \"#/modules/instructor\");\n    }\n  }\n  finish_modal() {\n    return (\n      <Modal\n        show={this.state.finish_modal}\n        onHide={() => this.toggle_modal()}\n        style={{\n          marginTop: \"50px\",\n        }}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Finish Module</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          You finished {this.state.stitch_res.title}\n          <FacebookShareButton\n            quote={\"title\"}\n            url={this.shareUrl}\n          >\n            <FacebookIcon />\n          </FacebookShareButton>\n          <Form style={{\n            position: \"relative\",\n            margin: \"auto\",\n          }}\n          >\n            <Form.Group>\n              {/* <Button block onClick ={() => FacebookShareButton()}>Share</Button> */}\n            </Form.Group>\n            <Form.Group>\n              <Button block>Scan QR</Button>\n            </Form.Group>\n            <Form.Group>\n              <Button block onClick={() => this.go_home()}>End Module</Button>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => this.toggle_modal()}\n          >\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>)\n  }\n  render() {\n    const userLocation = this.state.userLocationFound ? (\n      <Marker ref='userloc' position={this.state.userLocation} icon={myIcon} >\n        <Popup>You are here</Popup>\n      </Marker>\n    ) : null\n\n    return (\n      <div>\n        <Map ref='map' center={this.state.currentLocation} zoom={13} maxZoom={18}>\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n          />\n          {userLocation}\n          {this.state.pins_array.map((info, idx) => {\n            const len = this.state.pins_array.length;\n            var marker_icon;\n            if (idx == this.state.current_pin_index) {\n              marker_icon = new L.divIcon({\n                className: 'my-div-icon',\n                html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-yellow.png\"/>'\n              })\n            }\n            else {\n              marker_icon = new L.divIcon({\n                className: 'my-div-icon',\n                html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png\"/>'\n              })\n            }\n            return <Marker\n              key={idx} position={info.coords}\n              icon={marker_icon}\n              ref={idx}  >\n              <Popup >\n                <h1>{info.title}</h1>\n                <p>{info.description}</p>\n                <p>{info.hint}</p>\n                <p>{info.destination}</p>\n                <img style={{\n                  height: 'auto',\n                  width: '100%'\n                }} src={\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + info._id.toString() + \".jpeg?versionid=latest&date=\" + Date.now()}  \n                \n                 onError={(e)=>{e.target.onerror = null; e.target.src=\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/ar.png\"}}\t \n                ></img>\n                <Form style={{ paddingTop: \"10px\" }}>\n                  {\n                    (() => {\n                      if (idx === len - 1)\n                        return (\n                          <Form.Group>\n                            <Button onClick={() => this.toggle_modal()} block>\n                              Finish Module\n                            </Button>\n                          </Form.Group>)\n                    })()\n                  }\n                  <Form.Group>\n                    <Button onClick={() => this.openGoogle(info.coords)} variant=\"secondary\" block>\n                      Open Google Map\n                    </Button>\n                  </Form.Group>\n                </Form>\n              </Popup>\n            </Marker>\n\n          })}\n          <button style={floatStyle} onClick={() => this.centerMap( this.state.currentLocation)} >\n            <div><FontAwesomeIcon icon={faStreetView} size=\"3x\" /></div>\n          </button>\n          <ButtonGroup>\n            <button style={nextButtonStyle} onClick={() => this.nextPin()}  >\n              <div><FontAwesomeIcon icon={faArrowAltCircleRight} size=\"3x\" /></div>\n            </button>\n            <button style={previousButtonStyle} onClick={() => this.previousPin()} >\n              <div><FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"3x\" /></div>\n            </button>\n            <button style={currentButtonStyle} onClick={() => this.currentPin()} >\n              <div><FontAwesomeIcon icon={faMapMarkerAlt} size=\"3x\" /></div>\n            </button>\n          </ButtonGroup>\n        </Map>\n        {this.finish_modal()}\n      </div>\n    );\n  }\n}\n\nexport default ViewPinOnMap;","import React, { useState, useEffect } from \"react\";\nimport { db } from \"./clientdb\";\nimport { useParams } from \"react-router-dom\";\nimport { ObjectId } from \"mongodb\";\n\nconst imgSrc = pin => `https://capstoneusercontent.s3-us-west-2.amazonaws.com/${pin}.jpeg?versionid=latest`;\n\nconst Completed = props => {\n    const [ pin, setPin ] = useState();\n    const [ username, setUsername ] = useState(\"User\");\n    const { module, userid } = useParams();\n    useEffect(() => {\n        db.collection(\"MODULES\")\n            .findOne({ _id: ObjectId(module) })\n            .then(data => setPin(data.pins[0]))\n        db.collection(\"USERS\")\n            .findOne({ user_id: userid })\n            .then(data => setUsername(data?.username || username))\n    }\n    , []);\n    return (\n        <div \n            className=\"container\"\n            style={{\n                display: \"block\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                textAlign: \"center\"\n            }}\n        >\n            <h1> {`${username} has completed this module`} </h1>\n            <img src={imgSrc(pin)} style={{ width: \"90%\" }} />\n        </div>\n    );\n}\nexport default Completed;","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport MapView from \"./components/MapView.js\";\nimport Menu from \"./components/Menu/Menu.js\";\nimport { Stitch } from \"mongodb-stitch-browser-sdk\";\nimport Login from \"./components/Login\";\nimport DropPin from \"./components/DropPin\";\nimport NavMenu from \"./components/Menu/NavMenu\";\nimport Module from \"./components/Module\";\nimport EditModule from \"./components/EditModule\";\nimport { Navbar } from \"react-bootstrap\";\nimport ViewModules from \"./components/ViewModules\";\nimport ManageModules from \"./components/ManageModules\";\nimport ViewPinOnMap from \"./components/ViewPinOnMap\";\nimport Completed from \"./components/completed\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        const appId = \"capstonear_app-xkqng\";\n        this.client = Stitch.hasAppClient(appId)\n            ? Stitch.getAppClient(appId)\n            : Stitch.initializeDefaultAppClient(appId);\n        const url = window.location.href;\n        const cleanUrl = url.split(/\\?fbclid=.*#/).join(\"#\");\n        if (this.client.auth.hasRedirectResult()) {\n            if (cleanUrl !== url)\n                window.location.assign(cleanUrl);\n            this.client.auth.handleRedirectResult().then((user) => {\n                window.location.assign(\"/\");\n            });\n        }\n        if (cleanUrl !== url)\n            window.location.assign(cleanUrl);\n        this.state = {\n            isLoggedIn: false,\n        };\n\n        //refs\n\n        this.center_container = React.createRef();\n\n        this.NavMenu = this.NavMenu.bind(this);\n    }\n\n    componentDidMount() {}\n\n    handleStitchClient() {\n        this.setState({\n            stitchClient: this.client,\n            userProfile: this.client.auth.userProfile,\n            isLoggedIn: true,\n        });\n    }\n\n    Home = () => {\n        if (this.client.auth.isLoggedIn) {\n            return (\n                <div>\n                    <MapView />\n                </div>\n            );\n        } else {\n            return <Login />;\n        }\n    };\n\n    NavMenu = () => {\n        if (this.client.auth.isLoggedIn) {\n            return <NavMenu center_container={this.center_container} />;\n        }\n    };\n\n    render() {\n        return (\n            <HashRouter basename=\"/\">\n                <div>\n                    <Navbar\n                        className=\"navbar bg-dark navbar-dark\"\n                        style={{\n                            position: \"fixed\",\n                            width: \"100%\",\n                            height: \"50px\",\n                            zIndex: 1500,\n                        }}\n                    >\n                        <Navbar.Brand href=\"#/\">Context AR</Navbar.Brand>\n                    </Navbar>\n                    {this.NavMenu()}\n                </div>\n\n                <div\n                    ref={this.center_container}\n                    className=\"center_container\"\n                    style={{\n                        position: \"fixed\",\n                        top: \"50px\",\n                        bottom: \"0\",\n                        width: \"100%\",\n                        height: \"calc(100% - 50px)\",\n                    }}\n                >\n                    <Switch>\n                        <Route exact path=\"/menu\" component={Menu} />\n\n                        <Route\n                            exact\n                            path=\"/modules/edit\"\n                            component={ManageModules}\n                        />\n                        <Route exact path=\"/modules/student\" component={ViewModules} />\n                        <Route exact path=\"/modules/instructor\" component={ViewModules} />\n\n                        <Route\n                            exact\n                            path=\"/module/:id/pins/edit\"\n                            component={DropPin}\n                        />\n                        <Route\n                            exact\n                            path=\"/module/:id/pins\"\n                            component={ViewPinOnMap}\n                        />\n    \n                        <Route path=\"/completed/:module/:userid\">\n                            <Completed/>\n                        </Route>\n\n                        <Route\n                            exact\n                            path=\"/module/:id/edit\"\n                            component={EditModule}\n                        />\n                        <Route path=\"/module/:id\" component={Module} />\n\n                        <Route exact path=\"/\">\n                            {this.Home}\n                        </Route>\n                    </Switch>\n                </div>\n            </HashRouter>\n        );\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}