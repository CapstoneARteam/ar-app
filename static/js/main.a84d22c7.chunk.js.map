{"version":3,"sources":["components/DropPin.js","../node_modules/require_optional sync","components/MapView.js","components/Menu/Menu.js","components/Login.js","components/Menu/NavMenu.js","components/Module.js","components/EditModule.js","components/ViewModules.js","components/ManageModules.js","components/ViewPinOnMap.js","App.js","serviceWorker.js","index.js"],"names":["appId","client","Stitch","hasAppClient","getAppClient","initializeDefaultAppClient","db","getServiceClient","RemoteMongoClient","factory","globalPosition","floatStyle","position","width","height","bottom","right","backgroundColor","color","borderRadius","textAlign","boxShadow","zIndex","HandleUpload","base64data","id","console","log","basestring","replace","fileBuffer","Buffer","binaryImageData","BSON","Binary","Uint8Array","aws","AwsServiceClient","args","ACL","Bucket","ContentType","Key","ContentEncoding","Body","request","AwsRequest","Builder","withService","withAction","withRegion","withArgs","execute","build","then","result","catch","err","OpenFile","props","type","multiple","onChange","e","target","files","fileReader","FileReader","readAsDataURL","onloadend","setbase64data","HandleFileChange","style","src","EditForm","useState","pin","setPin","handleInputChange","name","value","Date","now","imgurl","setimgurl","centered","show","Header","Title","Group","Label","Control","title","as","rows","description","hint","destination","Footer","variant","onClick","cancel","save","PinMarker","modalShow","setModalShow","key","coords","_id","query","update","$set","collection","findOneAndUpdate","objectID","toString","AddpinForm","className","htmlFor","required","onHide","document","getElementById","lng","lat","owner_id","auth","authInfo","userId","audio","video","insertOne","res","insertedId","setMarkers","markers","module","pins","setModule","upsert","error","DropPin","setPosition","canPlacePin","setCanPlacePin","owner_email","owner_name","shared_array","public","useEffect","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","ObjectId","match","params","findOne","pipeline","$match","$in","$addFields","__order","$indexOfArray","$sort","aggregate","toArray","map","center","zoom","latlng","left","window","history","back","fontSize","url","attribution","webpackEmptyContext","req","Error","code","keys","resolve","exports","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapView","state","currentLocation","userLocation","userLocationFound","getUserPosition","bind","setState","this","Marker","Popup","Map","maxZoom","TileLayer","Component","Menu","username","useremail","userID","stitch_res","menuOpen","open","login","logout","addamodule","listmymodules","mongodb","isLoggedIn","userProfile","data","first_name","email","userImg","picture","credential","GoogleRedirectCredential","loginWithRedirect","location","reload","temp_module_name","owner","find","asArray","StyledMenu","setOpen","center_container","top","alt","maxHeigh","maxWidth","listStyleType","paddingLeft","current","opacity","href","fontColor","styled","nav","Login","hasRedirectResult","handleRedirectResult","user","assign","class","margin","StyledBurger","button","Burger","NavMenu","React","Module","fileToBase64","filename","filepath","Promise","file","File","reader","onload","event","current_position","module_info","base64img","user_id","accessed_links","fetch_userinfo","update_user","initializeAppClient","undefined","length","shared_with","includes","$addToSet","Container","EditModule","idx","ind","modal","modal2","copied","link","show_modal","show_modal2","hide_modal","hide_modal2","delete_pin_modal","share_modal","list_shared","add_email","delete_email","delete_email_modal","copy_clipboard","save_pin","delete_pin","list_pins","module_form","save_pin_order","save_module","textArea","select","execCommand","copy","modal_message","Modal","marginTop","closeButton","Button","preventDefault","returnNewDocument","$pull","multi","Row","form","Col","xs","FormGroup","FormControl","plaintext","readOnly","sz","maxHeight","overflowY","overflowX","Form","size","block","ref","textarea","placeholder","origin","display","justifyContent","marginBottom","Check","inline","label","checked","values","oldIndex","newIndex","arrayMove","renderList","children","renderItem","index","deleteOne","splice","pin_ids","updateOne","Tabs","defaultActiveKey","transition","Tab","eventKey","ViewModules","modules","my_modules","shared_modules","img1","accessed_modules","goto_module_id","createRef","add_module_cards","fetch_modules","goto_module","0","1","2","$setOnInsert","options","$ne","mds","Card","Width","Img","Subtitle","Text","CardDeck","marginLeft","marginRight","controlId","ManageModules","toggle","list_modules","delete_module","add_module","save_modules","all","onSubmit","iconSize","iconAnchor","popupAnchor","shadowSize","myIcon","divIcon","html","ViewPinOnMap","pins_line","pins_array","drawpins","drawlines","openGoogle","centerMap","bounds","reduce","acc","curr","rect","percent","latMin","lngMin","latMax","lngMax","lngPad","latPad","AddPaddingToRect","boundingRect","elem","Polyline","positions","obj","refs","leafletElement","doubleClickZoom","disable","setTimeout","enable","setView","icon","maxBounds","info","App","Home","stitchClient","basename","Navbar","Brand","exact","path","component","Boolean","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a84d22c7.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nimport {Stitch,RemoteMongoClient,BSON} from \"mongodb-stitch-browser-sdk\"\r\nimport {AwsServiceClient, AwsRequest } from 'mongodb-stitch-browser-services-aws'\r\n\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\n\r\nimport { ObjectId } from \"mongodb\";\r\n\r\nconst appId = \"capstonear_app-xkqng\";\r\nconst client = Stitch.hasAppClient(appId)\r\n    ? Stitch.getAppClient(appId)\r\n    : Stitch.initializeDefaultAppClient(appId);\r\nconst mongodb = client.getServiceClient(\r\n    RemoteMongoClient.factory,\r\n    \"mongodb-atlas\"\r\n);\r\nconst db = mongodb.db(\"APP\");\r\n\r\n//image data\r\nvar base64data = 'default'\r\n\r\nvar globalPosition = {};\r\n\r\nconst floatStyle = {\r\n    position: \"fixed\",\r\n    width: \"60px\",\r\n    height: \"60px\",\r\n    bottom: \"40px\",\r\n    right: \"40px\",\r\n    backgroundColor: \"#0C9\",\r\n    color: \"#FFF\",\r\n    borderRadius: \"50px\",\r\n    textAlign: \"center\",\r\n    boxShadow: \"2px 2px 3px #999\",\r\n    zIndex: 1500,\r\n};\r\n\r\n\r\n\r\n\r\n\r\nvar HandleFileChange = (props, e) => {\r\n    console.log(e.target.files)\r\n    console.log(e.target.files[0])\r\n    let fileReader = new FileReader();\r\n    fileReader.readAsDataURL(e.target.files[0])\r\n    fileReader.onloadend = (e) => {\r\n        props.setbase64data(e.target.result)\r\n       \r\n        return e.target.result\r\n        \r\n        \r\n    }\r\n    \r\n    \r\n}\r\n\r\nconst HandleUpload = (base64data, id) =>{\r\n    console.log(base64data)\r\n    console.log(id)\r\n    // console.log(window.context)\r\n    // Convert the base64 encoded image string to a BSON Binary object\r\n    var basestring = base64data.replace(/^data:image\\/\\w+;base64,/, '');\r\n    var fileBuffer = new Buffer(basestring, 'base64');\r\n    const binaryImageData = new BSON.Binary(new Uint8Array(fileBuffer), 0)\r\n\r\n    const aws = client.getServiceClient(AwsServiceClient.factory, \"capstoneusercontent\");\r\n    // These are the arguments specifically for the s3 service PutObject function\r\n    const args = {\r\n        ACL: 'public-read',\r\n        Bucket: \"capstoneusercontent\",\r\n        ContentType: \"image/jpeg\",\r\n        Key: id + '.jpeg',\r\n        ContentEncoding: 'base64',\r\n        Body: binaryImageData,\r\n        // or Body could be a BSON object\r\n    };\r\n\r\n    const request = new AwsRequest.Builder()\r\n    .withService(\"s3\")\r\n    .withAction(\"PutObject\")\r\n    .withRegion(\"us-west-2\") // this is optional\r\n    .withArgs(args); // depending on the service and action, this may be optional as well\r\n\r\n    console.log(request)\r\n\r\n    aws.execute(request.build())\r\n    .then(result => {\r\n        console.log(result)\r\n    }).catch(err => {\r\n        console.log(err)\r\n    });\r\n    \r\n}\r\n\r\nconst OpenFile = (props) =>{\r\n    console.log(\"open file\")\r\n   \r\n    console.log(props.base64data)\r\n    return(\r\n        <div>\r\n            <input type=\"file\" multiple=\"single\"  onChange={(e) => {\r\n                HandleFileChange(props, e)\r\n                }}></input>  \r\n            <img style={{\r\n                    height: '200px',\r\n                    width : '300px'\r\n                }} src={props.base64data}></img>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\nexport const EditForm = (props) => {\r\n    const [pin, setPin] = useState(props.pin);\r\n\r\n    const handleInputChange = (e) => {\r\n        setPin({ ...pin, [e.target.name]: e.target.value });\r\n    };\r\n   \r\n    const [imgurl, setimgurl] = useState(\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + props.id + \".jpeg?versionid=latest&date=\" + Date.now());\r\n  \r\n\r\n    return (\r\n        <Modal {...props} centered show={props.show} style={{ zIndex: \"1600\" }}>\r\n            <Modal.Header>\r\n                <Modal.Title>Edit a Pin</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control\r\n                            type=\"title\"\r\n                            id=\"title\"\r\n                            name=\"title\"\r\n                            value={pin.title}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows=\"2\"\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            value={pin.description}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Hint</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows=\"2\"\r\n                            id=\"hint\"\r\n                            name=\"hint\"\r\n                            value={pin.hint}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Destination</Form.Label>\r\n                        <Form.Control\r\n                            id=\"destination\"\r\n                            name=\"destination\"\r\n                            value={pin.destination}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <OpenFile base64data={props.base64data} setbase64data={props.setbase64data} imgurl={imgurl} setimgurl={setimgurl}></OpenFile>\r\n                        <img style={{\r\n                            height: '200px',\r\n                            width : '300px'\r\n                        }} src={imgurl}></img>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={props.cancel}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    variant=\"primary\"\r\n                    onClick={() => {\r\n      /*\r\n\r\n                        const title =\r\n                            document.getElementById(\"title\").value || \"\";\r\n                        const hint =\r\n                            document.getElementById(\"hint\").value || \"\";\r\n                        const description =\r\n                            document.getElementById(\"description\").value || \"\";\r\n                        const destination =\r\n                            document.getElementById(\"destination\").value || \"\";\r\n                        const query = { _id: props.objectID };\r\n                        const update = {\r\n                            $set: {\r\n                                title: title,\r\n                                description: description,\r\n                                hint: hint,\r\n                                destination: destination,\r\n                            },\r\n                        };\r\n                        // update a pin on the database\r\n                        db.collection(\"PINS\")\r\n                            .findOneAndUpdate(query, update)\r\n                            .then((objectID) => {\r\n                                console.log(objectID._id.toString())\r\n                                console.log(base64data)\r\n                                if(base64data === \"default\")\r\n                                {}\r\n                                else{\r\n                                    //upload image\r\n                                    HandleUpload(base64data, objectID._id.toString())\r\n\r\n                                }\r\n                                \r\n                                setDefaultValues({\r\n                                    title: title,\r\n                                    description: description,\r\n                                    hint: hint,\r\n                                    destination: destination\r\n                                });\r\n                                setimgurl(\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + props.id + \".jpeg?versionid=latest&date=\" + Date.now())\r\n                                props.cancel();\r\n                            });\r\n\r\n*/\r\n                        props.save(pin);\r\n                    }}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst PinMarker = (props) => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [base64data, setbase64data] = useState(\"default\");\r\n  \r\n    return (\r\n        <Marker\r\n            key={globalPosition}\r\n            position={props.pin.coords}\r\n            onClick={() => {\r\n                setModalShow(!modalShow);\r\n            }}\r\n        >\r\n            <EditForm\r\n\r\n                pin={props.pin}\r\n                id={props.pin._id}\r\n                show={modalShow}\r\n                save={(pin) => {\r\n                    const query = { _id: pin._id };\r\n                    const update = {\r\n                        $set: pin,\r\n                    };\r\n                    // update a pin on the database\r\n                    db.collection(\"PINS\")\r\n                        .findOneAndUpdate(query, update)\r\n                        .then((objectID) => {\r\n                            if(base64data === \"default\")\r\n                            {}\r\n                            else{\r\n                                //upload image\r\n                                HandleUpload(base64data, objectID._id.toString())\r\n\r\n                            }\r\n                            setModalShow(false);\r\n                      \r\n                        });\r\n                }}\r\n                cancel={() => setModalShow(false)}\r\n                \r\n                setbase64data={setbase64data}\r\n                base64data={base64data}\r\n            />\r\n        </Marker>\r\n    );\r\n};\r\n\r\nconst AddpinForm = (props) => {\r\n\r\n    return (\r\n        <Modal {...props} centered style={{ zIndex: \"1600\" }}>\r\n            <Modal.Header>\r\n                <Modal.Title>Add a Pin</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <label className=\"d-block\" htmlFor=\"title\">\r\n                    Title\r\n                </label>\r\n                <input type=\"text\" className=\"w-100\" id=\"title\" required />\r\n                <label className=\"d-block\" htmlFor=\"description\">\r\n                    Description\r\n                </label>\r\n                <textarea className=\"w-100\" id=\"description\" required />\r\n                <label className=\"d-block\" htmlFor=\"hint\">\r\n                    Hint\r\n                </label>\r\n                <textarea className=\"w-100\" id=\"hint\" required />\r\n                <label className=\"d-block\" htmlFor=\"destination\">\r\n                    Destination\r\n                </label>\r\n                <textarea className=\"w-100\" id=\"destination\" required />\r\n\r\n                <label className=\"d-block\" htmlFor=\"pinImage\">\r\n                    Image\r\n                </label>\r\n\r\n                <OpenFile base64data={props.base64data} setbase64data={props.setbase64data}> </OpenFile>\r\n                \r\n\r\n\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button className=\"btn btn-secondary\" onClick={props.onHide}>\r\n                    Cancel\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => {\r\n                        const title =\r\n                            document.getElementById(\"title\").value || \"\";\r\n                        const hint =\r\n                            document.getElementById(\"hint\").value || \"\";\r\n                        const description =\r\n                            document.getElementById(\"description\").value || \"\";\r\n                        const destination =\r\n                            document.getElementById(\"destination\").value || \"\";\r\n                        const { lng, lat } = globalPosition;\r\n                        // insert a new pin on the database\r\n                        const pin = {\r\n                            title: title,\r\n                            owner_id: client.auth.authInfo.userId,\r\n                            description: description,\r\n                            hint: hint,\r\n                            destination: destination,\r\n                            audio: \"\",\r\n                            video: \"\",\r\n                            coords: [lat, lng],\r\n                        };\r\n                        db.collection(\"PINS\")\r\n                            .insertOne(pin)\r\n                            .then((res) => {\r\n                                //console.log(res.insertedId.id)\r\n                                \r\n                                if(props.base64data === \"default\")\r\n                                {}\r\n                                else{\r\n                                    //upload image\r\n                                    HandleUpload(props.base64data, res.insertedId.toString())\r\n                                }\r\n                                // add the new pin to the map on success of adding the pin to\r\n                                // to the database\r\n                                props.setMarkers([\r\n                                    ...props.markers,\r\n                                    <PinMarker\r\n\r\n                                        id={res.insertedId.toString()}\r\n                                        description={description}\r\n                                        hint={hint}\r\n                                        destination={destination}\r\n                                        title={title}\r\n                                        objectID={res.insertedId}\r\n                                        lng={lng}\r\n                                        lat={lat}\r\n\r\n                                        key={res.insertedId}\r\n                                        pin={pin}\r\n\r\n                                    />,\r\n                                ]);\r\n\r\n                                var module = props.module;\r\n                                module.pins = [...module.pins, res.insertedId];\r\n                                props.setModule(module);\r\n\r\n                                const query = { _id: module._id };\r\n                                const update = {\r\n                                    $set: {\r\n                                        pins: module.pins,\r\n                                    },\r\n                                };\r\n                                const options = { upsert: false };\r\n                                db.collection(\"MODULES\")\r\n                                    .findOneAndUpdate(query, update, options)\r\n                                    .then((res) => {})\r\n                                    .catch(console.error);\r\n                            });\r\n                        props.onHide();\r\n                    }}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst DropPin = (props) => {\r\n    const [position, setPosition] = useState([45, 45]);\r\n    const [markers, setMarkers] = useState([]);\r\n    const [canPlacePin, setCanPlacePin] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [base64data, setbase64data] = useState(\"default\");\r\n    const [module, setModule] = useState({\r\n        _id: \"\",\r\n        title: \"\",\r\n        owner_email: \"\",\r\n        owner_id: \"\",\r\n        owner_name: \"\",\r\n        description: \"\",\r\n        pins: [],\r\n        shared_array: [],\r\n        public: false,\r\n    });\r\n   \r\n\r\n    // Getting the users current location\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((pos) => {\r\n            const { latitude, longitude } = pos.coords;\r\n            setPosition([latitude, longitude]);\r\n        });\r\n    }, []);\r\n\r\n    // Getting the module and pins for the module\r\n    useEffect(() => {\r\n        const query = {\r\n            _id: ObjectId(props.match.params.id),\r\n        };\r\n        db.collection(\"MODULES\")\r\n            .findOne(query)\r\n            .then((res) => {\r\n                setModule(res);\r\n\r\n                // Pipeline to ensure that the order of the pins stays the same after the query\r\n                const pipeline = [\r\n                    { $match: { _id: { $in: res.pins } } },\r\n                    {\r\n                        $addFields: {\r\n                            __order: { $indexOfArray: [res.pins, \"$_id\"] },\r\n                        },\r\n                    },\r\n                    { $sort: { __order: 1 } },\r\n                ];\r\n\r\n                db.collection(\"PINS\")\r\n                    .aggregate(pipeline)\r\n                    .toArray()\r\n                    .then((res) => {\r\n                        setMarkers(\r\n                            res.map((pin) => {\r\n\r\n                                return <PinMarker \r\n                                        key={pin._id} pin={pin}\r\n                                        setbase64data={setbase64data}\r\n                                        base64data={base64data}\r\n                                    />;\r\n\r\n                            })\r\n                        );\r\n                    });\r\n            })\r\n            .catch(console.error);\r\n    }, [props.match.params.id]);\r\n\r\n    return (\r\n        <Map\r\n            center={position}\r\n            zoom={13}\r\n            onClick={(e) => {\r\n                if (canPlacePin) {\r\n                    globalPosition = e.latlng;\r\n                    setModalShow(true);\r\n                    setCanPlacePin(!canPlacePin);\r\n                }\r\n            }}\r\n        >\r\n            <AddpinForm\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                setMarkers={setMarkers}\r\n                markers={markers}\r\n                setModule={setModule}\r\n                module={module}\r\n                \r\n                setbase64data={setbase64data}\r\n                base64data={base64data}\r\n            />\r\n            <button\r\n                style={{\r\n                    zIndex: 1500,\r\n                    position: \"fixed\",\r\n                    bottom: \"10px\",\r\n                    left: \"10px\",\r\n                    textAlign: \"center\",\r\n                }}\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                    window.history.back();\r\n                }}\r\n            >\r\n                Save\r\n            </button>\r\n            <button\r\n                style={floatStyle}\r\n                onClick={() => setCanPlacePin(!canPlacePin)}\r\n            >\r\n                <div style={{ fontSize: \"40px\" }}>+</div>\r\n            </button>\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            <Marker position={position}>\r\n                <Popup>Your location</Popup>\r\n            </Marker>\r\n            {markers}\r\n        </Map>\r\n    );\r\n};\r\n\r\nexport default DropPin;\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 213;","import React, {Component} from 'react'\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L from 'leaflet'\r\n\r\n\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\n\r\n\r\nclass MapView extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state ={\r\n      currentLocation: {lat: 45.51, lng:-122.68},\r\n      zoom: 13,\r\n      userLocation:[],\r\n      userLocationFound: false,\r\n    }\r\n  this.getUserPosition = this.getUserPosition.bind(this)\r\n  }\r\n  \r\n\r\n  getUserPosition(){\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\r\n      \r\n      console.log(this.state)\r\n      \r\n    })\r\n  \r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getUserPosition()\r\n\r\n    \r\n  }\r\n\r\n  render(){\r\n    const userLocation = this.state.userLocationFound ? (\r\n      <Marker position={this.state.userLocation}>\r\n        <Popup >Your location</Popup>\r\n      </Marker>\r\n    ) : null\r\n\r\n    return (\r\n      <div id='leaflet-container'>\r\n      <Map center={this.state.currentLocation} zoom={13} maxZoom={18} >\r\n        <TileLayer\r\n          \r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n        />\r\n        {userLocation}     \r\n      </Map>\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default MapView;","import React, { Component } from \"react\";\r\nimport {\r\n    Stitch,\r\n    RemoteMongoClient,\r\n    GoogleRedirectCredential,\r\n} from \"mongodb-stitch-browser-sdk\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport styled from \"styled-components\";\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            useremail: \"\",\r\n            userID: \"\",\r\n            stitch_res: [],\r\n            menuOpen: this.props.open,\r\n        };\r\n\r\n        //bind functions\r\n        this.login = this.login.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.addamodule = this.addamodule.bind(this);\r\n        this.listmymodules = this.listmymodules.bind(this);\r\n        console.log(props);\r\n        const appId = \"capstonear_app-xkqng\";\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId);\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n            );\r\n            //select the db in our mongdb atlas cluster\r\n            this.db = mongodb.db(\"APP\");\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        //init mongodb stitch\r\n\r\n        if (\r\n            this.client.auth.isLoggedIn &&\r\n            this.client.auth.authInfo.userProfile\r\n        ) {\r\n            this.setState({\r\n                username: this.client.auth.authInfo.userProfile.data.first_name,\r\n                useremail: this.client.auth.authInfo.userProfile.data.email,\r\n                userID: this.client.auth.authInfo.userId,\r\n                userImg: this.client.auth.authInfo.userProfile.data.picture,\r\n            });\r\n\r\n            console.log(this.client.auth.authInfo.userProfile.data);\r\n        }\r\n    }\r\n\r\n    //login button handler\r\n    async login() {\r\n        //login using google redirect\r\n        const credential = new GoogleRedirectCredential();\r\n        this.client.auth.loginWithRedirect(credential);\r\n        console.log(this.state);\r\n    }\r\n\r\n    async logout() {\r\n        await this.client.auth.logout();\r\n        this.setState({\r\n            username: \"\",\r\n            useremail: \"\",\r\n            userID: \"\",\r\n        });\r\n        window.location.reload();\r\n    }\r\n\r\n    addamodule() {\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .insertOne({\r\n                owner_id: this.state.userID,\r\n                name: this.state.temp_module_name,\r\n                owner: this.state.useremail,\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    listmymodules() {\r\n        if (!this.client.auth.isLoggedIn) {\r\n            return;\r\n        }\r\n        this.db\r\n            .collection(\"PINS\")\r\n            .find({ _id: ObjectId(\"5ebed1bc5992681f357d7948\") })\r\n            .asArray()\r\n            .then((stitch_res) => {\r\n                this.setState({ stitch_res });\r\n                console.log(this.state.stitch_res[0]);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <StyledMenu\r\n                open={this.props.open}\r\n                setOpen={this.props.setOpen}\r\n                center_container={this.props.center_container}\r\n                style={{}}\r\n            >\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        top: \"2rem\",\r\n                    }}\r\n                >\r\n                    <img\r\n                        src={this.state.userImg}\r\n                        alt=\"test\"\r\n                        style={{\r\n                            maxHeigh: \"80px\",\r\n                            maxWidth: \"80px\",\r\n                            borderRadius: \"50%\",\r\n                            top: \"1rem\",\r\n                        }}\r\n                    ></img>\r\n\r\n                    <p\r\n                        style={{\r\n                            fontSize: \"1.5rem\",\r\n                            top: \"4rem\",\r\n                            color: \"white\",\r\n                            zIndex: 1002,\r\n                        }}\r\n                    >\r\n                        {\" \"}\r\n                        Welcome, <br /> {this.state.username}{\" \"}\r\n                    </p>\r\n                </div>\r\n\r\n                <ul\r\n                    style={{ listStyleType: \"none\", paddingLeft: 0 }}\r\n                    onClick={() => {\r\n                        this.props.center_container.center_container.current.style.opacity = 1;\r\n                        this.props.setOpen(!this.props.open);\r\n                    }}\r\n                >\r\n                    <li>\r\n                        <a href=\"#/\">Home</a>\r\n                    </li>\r\n                    <br />\r\n                    <li>\r\n                        <a href=\"#/modules\">My Modules</a>\r\n                    </li>\r\n                    <br />\r\n                    <li>\r\n                        <a href=\"#/modules/edit\">Manage Modules</a>\r\n                    </li>\r\n                    <br />\r\n                </ul>\r\n\r\n                <a\r\n                    href=\"#/logout\"\r\n                    onClick={this.logout}\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        fontSize: \"1rem\",\r\n                        fontColor: \"#00000\",\r\n                        bottom: \"10rem\",\r\n                    }}\r\n                >\r\n                    Log Out\r\n                </a>\r\n            </StyledMenu>\r\n        );\r\n    }\r\n}\r\n\r\n// menu style sheet\r\n// tutorial from https://css-tricks.com/hamburger-menu-with-a-side-of-react-hooks-and-styled-components/ with modified styles\r\nconst StyledMenu = styled.nav`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    background: #343a40;\r\n    transform: ${({ open }) =>\r\n        open ? \"translateX(-100)\" : \"translateX(100%)\"};\r\n    height: 100vh;\r\n    text-align: left;\r\n    padding: 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    transition: transform 0.3s ease-in-out;\r\n    z-index: 1501;\r\n\r\n    @media (max-width: 150px) {\r\n        width: 100%;\r\n    }\r\n\r\n    a {\r\n        font-size: 1.5rem;\r\n        text-transform: uppercase;\r\n        padding: 2rem 0;\r\n        font-weight: Light;\r\n        letter-spacing: 0.5rem;\r\n        color: #FFFFF;\r\n        text-decoration: none;\r\n        transition: color 0.3s linear;\r\n\r\n        @media (max-width: 150px) {\r\n            font-size: 1rem;\r\n            text-align: center;\r\n        }\r\n\r\n        &:hover {\r\n            color: #343078;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Menu;\r\n","import React, {Component} from 'react'\r\nimport './Login.css'\r\nimport {Stitch, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\r\n\r\nexport default class Login extends Component{\r\n    constructor(){\r\n        super()\r\n        const appId = \"capstonear_app-xkqng\"\r\n        this.client = Stitch.getAppClient(appId)\r\n        this.login = this.login.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n      if (this.client.auth.hasRedirectResult()) {\r\n        console.log(\"has results\")\r\n  \r\n        this.client.auth.handleRedirectResult().then(user => {\r\n          this.setState(\r\n            {\r\n              username: this.client.auth.authInfo.userProfile.data.name,\r\n              useremail: this.client.auth.authInfo.userProfile.data.email,\r\n              userID: this.client.auth.authInfo.userId,\r\n  \r\n            }\r\n          )\r\n          window.location.assign('#/')\r\n        }\r\n        )\r\n      }\r\n        \r\n       \r\n    }\r\n\r\n\r\n    async login(){\r\n          \r\n          //login using google redirect\r\n          const credential = new GoogleRedirectCredential();\r\n          await this.client.auth.loginWithRedirect(credential);\r\n          console.log(this.state)\r\n          \r\n        \r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      \r\n          <div class=\"row justify-content-center\" style={{\r\n            position: \"fixed\",\r\n            margin: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0,\r\n            height: \"50px\"\r\n          }}>\r\n              <button class=\"btn btn-primary\"onClick={this.login}>Login with Google</button>\r\n          </div>\r\n      \r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Menu from './Menu'\r\n\r\n\r\nconst StyledBurger = styled.button`\r\n  position: fixed;\r\n  top: 10px;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 1502;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.25rem;\r\n    background: ${({ open }) => open ? '#FFFFFF' : '#FFFFFF'};\r\n    border-radius: 10px;\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => open ? '0' : '1'};\r\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\r\n    }\r\n  }\r\n`\r\n\r\nconst Burger = ({ open, setOpen, center_container }) => {\r\n  console.log(center_container.center_container.current)\r\n  return (\r\n    <StyledBurger open={open} onClick={() => {\r\n      setOpen(!open)\r\n      if(!open)\r\n        center_container.center_container.current.style.opacity = .5 \r\n      else\r\n        center_container.center_container.current.style.opacity = 1\r\n    }}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </StyledBurger>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst NavMenu = (center_container) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n        <div>\r\n        <Burger open={open} setOpen={setOpen} center_container={center_container} />\r\n        <Menu open={open} setOpen={setOpen} center_container={center_container}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavMenu","import React, { Component} from 'react'\r\n\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\r\nimport {Container} from 'react-bootstrap'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport {Stitch,RemoteMongoClient,BSON} from \"mongodb-stitch-browser-sdk\"\r\nimport {AwsServiceClient, AwsRequest } from 'mongodb-stitch-browser-services-aws'\r\nimport {ObjectId} from 'mongodb'\r\n//const BSON = require('bson');\r\n\r\nexport default class Module extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            current_position:[],\r\n            module_info: {\r\n                name:'',\r\n                owner_email: '',\r\n                owner_id: '',\r\n                owner_name: '',\r\n                description: '',\r\n            },\r\n          \r\n            base64img:'',\r\n            user: {\r\n                _id: '',\r\n                user_id: '',\r\n                accessed_links: [],\r\n            },\r\n\r\n        }\r\n\r\n        this.getUserPosition = this.getUserPosition.bind(this)\r\n        this.fetch_userinfo = this.fetch_userinfo.bind(this)\r\n\r\n        this.update_user = this.update_user.bind(this);\r\n\r\n        const appId = \"capstonear_app-xkqng\"\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId)\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n              );\r\n              //select the db in our mongdb atlas cluster\r\n              this.db = mongodb.db(\"APP\");\r\n            console.log(\"client\")\r\n        }\r\n        else{\r\n            this.client = Stitch.initializeAppClient(appId)\r\n            console.log(\"client init\")\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.getUserPosition()\r\n        this.fetch_userinfo()\r\n\r\n        const appId = \"capstonear_app-xkqng\"\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId)\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n              );\r\n              //select the db in our mongdb atlas cluster\r\n              this.db = mongodb.db(\"APP\");\r\n            console.log(\"client\")\r\n        }\r\n        else{\r\n            this.client = Stitch.initializeAppClient(appId)\r\n            console.log(\"client init\")\r\n        }\r\n    }\r\n\r\n    async fetch_userinfo(){\r\n        await this.db.collection(\"MODULES\").find({\r\n            _id: ObjectId(this.props.match.params.id)\r\n        })\r\n        .asArray()\r\n        .then((module_info) => {\r\n            if(module_info === undefined || module_info.length === 0)\r\n            {\r\n                console.log(module_info)\r\n                return\r\n            }\r\n            this.setState({module_info: module_info[0]}\r\n            )\r\n          console.log(module_info)\r\n        }\r\n        )\r\n        .catch((err) => {this.setState({error: err})\r\n         console.log(err)\r\n        }\r\n        )\r\n\r\n        const query = {\r\n            user_id: this.client.auth.authInfo.userId,\r\n        };\r\n        await this.db\r\n            .collection(\"USERS\")\r\n            .findOne(query)\r\n            .then((res) => {\r\n                console.log(\"User: \", res);\r\n\r\n                this.setState({ user: res });\r\n            })\r\n            .catch(console.error);\r\n\r\n        this.update_user();\r\n    }\r\n\r\n    getUserPosition(){\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n          this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\r\n          \r\n          console.log(this.state)\r\n          \r\n        })\r\n    }\r\n\r\n    update_user() {\r\n        if(\r\n            this.client.auth.authInfo.userId != this.state.module_info.owner_id && this.state.module_info.public == true && !this.state.module_info.shared_with.includes(this.client.auth.authInfo.userProfile.email)){\r\n            const query = {\r\n                _id: this.state.user._id,\r\n                user_id: this.client.auth.authInfo.userId,\r\n            };\r\n            const update = { $addToSet: { accessed_links: ObjectId(this.state.module_info._id) } };\r\n    \r\n            this.db\r\n                .collection(\"USERS\")\r\n                .findOneAndUpdate(query, update)\r\n                .then((res) => {\r\n                    console.log(\"Update response: \", res);\r\n                })\r\n                .catch(console.error);\r\n        }\r\n    }\r\n\r\n    renderMap(){\r\n        const userLocation = this.state.userLocationFound ? (\r\n            <Marker position={this.state.userLocation}>\r\n              <Popup >Your location</Popup>\r\n            </Marker>\r\n          ) : null\r\n\r\n        return (\r\n        <div id='leaflet-container'>\r\n        <Map center={this.state.currentLocation} zoom={13} maxZoom={18} >\r\n            <TileLayer\r\n            \r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n            />\r\n            {userLocation}     \r\n        </Map>\r\n        </div>\r\n        )   \r\n    }\r\n\r\n\r\n    fileToBase64 = (filename, filepath) => {\r\n        return new Promise(resolve => {\r\n          var file = new File([filename], filepath);\r\n          var reader = new FileReader();\r\n          // Read file content on file loaded event\r\n          reader.onload = function(event) {\r\n            resolve(event.target.result);\r\n          };\r\n          \r\n          // Convert data to base64 \r\n          reader.readAsDataURL(file);\r\n        });\r\n      };\r\n\r\n\r\n    render(){\r\n      \r\n        return(\r\n            <Container>\r\n                title: \r\n                <br />\r\n                {this.state.module_info.title}\r\n                <br />\r\n                <br />\r\n\r\n                owner_email: \r\n                <br />\r\n                {this.state.module_info.owner_email}\r\n                <br />\r\n                <br />\r\n\r\n                owner_name: \r\n                <br />\r\n                {this.state.module_info.owner_name}\r\n                <br />\r\n                <br />\r\n\r\n                owner_id: \r\n                <br />\r\n                {this.state.module_info.owner_id}\r\n                <br />\r\n                <br />\r\n\r\n                description: \r\n                <br />\r\n                {this.state.module_info.description}\r\n                <br />\r\n                <br />\r\n              \r\n             \r\n        \r\n\r\n                <button className='btn btn-primary' \r\n                        onClick={() =>\r\n                            window.location.assign(\r\n                                \"#/module/\" + this.state.module_info._id+\"/pins\"\r\n                        )}\r\n                        >start module</button>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Button,\r\n    Tabs,\r\n    Tab,\r\n    Modal,\r\n    FormControl,\r\n    FormGroup,\r\n} from \"react-bootstrap\";\r\nimport { List, arrayMove } from \"react-movable\";\r\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport \"./EditModule.css\";\r\n\r\nimport { EditForm } from \"./DropPin\";\r\n\r\n// @classdesc Used to make the Edit Module view.\r\nexport default class EditModule extends Component {\r\n    // Creates a new EditModule\r\n    // @param {Object} props\r\n    // @class\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            module_info: {\r\n                _id: \"\",\r\n                title: \"\",\r\n                owner_email: \"\",\r\n                owner_id: \"\",\r\n                owner_name: \"\",\r\n                description: \"\",\r\n                pins: [],\r\n                shared_with: [],\r\n                public: false,\r\n            },\r\n            email: \"\",\r\n            shared_with: [],\r\n            pins: [],\r\n            idx: -1,\r\n            ind: -1,\r\n            modal: null,\r\n            modal2: null,\r\n            copied: false,\r\n            link: \"\",\r\n        };\r\n\r\n        this.fetch_userinfo = this.fetch_userinfo.bind(this);\r\n\r\n        this.show_modal = this.show_modal.bind(this);\r\n        this.show_modal2 = this.show_modal2.bind(this);\r\n        this.hide_modal = this.hide_modal.bind(this);\r\n        this.hide_modal2 = this.hide_modal2.bind(this);\r\n        this.delete_pin_modal = this.delete_pin_modal.bind(this);\r\n        this.share_modal = this.share_modal.bind(this);\r\n        this.list_shared = this.list_shared.bind(this);\r\n        this.add_email = this.add_email.bind(this);\r\n        this.delete_email = this.delete_email.bind(this);\r\n        this.delete_email_modal = this.delete_email_modal.bind(this);\r\n        this.copy_clipboard = this.copy_clipboard.bind(this);\r\n\r\n        this.save_pin = this.save_pin.bind(this);\r\n        this.delete_pin = this.delete_pin.bind(this);\r\n        this.list_pins = this.list_pins.bind(this);\r\n        this.module_form = this.module_form.bind(this);\r\n        this.save_pin_order = this.save_pin_order.bind(this);\r\n        this.save_module = this.save_module.bind(this);\r\n\r\n        const appId = \"capstonear_app-xkqng\";\r\n        this.client = Stitch.hasAppClient(appId)\r\n            ? Stitch.getAppClient(appId)\r\n            : Stitch.initializeDefaultAppClient(appId);\r\n        const mongodb = this.client.getServiceClient(\r\n            RemoteMongoClient.factory,\r\n            \"mongodb-atlas\"\r\n        );\r\n        this.db = mongodb.db(\"APP\");\r\n\r\n        this.fetch_userinfo();\r\n    }\r\n\r\n    // Gets the module ID from the routing parameter and uses it to get the\r\n    // associated module and pins for that module.\r\n    // @return {Promise} Query to set state.module_info and state.pins\r\n    async fetch_userinfo() {\r\n        const query = {\r\n            _id: ObjectId(this.props.match.params.id),\r\n        };\r\n\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .findOne(query)\r\n            .then((res) => {\r\n                console.log(\"Module: \", res);\r\n                this.setState({ module_info: res });\r\n\r\n                // Pipeline to ensure that the order of the pins stays the same after the query\r\n                const pipeline = [\r\n                    { $match: { _id: { $in: res.pins } } },\r\n                    {\r\n                        $addFields: {\r\n                            __order: { $indexOfArray: [res.pins, \"$_id\"] },\r\n                        },\r\n                    },\r\n                    { $sort: { __order: 1 } },\r\n                ];\r\n\r\n                this.db\r\n                    .collection(\"PINS\")\r\n                    .aggregate(pipeline)\r\n                    .toArray()\r\n                    .then((res) => {\r\n                        console.log(\"Pins: \", res);\r\n                        this.setState({ pins: res });\r\n                    });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // copies textarea to clipboard and sets copy state\r\n    copy_clipboard() {\r\n        const e = this.textArea;\r\n        e.select();\r\n        document.execCommand(\"copy\");\r\n        this.setState({ copy: true });\r\n    }\r\n\r\n    // Sets state.modal to true\r\n    show_modal(id) {\r\n        this.setState({ modal: id });\r\n    }\r\n\r\n    // Sets state.modal2 to true\r\n    show_modal2(id) {\r\n        this.setState({ modal2: id });\r\n    }\r\n\r\n    // Sets state.modal to false\r\n    hide_modal() {\r\n        this.setState({ modal: null });\r\n    }\r\n\r\n    // Sets state.modal2 to false\r\n    hide_modal2() {\r\n        this.setState({ modal2: null });\r\n    }\r\n\r\n    // @return {JSX.Element} Modal to confirm deletion\r\n    delete_pin_modal() {\r\n        var modal_message;\r\n        if (this.state.idx < 0) modal_message = <p>Nothing to delete</p>;\r\n        else\r\n            modal_message = (\r\n                <p>\r\n                    Are you sure you want to delete{\" \"}\r\n                    <b>{this.state.pins[this.state.idx].title}</b>?\r\n                </p>\r\n            );\r\n\r\n        return (\r\n            <Modal\r\n                // size=\"sm\"\r\n                show={this.state.modal === \"delete\"}\r\n                onHide={(e) => {\r\n                    this.hide_modal();\r\n                }}\r\n                style={{\r\n                    marginTop: \"50px\",\r\n                }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm Deletion</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{modal_message}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            if (this.state.idx > -1)\r\n                                this.delete_pin(this.state.idx);\r\n                            this.hide_modal();\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.hide_modal();\r\n                        }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    // @return {JSX.Element} Modal to confirm deletion of email\r\n    delete_email_modal() {\r\n        var modal_message;\r\n        if (this.state.ind < 0) modal_message = <p>Nothing to delete</p>;\r\n        else\r\n            modal_message = (\r\n                <p>\r\n                    Are you sure you want to delete{\" \"}\r\n                    <b>{this.state.module_info.shared_with[this.state.ind]}</b>?\r\n                </p>\r\n            );\r\n\r\n        return (\r\n            <Modal\r\n                // size=\"sm\"\r\n                show={this.state.modal2 === \"delete_email\"}\r\n                onHide={(e) => {\r\n                    this.hide_modal2();\r\n                }}\r\n                style={{\r\n                    marginTop: \"50px\",\r\n                }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm Deletion</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{modal_message}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={(e) => {\r\n                            if (this.state.ind > -1)\r\n                                this.delete_email(this.state.ind);\r\n                            this.hide_modal2();\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.hide_modal2();\r\n                        }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    // This function adds a email to MODULES.shared_with and avoids duplicates\r\n    add_email() {\r\n        const query = { _id: this.state.module_info._id };\r\n        const update = {\r\n            $addToSet: { shared_with: this.state.email },\r\n        };\r\n        const options = { upsert: false, returnNewDocument: true };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .findOneAndUpdate(query, update, options)\r\n            .then((res) => {\r\n                var shared_with = res.shared_with;\r\n                this.setState({ shared_with: shared_with });\r\n                this.setState({ module_info: res });\r\n                console.log(\"Save response: \", res);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // This function will remove a email from MODULES.shared_with\r\n    // @param {number} ind - The index of the email to delete\r\n    delete_email(ind) {\r\n        const query = { _id: this.state.module_info._id };\r\n        const update = {\r\n            $pull: { shared_with: this.state.shared_with[ind] },\r\n        };\r\n        const options = { multi: false, returnNewDocument: true };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .findOneAndUpdate(query, update, options)\r\n            .then((res) => {\r\n                var shared_with = res.shared_with;\r\n                this.setState({ shared_with: shared_with, ind: -1 });\r\n                this.setState({ module_info: res });\r\n                console.log(\"Save response: \", res);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // Creates the list of emails in MODULES.shared_with\r\n    // @return {JSX.Element} The list of emails.\r\n    list_shared() {\r\n        return this.state.module_info.shared_with.map((module_info, ind) => {\r\n            return (\r\n                <div key={ind}>\r\n                    <Row form>\r\n                        <Col xs=\"8\">\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    plaintext\r\n                                    readOnly\r\n                                    type=\"text\"\r\n                                    value={\r\n                                        this.state.module_info.shared_with[ind]\r\n                                    }\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                variant=\"danger\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.setState({ ind: ind });\r\n                                    this.show_modal2(\"delete_email\");\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    {this.delete_email_modal()}\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    // Modal to display MODULE.shared_with emails to allow adding and deleting\r\n    share_modal() {\r\n        return (\r\n            <Modal\r\n                sz=\"lg\"\r\n                show={this.state.modal === \"share\"}\r\n                onHide={(event) => {\r\n                    this.hide_modal();\r\n                }}\r\n                style={{\r\n                    maxHeight: \"100vh\",\r\n                    marginTop: \"50px\",\r\n                }}\r\n            >\r\n                <Modal.Header closeButton>Shared With</Modal.Header>\r\n                <Modal.Body>\r\n                    <div\r\n                        style={{\r\n                            maxHeight: \"calc(100vh - 450px)\",\r\n                            overflowY: \"auto\",\r\n                            overflowX: \"hidden\",\r\n                        }}\r\n                    >\r\n                        {this.list_shared()}\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer\r\n                    style={{\r\n                        maxHeight: \"calc(100vh - 450px)\",\r\n                        overflowY: \"auto\",\r\n                        overflowX: \"hidden\",\r\n                    }}\r\n                >\r\n                    <Form\r\n                        style={{\r\n                            position: \"relative\",\r\n                            margin: \"auto\",\r\n                        }}\r\n                    >\r\n                        <Form.Group>\r\n                            <FormControl\r\n                                id=\"email\"\r\n                                type=\"email\"\r\n                                value={this.state.email}\r\n                                onChange={(e) => {\r\n                                    var email = this.state.email;\r\n                                    email = e.target.value;\r\n                                    this.setState({ email: email });\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                size=\"lg\"\r\n                                block\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    if (this.state.email !== \"\")\r\n                                        this.add_email();\r\n                                }}\r\n                            >\r\n                                Add\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                size=\"lg\"\r\n                                block\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.hide_modal();\r\n                                }}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                            <Form.Group\r\n                                style={{\r\n                                    marginTop: \"15px\",\r\n                                }}\r\n                            >\r\n                                <textarea\r\n                                    ref={(textarea) =>\r\n                                        (this.textArea = textarea)\r\n                                    }\r\n                                    plaintext\r\n                                    readOnly\r\n                                    value={this.state.link}\r\n                                    placeholder=\"Sharing This Module Requires They Be Set To Public!\"\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                        height: \"80px\",\r\n                                    }}\r\n                                />\r\n                                <Button\r\n                                    variant=\"secondary\"\r\n                                    size=\"sm\"\r\n                                    block\r\n                                    onClick={(event) => {\r\n                                        event.preventDefault();\r\n                                        this.setState({\r\n                                            link:\r\n                                                window.location.origin +\r\n                                                \"/ar-app/#/module/\" +\r\n                                                this.state.module_info._id,\r\n                                        });\r\n                                        this.copy_clipboard();\r\n                                    }}\r\n                                >\r\n                                    Copy Link\r\n                                </Button>\r\n                                {this.state.copy ? (\r\n                                    <div style={{ color: \"green\" }}>\r\n                                        Copied to clipboard!\r\n                                    </div>\r\n                                ) : null}\r\n                            </Form.Group>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    // @return {JSX.Element} Form to fill out module title, description, and\r\n    // public/private status\r\n    module_form() {\r\n        return (\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                        type=\"title\"\r\n                        id=\"title\"\r\n                        value={this.state.module_info.title}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.title = e.target.value;\r\n                            this.setState({ module_info: module_info });\r\n                        }}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"5\"\r\n                        id=\"description\"\r\n                        value={this.state.module_info.description}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.description = e.target.value;\r\n                            this.setState({ module_info: module_info });\r\n                        }}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        marginBottom: \"0\",\r\n                    }}\r\n                >\r\n                    <Form.Check\r\n                        inline\r\n                        type=\"radio\"\r\n                        label=\"Public\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"true\"\r\n                        checked={this.state.module_info.public}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.public = true;\r\n                            this.setState({\r\n                                module_info: module_info,\r\n                            });\r\n                        }}\r\n                    />\r\n                    <Form.Check\r\n                        inline\r\n                        type=\"radio\"\r\n                        label=\"Private\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"false\"\r\n                        checked={!this.state.module_info.public}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.public = false;\r\n                            this.setState({\r\n                                module_info: module_info,\r\n                            });\r\n                        }}\r\n                    />\r\n                </Form.Group>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    // Creates the list of pins based on state.pins. Uses the react-movable\r\n    // library to make the list of pins draggable.\r\n    // @return {JSX.Element} The list of pins.\r\n    list_pins() {\r\n        return (\r\n            <List\r\n                values={this.state.pins}\r\n                onChange={({ oldIndex, newIndex }) => {\r\n                    var pins = this.state.pins;\r\n                    pins = arrayMove(pins, oldIndex, newIndex);\r\n                    this.setState({ pins: pins });\r\n                }}\r\n                renderList={({ children, props }) => (\r\n                    <ol\r\n                        {...props}\r\n                        style={{\r\n                            display: \"grid\",\r\n                            justifyContent: \"center\",\r\n                            paddingLeft: \"0px\",\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </ol>\r\n                )}\r\n                renderItem={({ index, props }) => (\r\n                    <li {...props}>\r\n                        <Row style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\r\n                            <Col\r\n                                xs=\"4\"\r\n                                style={{\r\n                                    marginTop: \"auto\",\r\n                                    marginBottom: \"auto\",\r\n                                }}\r\n                            >\r\n                                {this.state.pins[index].title}\r\n                            </Col>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"link\"\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        this.setState({ idx: index });\r\n                                        this.show_modal(\"edit_pin_\" + index);\r\n                                    }}\r\n                                >\r\n                                    Edit\r\n                                </Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"danger\"\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        this.setState({ idx: index });\r\n                                        this.show_modal(\"delete\");\r\n                                    }}\r\n                                >\r\n                                    Delete\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <EditForm\r\n                            pin={this.state.pins[index]}\r\n                            show={this.state.modal === \"edit_pin_\" + index}\r\n                            save={(pin) => {\r\n                                this.save_pin(pin);\r\n                            }}\r\n                            cancel={() => this.hide_modal()}\r\n                        />\r\n                    </li>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n\r\n    save_pin(pin) {\r\n        const query = { _id: pin._id };\r\n        const update = {\r\n            $set: pin,\r\n        };\r\n        // update a pin on the database\r\n        this.db\r\n            .collection(\"PINS\")\r\n            .findOneAndUpdate(query, update)\r\n            .then((res) => {\r\n                console.log(\"Pin update response: \", res);\r\n\r\n                // Update pin list\r\n                var pins = this.state.pins;\r\n                pins[this.state.idx] = pin;\r\n                this.setState({ pins: pins });\r\n                this.hide_modal();\r\n            });\r\n    }\r\n\r\n    // This function will remove a pin from the DB and state.pins\r\n    // @param {number} idx - The index of the pin to delete\r\n    delete_pin(idx) {\r\n        const query = { _id: this.state.pins[idx]._id };\r\n        this.db\r\n            .collection(\"PINS\")\r\n            .deleteOne(query)\r\n            .then((res) => {\r\n                console.log(\"Delete response: \", res);\r\n\r\n                // Update pin list\r\n                var pins = this.state.pins;\r\n                pins.splice(idx, 1);\r\n                this.setState({ pins: pins, idx: -1 });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // Converts state.pins to a list of ObjectIDs, then updates\r\n    // state.module_info.pins based on the new list\r\n    save_pin_order() {\r\n        var module = this.state.module_info;\r\n        const pin_ids = this.state.pins.map((pin) => {\r\n            return pin._id;\r\n        });\r\n        module.pins = pin_ids;\r\n        this.setState({ module_info: module });\r\n    }\r\n\r\n    // Saves the module to the DB\r\n    save_module() {\r\n        this.save_pin_order();\r\n        const query = { _id: this.state.module_info._id };\r\n        const update = {\r\n            $set: this.state.module_info,\r\n        };\r\n        const options = { upsert: false };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .updateOne(query, update, options)\r\n            .then((res) => {\r\n                console.log(\"Save response: \", res);\r\n\r\n                // Go back to Manage Module view\r\n                window.location.assign(\"#/modules/edit/\");\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // @return {JSX.Element} The EditModule componenet\r\n    render() {\r\n        return (\r\n            <Container\r\n                style={{\r\n                    marginTop: \"10px\",\r\n                    maxWidth: \"540px\",\r\n                    height:\"100vh\",\r\n\r\n                }}\r\n            >\r\n                <Form style={{ height: \"100%\" }}>\r\n                    <Tabs\r\n                        defaultActiveKey=\"Module Info\"\r\n                        transition={false}\r\n                        style={{\r\n                            textAlign: \"center\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Tab eventKey=\"Module Info\" title=\"Module Info\">\r\n                            {this.module_form()}\r\n                                <Form.Group>\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    size=\"lg\"\r\n                                    block\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        var id = this.state.module_info._id;\r\n                                        window.location.assign(\r\n                                            \"#/module/\" + id + \"/pins/edit\"\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    Pin Map\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"secondary\"\r\n                                    size=\"lg\"\r\n                                    block\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        this.save_module();\r\n                                    }}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                            >\r\n                                <Button variant=\"primary\">Share</Button>\r\n                            </Form.Group>\r\n                        </Tab>\r\n                        <Tab\r\n                            eventKey=\"Pins\"\r\n                            title=\"Pins\"\r\n                            style={{ height: \"100%\" }}\r\n                        >\r\n                            {this.list_pins()}\r\n                        </Tab>\r\n                    </Tabs>\r\n\r\n                    <Form.Group>\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            size=\"lg\"\r\n                            block\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                var id = this.state.module_info._id;\r\n                                window.location.assign(\r\n                                    \"#/module/\" + id + \"/pins/edit\"\r\n                                );\r\n                            }}\r\n                        >\r\n                            Pin Map\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"secondary\"\r\n                            size=\"lg\"\r\n                            block\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                this.save_module();\r\n                            }}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            size=\"lg\"\r\n                            block\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                this.show_modal(\"share\");\r\n                            }}\r\n                        >\r\n                            Share\r\n                        </Button>\r\n                    </Form.Group>\r\n\r\n                </Form>\r\n                {this.delete_pin_modal()}\r\n                {this.share_modal()}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Tab, Tabs, CardDeck, Form, Button } from \"react-bootstrap\";\r\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport { waitForElementToBeRemoved } from \"@testing-library/react\";\r\n//import {AwsServiceClient, AwsRequest} from 'mongodb-stitch-browser-services-aws'\r\n\r\nexport default class ViewModules extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modules: [],\r\n            my_modules: [],\r\n            shared_modules: [],\r\n            img1: \"\",\r\n            stitch_res: [],\r\n            user: {\r\n                _id: '',\r\n                user_id: '',\r\n                accessed_links: [],\r\n            },\r\n            accessed_modules: [],\r\n        };\r\n        \r\n\r\n        //refs\r\n        this.goto_module_id = React.createRef();\r\n\r\n        this.add_module_cards = this.add_module_cards.bind(this);\r\n        this.fetch_modules = this.fetch_modules.bind(this);\r\n        this.goto_module = this.goto_module.bind(this);\r\n\r\n        const appId = \"capstonear_app-xkqng\";\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId);\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n            );\r\n            //select the db in our mongdb atlas cluster\r\n            this.db = mongodb.db(\"APP\");\r\n        } else {\r\n            this.client = Stitch.initializeAppClient(appId);\r\n            //console.log(\"client init\")\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetch_modules();\r\n\r\n        console.log(this.state);\r\n    }\r\n\r\n    async fetch_modules() {\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find({\r\n                owner_id: this.client.auth.authInfo.userId,\r\n            })\r\n            .asArray()\r\n            .then((my_modules) => {\r\n                this.setState({\r\n                    my_modules: my_modules,\r\n                    modules: {\r\n                        0: my_modules,\r\n                        1: this.state.shared_modules,\r\n                        2: this.state.accessed_modules,\r\n                    },\r\n                });\r\n\r\n                console.log(this.state.my_modules);\r\n            });\r\n\r\n        //fetch shared modules\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find({\r\n                shared_with: this.client.auth.authInfo.userProfile.data.email,\r\n            })\r\n            .asArray()\r\n            .then((shared_modules) => {\r\n                this.setState({\r\n                    shared_modules: shared_modules,\r\n                    modules: {\r\n                        0: this.state.my_modules,\r\n                        1: shared_modules,\r\n                        2: this.state.accessed_modules,\r\n                    },\r\n                });\r\n                console.log(shared_modules);\r\n            });\r\n        console.log(this.state.modules);\r\n\r\n        // fetch user collection, create new if not found\r\n        const query = {\r\n            user_id: this.client.auth.authInfo.userId,\r\n        };\r\n        const update = {\r\n            $setOnInsert: {accessed_links: [],}\r\n        };\r\n        const options = {\r\n            returnNewDocument: true,\r\n            upsert: true,\r\n        };\r\n        await this.db\r\n            .collection(\"USERS\")\r\n            .findOneAndUpdate(query, update, options)\r\n            .then((res) => {\r\n                console.log(\"User: \", res);\r\n                this.setState({ user: res });\r\n            })\r\n            .catch(console.error);\r\n\r\n        // fetch accessed links and set accessed modules\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find({\r\n                shared_with: { $ne: this.client.auth.authInfo.userProfile.data.email},\r\n                _id: { $in: [...this.state.user.accessed_links]},\r\n                public: true,\r\n            })\r\n            .asArray()\r\n            .then((accessed_modules) => {\r\n                this.setState({\r\n                    accessed_modules: accessed_modules,\r\n                    modules: {\r\n                        0: this.state.my_modules,\r\n                        1: this.state.shared_modules,\r\n                        2: accessed_modules,\r\n                    },\r\n                });\r\n                console.log(\"Accessed: \",accessed_modules);\r\n            });\r\n        console.log(this.state.accessed_modules);\r\n    }\r\n\r\n    goto_module(id) {\r\n        window.location.assign(\"#/module/\" + id);\r\n    }\r\n\r\n    add_module_cards(type) {\r\n        \r\n        if (this.state.modules.length === 0) return;\r\n\r\n        const mds = this.state.modules[type].map(function (module, idx) {\r\n            \r\n            return (\r\n                <div className=\"col-md-6 col-lg-4 \" key={idx}>\r\n                    <Card\r\n                        className=\"h-100\"\r\n                        style={{\r\n                            display: \"fixed\",\r\n\r\n                            Width: \"25rem\",\r\n                            margin: \"0.25rem\",\r\n                            justifyContent: \"center\",\r\n                            textAlign: \"center\",\r\n                        }}\r\n                    >\r\n                        <Card.Body>\r\n                            <Card.Img\r\n                                variant=\"top\"\r\n                                src={\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + module.pins[0] + \".jpeg?versionid=latest&date=\" + Date.now()}\r\n                            />\r\n                            <Card.Title>{module.title}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">\r\n                                by {module.owner_name} ({module.owner_email})\r\n                            </Card.Subtitle>\r\n                            <Card.Text>{module.description}</Card.Text>\r\n                            <div\r\n                                className=\"btn-toolbar\"\r\n                                style={{\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                            >\r\n                                <div className=\"btn-group mr-1\">\r\n                                    <button\r\n                                        className=\"btn btn-primary\"\r\n                                        onClick={() =>\r\n                                            window.location.assign(\r\n                                                \"#/module/\" + module._id\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        View Details\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div className=\"btn-group mr-1\">\r\n                                    <button className=\"btn btn-primary\"\r\n                                        onClick={() =>\r\n                                            window.location.assign(\r\n                                                \"#/module/\" + module._id+\"/pins\"\r\n                                        )\r\n                                    }>\r\n                                        Start Module\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        });\r\n        return (\r\n            <div\r\n                style={{\r\n                    top: \"50px\",\r\n                    bottom: \"0px\",\r\n                    position: \"relative\",\r\n                }}\r\n                className=\"container\"\r\n            >\r\n                <CardDeck\r\n                    style={{\r\n                        top: \"50px\",\r\n                    }}\r\n                >\r\n                    {mds}\r\n                </CardDeck>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: \"0px\",\r\n                    bottom: \"0px\",\r\n                    width: \"100%\",\r\n                    overflowY: \"scroll\",\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        top: \"10px\",\r\n                        bottom: '0px',\r\n                        position: \"relative\",\r\n                        height: \"100vh\",\r\n                        marginLeft: \"auto\",\r\n                        marginRight: \"auto\",\r\n                    }}\r\n                >\r\n                    <Tabs\r\n                        defaultActiveKey=\"My Modules\"\r\n                        transition={false}\r\n                        style={{\r\n                            textAlign: \"center\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Tab eventKey=\"My Modules\" title=\"My Modules\">\r\n                            {this.add_module_cards(0)}\r\n                        </Tab>\r\n\r\n                        <Tab eventKey=\"Shared Modules\" title=\"Shared with me\">\r\n                            <div>\r\n                                {this.add_module_cards(1)}\r\n                            </div>\r\n                            <div>\r\n                                {this.add_module_cards(2)}\r\n                            </div>\r\n                        </Tab>\r\n\r\n                        <Tab eventKey=\"Go To\" title=\"Go To\">\r\n                            <Form>\r\n                                <Form.Group controlId=\"formModuleId\">\r\n                                    <Form.Label>Module ID:</Form.Label>\r\n                                    <Form.Control\r\n                                        required\r\n                                        type=\"string\"\r\n                                        placeholder=\"Enter module id\"\r\n                                        ref={this.goto_module_id}\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    onClick={() => {\r\n                                        window.location.assign(\r\n                                            \"#/module/\" +\r\n                                                this.goto_module_id.current\r\n                                                    .value\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    View Module\r\n                                </Button>\r\n                            </Form>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\r\n\r\nexport default class ManageModules extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modules: [],\r\n            modal: false,\r\n            idx: -1,\r\n        };\r\n\r\n        this.fetch_userinfo = this.fetch_userinfo.bind(this);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.modal_message = this.modal_message.bind(this);\r\n        this.list_modules = this.list_modules.bind(this);\r\n        this.delete_module = this.delete_module.bind(this);\r\n        this.add_module = this.add_module.bind(this);\r\n        this.save_modules = this.save_modules.bind(this);\r\n\r\n        // Setting up DB with Stitch\r\n        const appId = \"capstonear_app-xkqng\";\r\n        this.client = Stitch.hasAppClient(appId)\r\n            ? Stitch.getAppClient(appId)\r\n            : Stitch.initializeDefaultAppClient(appId);\r\n        const mongodb = this.client.getServiceClient(\r\n            RemoteMongoClient.factory,\r\n            \"mongodb-atlas\"\r\n        );\r\n        this.db = mongodb.db(\"APP\");\r\n\r\n        this.fetch_userinfo();\r\n    }\r\n\r\n    async fetch_userinfo() {\r\n        const query = {\r\n            owner_id: this.client.auth.authInfo.userId,\r\n        };\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find(query)\r\n            .toArray()\r\n            .then((res) => {\r\n                console.log(\"Modules loaded: \", res);\r\n\r\n                this.setState({ modules: res });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    toggle() {\r\n        var modal = !this.state.modal;\r\n        this.setState({ modal: modal });\r\n    }\r\n\r\n    modal_message() {\r\n        if (this.state.idx < 0) return <p>Nothing to delete</p>;\r\n        else\r\n            return (\r\n                <p>\r\n                    Are you sure you want to delete{\" \"}\r\n                    <b>{this.state.modules[this.state.idx].title}</b>?\r\n                </p>\r\n            );\r\n    }\r\n\r\n    list_modules() {\r\n        return this.state.modules.map((module, idx) => {\r\n            return (\r\n                <div key={idx} className=\"pt-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 offset-sm-2 col-sm-4\">\r\n                            <input\r\n                                type=\"text\"\r\n                                value={this.state.modules[idx].title}\r\n                                onChange={(event) => {\r\n                                    event.preventDefault();\r\n\r\n                                    var modules = [...this.state.modules];\r\n                                    modules[idx].title = event.target.value;\r\n                                    this.setState({ modules });\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6 col-sm-4\">\r\n                            <button\r\n                                className=\"btn btn-link float-right\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    var id = this.state.modules[idx]._id;\r\n                                    window.location.assign(\r\n                                        \"#/module/\" + id + \"/edit\"\r\n                                    );\r\n                                }}\r\n                            >\r\n                                Edit\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger float-right\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.setState({ idx: idx });\r\n                                    this.toggle();\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    delete_module(idx) {\r\n        const query = { _id: this.state.modules[idx]._id };\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .deleteOne(query)\r\n            .then((res) => {\r\n                console.log(\"Delete response: \", res);\r\n\r\n                // Update module list\r\n                var modules = [...this.state.modules];\r\n                modules.splice(idx, 1);\r\n                this.setState({ modules: modules, idx: -1 });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    add_module() {\r\n        const query = {\r\n            title: \"title\",\r\n            owner_id: this.client.auth.authInfo.userId,\r\n            owner_name: this.client.auth.authInfo.userProfile.name,\r\n            owner_email: this.client.auth.authInfo.userProfile.email,\r\n            description: \"\",\r\n            pins: [],\r\n            shared_with: [],\r\n            public: false,\r\n        };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .insertOne(query)\r\n            .then((res) => {\r\n                console.log(\"Add response: \", res);\r\n\r\n                // Navigate to Edit Module view\r\n                var id = res.insertedId;\r\n                window.location.assign(\"#/module/\" + id + \"/edit\");\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    save_modules() {\r\n        Promise.all(\r\n            this.state.modules.map((module) => {\r\n                const query = { _id: module._id };\r\n                const update = {\r\n                    $set: {\r\n                        title: module.title,\r\n                    },\r\n                };\r\n                const options = { upsert: false };\r\n\r\n                return this.db\r\n                    .collection(\"MODULES\")\r\n                    .updateOne(query, update, options);\r\n            })\r\n        )\r\n            .then((res) => {\r\n                console.log(\"Save response: \", res);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form\r\n                    style={{ height: \"100%\" }}\r\n                    onSubmit={(event) => {\r\n                        event.preventDefault();\r\n                        this.save_modules();\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            height: \"70vh\",\r\n                            overflowY: \"scroll\",\r\n                            overflowX: \"hidden\"\r\n                        }}\r\n                    >\r\n                        {this.list_modules()}\r\n                    </div>\r\n\r\n                    <div style={{ marginTop: \"10px\" }}>\r\n                        <button\r\n                            className=\"btn btn-primary btn-lg btn-block\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                this.add_module();\r\n                            }}\r\n                        >\r\n                            Add Module\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-secondary btn-lg btn-block\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                this.save_modules();\r\n                                window.location.assign(\"#/\");\r\n                            }}\r\n                        >\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <Modal\r\n                    show={this.state.modal}\r\n                    toggle={(event) => {\r\n                        event.preventDefault();\r\n                        this.toggle();\r\n                    }}\r\n                    style={{\r\n                        marginTop: \"50px\",\r\n                    }}\r\n                >\r\n                    <Modal.Header\r\n                        toggle={(event) => {\r\n                            event.preventDefault();\r\n                            this.toggle();\r\n                        }}\r\n                    >\r\n                        Confirm Deletion\r\n                    </Modal.Header>\r\n                    <Modal.Body>{this.modal_message()}</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                if (this.state.idx > -1)\r\n                                    this.delete_module(this.state.idx);\r\n                                this.toggle();\r\n                            }}\r\n                        >\r\n                            Delete\r\n                        </button>{\" \"}\r\n                        <button\r\n                            className=\"btn btn-secondary\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                this.toggle();\r\n                            }}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport { Map, Marker, Popup, TileLayer,Polyline } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L from 'leaflet'\r\nimport {Stitch, RemoteMongoClient, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\r\nimport { ObjectId } from 'mongodb'\r\nimport './ViewPinOnMap.css'\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nconst Style = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"40px\",\r\n  backgroundColor: \"#0C9\",\r\n  color: \"#FFF\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500\r\n}\r\nvar greenIcon = new L.Icon({\r\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  shadowSize: [41, 41]\r\n});\r\n\r\nvar myIcon = new L.divIcon({\r\n  className: 'my-div-icon',\r\n  html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png\"/>'\r\n})\r\n\r\nconst floatStyle = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"40px\",\r\n  backgroundColor: \"#0C9\",\r\n  color: \"#FFF\",\r\n  borderRadius: \"50px\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500,\r\n};\r\n\r\nclass ViewPinOnMap extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state ={\r\n      currentLocation: {lat: 45.51, lng:-122.68},\r\n      zoom: 13,\r\n      userLocation:[],\r\n      userLocationFound: false,\r\n      username:\"\",\r\n      useremail:\"\",\r\n      userID:\"\",\r\n      stitch_res:[],\r\n      pin:[],\r\n      pins_line:[],\r\n      pins_array:[],\r\n    }\r\n  this.getUserPosition = this.getUserPosition.bind(this)\r\n  this.drawpins = this.drawpins.bind(this)\r\n  this.drawlines = this.drawlines.bind(this)\r\n  this.openGoogle = this.openGoogle.bind(this)\r\n  this.centerMap = this.centerMap.bind(this)\r\n  this.bounds = undefined;\r\n\r\n  const appId = \"capstonear_app-xkqng\"\r\n  this.client = Stitch.hasAppClient(appId)\r\n  ? Stitch.getAppClient(appId)\r\n  : Stitch.initializeDefaultAppClient(appId)\r\n  const mongodb = this.client.getServiceClient(\r\n  RemoteMongoClient.factory,\r\n  \"mongodb-atlas\"\r\n  );\r\n  this.db = mongodb.db(\"APP\"); \r\n  }\r\n  \r\n\r\n  getUserPosition(){\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\r\n      \r\n      //console.log(this.state)\r\n      \r\n    })\r\n  \r\n  }\r\n\r\n  boundingRect(coords) {\r\n    return coords\r\n      .reduce((acc, curr) => {\r\n        const [lat, lng] = curr;\r\n        acc[0][0] = lat < acc[0][0] ? lat : acc[0][0];\r\n        acc[0][1] = lng < acc[0][1] ? lng : acc[0][1];\r\n        acc[1][0] = lat > acc[1][0] ? lat : acc[1][0];\r\n        acc[1][1] = lng > acc[1][1] ? lng : acc[1][1];\r\n        return acc;\r\n      }, [[90, 180], [-90, -180]]);\r\n  }\r\n\r\n  AddPaddingToRect(rect, percent=0.10){\r\n    const [latMin, lngMin] = rect[0];\r\n    const [latMax, lngMax] = rect[1];\r\n    const lngPad = (lngMax - lngMin) * percent;\r\n    const latPad = (latMax - latMin) * percent;\r\n    return [\r\n      [latMin - latPad, lngMin - lngPad],\r\n      [latMax + latPad, lngMax + lngPad]\r\n    ];\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getUserPosition()\r\n    this.drawpins()\r\n  }\r\n\r\n  async drawpins() {\r\n    if(!this.client.auth.isLoggedIn){\r\n        return\r\n    }\r\n    const query ={_id: ObjectId(this.props.match.params.id) };\r\n    await this.db.collection(\"MODULES\").findOne(query)\r\n    .then((stitch_res) => {this.setState({stitch_res})\r\n      const pipeline = [\r\n        { $match: { _id: { $in: stitch_res.pins } } },\r\n        {\r\n            $addFields: {\r\n                __order: { $indexOfArray: [stitch_res.pins, \"$_id\"] },\r\n            },\r\n        },\r\n        { $sort: { __order: 1 } },\r\n    ];\r\n    this.db.collection(\"PINS\").aggregate(pipeline)\r\n      .toArray()\r\n      .then((res) => {\r\n        this.bounds = this.AddPaddingToRect(\r\n          this.boundingRect([...res.map(elem => elem.coords), this.state.currentLocation]));\r\n        this.setState({ pins_array: res })\r\n      });\r\n\r\n    }\r\n    )\r\n  }\r\n  drawlines(){\r\n   \r\n    if(this.state.pins_line.length>0)\r\n    {\r\n      return (\r\n        <Polyline positions={this.state.pins_line} color ={'red'}>\r\n      </Polyline>\r\n      )\r\n    }\r\n    return\r\n  } \r\n  openGoogle(coords)\r\n  {\r\n    var url= \"http://maps.google.com?q=\"+coords[0]+\",\"+coords[1]\r\n    var win = window.open(url, '_blank');\r\n    return\r\n  }\r\n  centerMap(obj,coords)\r\n  {\r\n    console.log(\"center Map function\")\r\n    const map = this.refs.map.leafletElement\r\n    map.doubleClickZoom.disable();\r\n    setTimeout(function() {\r\n         map.doubleClickZoom.enable();\r\n    }, 1000);\r\n    map.setView(coords)\r\n  }\r\n  render(){\r\n    const userLocation = this.state.userLocationFound ? (\r\n      <Marker  position={this.state.userLocation}  icon= {myIcon} >\r\n        <Popup>You are here</Popup>\r\n      </Marker>\r\n    ) : null\r\n   \r\n    return (\r\n      <div>\r\n      <Map ref='map' center={this.state.currentLocation} zoom={13} maxBounds={this.bounds} bounds={this.bounds}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n        />\r\n        {userLocation}\r\n         \r\n        {this.state.pins_array.map((info,idx) => {\r\n            return <Marker \r\n                           key = {idx} position={info.coords} \r\n                           icon= {new L.divIcon({\r\n                                                  className: 'my-div-icon',\r\n                                                  html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png\"/>' \r\n                                                  + '<span style={Style} class=\"my-div-span\">'+(idx+1)+'</span>'\r\n                                                })} >\r\n                        <Popup>\r\n                              <h1>{info.title}</h1>\r\n                              <p>{info.description}</p>\r\n                              <p>{info.hint}</p>\r\n                              <p>{info.destination}</p>\r\n                              <img style={{\r\n                                  height: '100px',\r\n                                  width : '150px'\r\n                              }} src={\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + info._id.toString() + \".jpeg?versionid=latest&date=\" + Date.now() }></img>\r\n                              <button onClick={()=>this.openGoogle(info.coords)} >Open Google Map</button>\r\n                        </Popup>\r\n                    </Marker>\r\n          })}\r\n          <button style={floatStyle} onClick={()=>this.centerMap(this,this.state.currentLocation)} >\r\n                <div style={{ fontSize: \"10px\" }} >Center</div>\r\n          </button>\r\n      </Map>\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default ViewPinOnMap;\r\n\r\n//this.db.collection(\"PINS\").find({_id: ObjectId(\"5ebed1bc5992681f357d7948\")} )\r\n//this.db.collection(\"PINS\").find({owner_id: this.client.auth.authInfo.userId} )\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport MapView from \"./components/MapView.js\";\r\nimport Menu from \"./components/Menu/Menu.js\";\r\nimport { Stitch } from \"mongodb-stitch-browser-sdk\";\r\nimport Login from \"./components/Login\";\r\nimport DropPin from \"./components/DropPin\";\r\nimport NavMenu from \"./components/Menu/NavMenu\";\r\nimport Module from \"./components/Module\";\r\nimport EditModule from \"./components/EditModule\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport ViewModules from \"./components/ViewModules\";\r\nimport ManageModules from \"./components/ManageModules\";\r\nimport ViewPinOnMap from \"./components/ViewPinOnMap\";\r\n\r\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const appId = \"capstonear_app-xkqng\";\r\n        this.client = Stitch.hasAppClient(appId)\r\n            ? Stitch.getAppClient(appId)\r\n            : Stitch.initializeDefaultAppClient(appId);\r\n\r\n        if (this.client.auth.hasRedirectResult()) {\r\n            console.log(\"has results\");\r\n\r\n            this.client.auth.handleRedirectResult().then((user) => {\r\n                window.location.assign(\"/\");\r\n            });\r\n        } else {\r\n            //window.location.replace('#/login')\r\n        }\r\n        this.state = {\r\n            isLoggedIn: false,\r\n        };\r\n\r\n        //refs\r\n\r\n        this.center_container = React.createRef();\r\n\r\n        this.NavMenu = this.NavMenu.bind(this);\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    handleStitchClient() {\r\n        this.setState({\r\n            stitchClient: this.client,\r\n            userProfile: this.client.auth.userProfile,\r\n            isLoggedIn: true,\r\n        });\r\n    }\r\n\r\n    Home = () => {\r\n        if (this.client.auth.isLoggedIn) {\r\n            return (\r\n                <div>\r\n                    <MapView />\r\n                </div>\r\n            );\r\n        } else {\r\n            return <Login />;\r\n        }\r\n    };\r\n\r\n    NavMenu = () => {\r\n        if (this.client.auth.isLoggedIn) {\r\n            return <NavMenu center_container={this.center_container} />;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter basename=\"/\">\r\n                <div>\r\n                    <Navbar\r\n                        className=\"navbar bg-dark navbar-dark\"\r\n                        style={{\r\n                            position: \"fixed\",\r\n                            width: \"100%\",\r\n                            height: \"50px\",\r\n                            zIndex: 1500,\r\n                        }}\r\n                    >\r\n                        <Navbar.Brand href=\"#/\">Context AR</Navbar.Brand>\r\n                    </Navbar>\r\n                    {this.NavMenu()}\r\n                </div>\r\n\r\n                <div\r\n                    ref={this.center_container}\r\n                    className=\"center_container\"\r\n                    style={{\r\n                        position: \"fixed\",\r\n                        top: \"50px\",\r\n                        bottom: \"0\",\r\n                        width: \"100%\",\r\n                        height: \"calc(100% - 50px)\",\r\n                    }}\r\n                >\r\n                    <Switch>\r\n                        <Route exact path=\"/menu\" component={Menu} />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/modules/edit\"\r\n                            component={ManageModules}\r\n                        />\r\n                        <Route exact path=\"/modules\" component={ViewModules} />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/module/:id/pins/edit\"\r\n                            component={DropPin}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/module/:id/pins\"\r\n                            component={ViewPinOnMap}\r\n                        />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/module/:id/edit\"\r\n                            component={EditModule}\r\n                        />\r\n                        <Route path=\"/module/:id\" component={Module} />\r\n\r\n                        <Route exact path=\"/\">\r\n                            {this.Home}\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}