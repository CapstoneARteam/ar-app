{"version":3,"sources":["../node_modules/require_optional sync","components/MapView.js","components/Menu/Menu.js","components/Login.js","components/DropPin.js","components/Menu/NavMenu.js","components/Module.js","components/EditModule.js","components/ViewModules.js","components/ManageModules.js","components/ViewPinOnMap.js","components/imageTranslate.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapView","props","state","currentLocation","lat","lng","zoom","userLocation","userLocationFound","getUserPosition","bind","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","console","log","this","Marker","Popup","Map","center","maxZoom","TileLayer","url","attribution","Component","Menu","username","useremail","userID","stitch_res","menuOpen","open","login","logout","addamodule","listmymodules","appId","Stitch","hasAppClient","client","getAppClient","mongodb","getServiceClient","RemoteMongoClient","factory","db","auth","isLoggedIn","authInfo","userProfile","data","first_name","email","userId","userImg","picture","credential","GoogleRedirectCredential","loginWithRedirect","window","location","reload","collection","insertOne","owner_id","name","temp_module_name","owner","catch","error","find","_id","ObjectId","asArray","then","StyledMenu","setOpen","center_container","style","top","src","alt","maxHeigh","maxWidth","borderRadius","fontSize","color","zIndex","listStyleType","paddingLeft","onClick","current","opacity","href","fontColor","bottom","styled","nav","Login","hasRedirectResult","handleRedirectResult","user","assign","class","margin","left","right","height","initializeDefaultAppClient","globalPosition","floatStyle","width","backgroundColor","textAlign","boxShadow","EditForm","useState","title","description","hint","destination","defaultValues","setDefaultValues","Modal","centered","show","Header","Title","Body","className","htmlFor","type","required","defaultValue","Footer","cancel","document","getElementById","value","query","objectID","update","$set","findOneAndUpdate","PinMarker","modalShow","setModalShow","key","AddpinForm","onHide","audio","video","res","setMarkers","markers","insertedId","pins","setModule","upsert","DropPin","setPosition","canPlacePin","setCanPlacePin","owner_email","owner_name","shared_array","public","useEffect","pos","match","params","findOne","pipeline","$match","$in","$addFields","__order","$indexOfArray","$sort","aggregate","toArray","map","pin","latlng","StyledBurger","button","Burger","NavMenu","React","Module","current_position","module_info","fetch_userinfo","initializeAppClient","undefined","length","err","Container","EditModule","modal","idx","show_modal","hide_modal","modal_component","delete_pin","list_pins","module_form","save_pin_order","save_module","modal_message","preventDefault","marginTop","closeButton","Button","variant","Form","Group","Label","Control","onChange","target","as","rows","display","justifyContent","marginBottom","Check","inline","label","checked","values","oldIndex","newIndex","arrayMove","renderList","children","renderItem","index","Row","Col","xs","deleteOne","splice","pin_ids","updateOne","Tabs","defaultActiveKey","transition","Tab","eventKey","size","block","ViewModules","modules","my_modules","shared_modules","img1","goto_module_id","createRef","add_module_cards","fetch_modules","goto_module","0","1","shared_with","mds","Card","Width","Img","Subtitle","Text","CardDeck","overflowY","marginLeft","marginRight","controlId","placeholder","ref","ManageModules","toggle","list_modules","delete_module","add_module","save_modules","form","FormGroup","Input","event","Promise","all","overflow","onSubmit","maxHeight","overflowX","isOpen","ModalHeader","ModalBody","ModalFooter","iconSize","iconAnchor","popupAnchor","shadowSize","myIcon","divIcon","html","ViewPinOnMap","pins_line","pins_array","drawpins","drawlines","openGoogle","Polyline","positions","icon","info","desc","Translate","caption","setCaption","image","Tesseract","recognize","logger","m","text","App","Home","stitchClient","basename","Navbar","Brand","exact","path","component","Boolean","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4608f590.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 171;","import React, {Component} from 'react'\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport L from 'leaflet'\n\n\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n\n\nclass MapView extends Component{\n  constructor(props){\n    super(props)\n\n    this.state ={\n      currentLocation: {lat: 45.51, lng:-122.68},\n      zoom: 13,\n      userLocation:[],\n      userLocationFound: false,\n    }\n  this.getUserPosition = this.getUserPosition.bind(this)\n  }\n  \n\n  getUserPosition(){\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\n      \n      console.log(this.state)\n      \n    })\n  \n  }\n\n  componentDidMount(){\n    this.getUserPosition()\n\n    \n  }\n\n  render(){\n    const userLocation = this.state.userLocationFound ? (\n      <Marker position={this.state.userLocation}>\n        <Popup >Your location</Popup>\n      </Marker>\n    ) : null\n\n    return (\n      <div id='leaflet-container'>\n      <Map center={this.state.currentLocation} zoom={13} maxZoom={18} >\n        <TileLayer\n          \n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n        />\n        {userLocation}     \n      </Map>\n      </div>\n    );\n    }\n}\n\nexport default MapView;","import React, { Component } from \"react\";\nimport {\n    Stitch,\n    RemoteMongoClient,\n    GoogleRedirectCredential,\n} from \"mongodb-stitch-browser-sdk\";\nimport { ObjectId } from \"mongodb\";\nimport styled from \"styled-components\";\n\nclass Menu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            useremail: \"\",\n            userID: \"\",\n            stitch_res: [],\n            menuOpen: this.props.open,\n        };\n\n        //bind functions\n        this.login = this.login.bind(this);\n        this.logout = this.logout.bind(this);\n        this.addamodule = this.addamodule.bind(this);\n        this.listmymodules = this.listmymodules.bind(this);\n        console.log(props);\n        const appId = \"capstonear_app-xkqng\";\n        if (Stitch.hasAppClient(appId)) {\n            this.client = Stitch.getAppClient(appId);\n            const mongodb = this.client.getServiceClient(\n                RemoteMongoClient.factory,\n                \"mongodb-atlas\"\n            );\n            //select the db in our mongdb atlas cluster\n            this.db = mongodb.db(\"APP\");\n        }\n    }\n\n    async componentDidMount() {\n        //init mongodb stitch\n\n        if (\n            this.client.auth.isLoggedIn &&\n            this.client.auth.authInfo.userProfile\n        ) {\n            this.setState({\n                username: this.client.auth.authInfo.userProfile.data.first_name,\n                useremail: this.client.auth.authInfo.userProfile.data.email,\n                userID: this.client.auth.authInfo.userId,\n                userImg: this.client.auth.authInfo.userProfile.data.picture,\n            });\n\n            console.log(this.client.auth.authInfo.userProfile.data);\n        }\n    }\n\n    //login button handler\n    async login() {\n        //login using google redirect\n        const credential = new GoogleRedirectCredential();\n        this.client.auth.loginWithRedirect(credential);\n        console.log(this.state);\n    }\n\n    async logout() {\n        await this.client.auth.logout();\n        this.setState({\n            username: \"\",\n            useremail: \"\",\n            userID: \"\",\n        });\n        window.location.reload();\n    }\n\n    addamodule() {\n        this.db\n            .collection(\"MODULES\")\n            .insertOne({\n                owner_id: this.state.userID,\n                name: this.state.temp_module_name,\n                owner: this.state.useremail,\n            })\n            .catch(console.error);\n    }\n\n    listmymodules() {\n        if (!this.client.auth.isLoggedIn) {\n            return;\n        }\n        this.db\n            .collection(\"PINS\")\n            .find({ _id: ObjectId(\"5ebed1bc5992681f357d7948\") })\n            .asArray()\n            .then((stitch_res) => {\n                this.setState({ stitch_res });\n                console.log(this.state.stitch_res[0]);\n            });\n    }\n\n    render() {\n        return (\n            <StyledMenu\n                open={this.props.open}\n                setOpen={this.props.setOpen}\n                center_container={this.props.center_container}\n                style={{}}\n            >\n                <div\n                    style={{\n                        position: \"absolute\",\n                        top: \"2rem\",\n                    }}\n                >\n                    <img\n                        src={this.state.userImg}\n                        alt=\"test\"\n                        style={{\n                            maxHeigh: \"80px\",\n                            maxWidth: \"80px\",\n                            borderRadius: \"50%\",\n                            top: \"1rem\",\n                        }}\n                    ></img>\n\n                    <p\n                        style={{\n                            fontSize: \"1.5rem\",\n                            top: \"4rem\",\n                            color: \"white\",\n                            zIndex: 1002,\n                        }}\n                    >\n                        {\" \"}\n                        Welcome, <br /> {this.state.username}{\" \"}\n                    </p>\n                </div>\n\n                <ul\n                    style={{ listStyleType: \"none\", paddingLeft: 0 }}\n                    onClick={() => {\n                        this.props.center_container.center_container.current.style.opacity = 1;\n                        this.props.setOpen(!this.props.open);\n                    }}\n                >\n                    <li>\n                        <a href=\"#/\">Home</a>\n                    </li>\n                    <br />\n                    <li>\n                        <a href=\"#/modules\">My Modules</a>\n                    </li>\n                    <br />\n                    <li>\n                        <a href=\"#/modules/edit\">Manage Modules</a>\n                    </li>\n                    <br />\n                </ul>\n\n                <a\n                    href=\"#/logout\"\n                    onClick={this.logout}\n                    style={{\n                        position: \"absolute\",\n                        fontSize: \"1rem\",\n                        fontColor: \"#00000\",\n                        bottom: \"10rem\",\n                    }}\n                >\n                    Log Out\n                </a>\n            </StyledMenu>\n        );\n    }\n}\n\n// menu style sheet\n// tutorial from https://css-tricks.com/hamburger-menu-with-a-side-of-react-hooks-and-styled-components/ with modified styles\nconst StyledMenu = styled.nav`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background: #343a40;\n    transform: ${({ open }) =>\n        open ? \"translateX(-100)\" : \"translateX(100%)\"};\n    height: 100vh;\n    text-align: left;\n    padding: 2rem;\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    transition: transform 0.3s ease-in-out;\n    z-index: 1501;\n\n    @media (max-width: 150px) {\n        width: 100%;\n    }\n\n    a {\n        font-size: 1.5rem;\n        text-transform: uppercase;\n        padding: 2rem 0;\n        font-weight: Light;\n        letter-spacing: 0.5rem;\n        color: #FFFFF;\n        text-decoration: none;\n        transition: color 0.3s linear;\n\n        @media (max-width: 150px) {\n            font-size: 1rem;\n            text-align: center;\n        }\n\n        &:hover {\n            color: #343078;\n        }\n    }\n`;\n\nexport default Menu;\n","import React, {Component} from 'react'\nimport './Login.css'\nimport {Stitch, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\n\nexport default class Login extends Component{\n    constructor(){\n        super()\n        const appId = \"capstonear_app-xkqng\"\n        this.client = Stitch.getAppClient(appId)\n        this.login = this.login.bind(this)\n    }\n\n    componentDidMount(){\n      if (this.client.auth.hasRedirectResult()) {\n        console.log(\"has results\")\n  \n        this.client.auth.handleRedirectResult().then(user => {\n          this.setState(\n            {\n              username: this.client.auth.authInfo.userProfile.data.name,\n              useremail: this.client.auth.authInfo.userProfile.data.email,\n              userID: this.client.auth.authInfo.userId,\n  \n            }\n          )\n          window.location.assign('#/')\n        }\n        )\n      }\n        \n       \n    }\n\n\n    async login(){\n          \n          //login using google redirect\n          const credential = new GoogleRedirectCredential();\n          await this.client.auth.loginWithRedirect(credential);\n          console.log(this.state)\n          \n        \n    }\n\n\n  render() {\n    return (\n      \n          <div class=\"row justify-content-center\" style={{\n            position: \"fixed\",\n            margin: \"auto\",\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0,\n            height: \"50px\"\n          }}>\n              <button class=\"btn btn-primary\"onClick={this.login}>Login with Google</button>\n          </div>\n      \n    )\n  }\n}","import React, { useState, useEffect } from \"react\";\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport { Modal } from \"react-bootstrap\";\nimport { ObjectId } from \"mongodb\";\n\nconst appId = \"capstonear_app-xkqng\";\nconst client = Stitch.hasAppClient(appId)\n    ? Stitch.getAppClient(appId)\n    : Stitch.initializeDefaultAppClient(appId);\nconst mongodb = client.getServiceClient(\n    RemoteMongoClient.factory,\n    \"mongodb-atlas\"\n);\nconst db = mongodb.db(\"APP\");\nvar globalPosition = {};\n\nconst floatStyle = {\n    position: \"fixed\",\n    width: \"60px\",\n    height: \"60px\",\n    bottom: \"40px\",\n    right: \"40px\",\n    backgroundColor: \"#0C9\",\n    color: \"#FFF\",\n    borderRadius: \"50px\",\n    textAlign: \"center\",\n    boxShadow: \"2px 2px 3px #999\",\n    zIndex: 1500,\n};\n\nconst EditForm = (props) => {\n    const [defaultValues, setDefaultValues] = useState({\n        title: props.title,\n        description: props.description,\n        hint: props.hint,\n        destination: props.destination,\n    });\n    return (\n        <Modal {...props} centered show={props.show} style={{ zIndex: \"1600\" }}>\n            <Modal.Header>\n                <Modal.Title>Edit a Pin</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <label className=\"d-block\" htmlFor=\"title\">\n                    Title\n                </label>\n                <input\n                    type=\"text\"\n                    className=\"w-100\"\n                    id=\"title\"\n                    required\n                    defaultValue={defaultValues.title}\n                />\n                <label className=\"d-block\" htmlFor=\"description\">\n                    Description\n                </label>\n                <textarea\n                    className=\"w-100\"\n                    id=\"description\"\n                    defaultValue={defaultValues.description}\n                    required\n                />\n                <label className=\"d-block\" htmlFor=\"hint\">\n                    Hint\n                </label>\n                <textarea\n                    className=\"w-100\"\n                    id=\"hint\"\n                    defaultValue={defaultValues.hint}\n                    required\n                />\n                <label className=\"d-block\" htmlFor=\"destination\">\n                    Destination\n                </label>\n                <textarea\n                    className=\"w-100\"\n                    id=\"destination\"\n                    defaultValue={defaultValues.destination}\n                    required\n                />\n            </Modal.Body>\n            <Modal.Footer>\n                <button className=\"btn btn-secondary\" onClick={props.cancel}>\n                    Cancel\n                </button>\n                <button\n                    className=\"btn btn-primary\"\n                    onClick={() => {\n                        const title =\n                            document.getElementById(\"title\").value || \"\";\n                        const hint =\n                            document.getElementById(\"hint\").value || \"\";\n                        const description =\n                            document.getElementById(\"description\").value || \"\";\n                        const destination =\n                            document.getElementById(\"destination\").value || \"\";\n                        const query = { _id: props.objectID };\n                        const update = {\n                            $set: {\n                                title: title,\n                                description: description,\n                                hint: hint,\n                                destination: destination,\n                            },\n                        };\n                        // update a pin on the database\n                        db.collection(\"PINS\")\n                            .findOneAndUpdate(query, update)\n                            .then((objectID) => {\n                                setDefaultValues({\n                                    title: title,\n                                    description: description,\n                                    hint: hint,\n                                    destination: destination\n                                });\n                                props.cancel();\n                            });\n                    }}\n                >\n                    Submit\n                </button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nconst PinMarker = (props) => {\n    const [modalShow, setModalShow] = useState(false);\n    return (\n        <Marker\n            key={globalPosition}\n            position={[props.lat, props.lng]}\n            onClick={() => {\n                setModalShow(!modalShow);\n            }}\n        >\n            <EditForm\n                description={props.description}\n                hint={props.hint}\n                destination={props.destination}\n                title={props.title}\n                objectID={props.objectID}\n                lng={props.lng}\n                lat={props.lat}\n                show={modalShow}\n                cancel={() => setModalShow(false)}\n            />\n        </Marker>\n    );\n};\n\nconst AddpinForm = (props) => {\n    return (\n        <Modal {...props} centered style={{ zIndex: \"1600\" }}>\n            <Modal.Header>\n                <Modal.Title>Add a Pin</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <label className=\"d-block\" htmlFor=\"title\">\n                    Title\n                </label>\n                <input type=\"text\" className=\"w-100\" id=\"title\" required />\n                <label className=\"d-block\" htmlFor=\"description\">\n                    Description\n                </label>\n                <textarea className=\"w-100\" id=\"description\" required />\n                <label className=\"d-block\" htmlFor=\"hint\">\n                    Hint\n                </label>\n                <textarea className=\"w-100\" id=\"hint\" required />\n                <label className=\"d-block\" htmlFor=\"destination\">\n                    Destination\n                </label>\n                <textarea className=\"w-100\" id=\"destination\" required />\n            </Modal.Body>\n            <Modal.Footer>\n                <button className=\"btn btn-secondary\" onClick={props.onHide}>\n                    Cancel\n                </button>\n                <button\n                    className=\"btn btn-primary\"\n                    onClick={() => {\n                        const title =\n                            document.getElementById(\"title\").value || \"\";\n                        const hint =\n                            document.getElementById(\"hint\").value || \"\";\n                        const description =\n                            document.getElementById(\"description\").value || \"\";\n                        const destination =\n                            document.getElementById(\"destination\").value || \"\";\n                        const { lng, lat } = globalPosition;\n                        // insert a new pin on the database\n                        db.collection(\"PINS\")\n                            .insertOne({\n                                title: title,\n                                owner_id: client.auth.authInfo.userId,\n                                description: description,\n                                hint: hint,\n                                destination: destination,\n                                audio: \"\",\n                                video: \"\",\n                                coords: [lat, lng],\n                            })\n                            .then((res) => {\n                                // add the new pin to the map on success of adding the pin to\n                                // to the database\n                                props.setMarkers([\n                                    ...props.markers,\n                                    <PinMarker\n                                        description={description}\n                                        hint={hint}\n                                        destination={destination}\n                                        title={title}\n                                        objectID={res.insertedId}\n                                        lng={lng}\n                                        lat={lat}\n                                    />,\n                                ]);\n\n                                var module = props.module;\n                                module.pins = [...module.pins, res.insertedId];\n                                props.setModule(module);\n\n                                const query = { _id: module._id };\n                                const update = {\n                                    $set: {\n                                        pins: module.pins,\n                                    },\n                                };\n                                const options = { upsert: false };\n                                db.collection(\"MODULES\")\n                                    .findOneAndUpdate(query, update, options)\n                                    .then((res) => {\n                                    })\n                                    .catch(console.error);\n                            });\n                        props.onHide();\n                    }}\n                >\n                    Submit\n                </button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nconst DropPin = (props) => {\n    const [position, setPosition] = useState([45, 45]);\n    const [markers, setMarkers] = useState([]);\n    const [canPlacePin, setCanPlacePin] = useState(false);\n    const [modalShow, setModalShow] = useState(false);\n    const [module, setModule] = useState({\n        _id: \"\",\n        title: \"\",\n        owner_email: \"\",\n        owner_id: \"\",\n        owner_name: \"\",\n        description: \"\",\n        pins: [],\n        shared_array: [],\n        public: false,\n    });\n\n    // Getting the users current location\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((pos) => {\n            const { latitude, longitude } = pos.coords;\n            setPosition([latitude, longitude]);\n        });\n    }, []);\n\n    // Getting the module and pins for the module\n    useEffect(() => {\n        const query = {\n            _id: ObjectId(props.match.params.id),\n        };\n        db.collection(\"MODULES\")\n            .findOne(query)\n            .then((res) => {\n                setModule(res);\n\n                // Pipeline to ensure that the order of the pins stays the same after the query\n                const pipeline = [\n                    { $match: { _id: { $in: res.pins } } },\n                    {\n                        $addFields: {\n                            __order: { $indexOfArray: [res.pins, \"$_id\"] },\n                        },\n                    },\n                    { $sort: { __order: 1 } },\n                ];\n\n                db.collection(\"PINS\")\n                    .aggregate(pipeline)\n                    .toArray()\n                    .then((res) => {\n                        setMarkers(\n                            res.map((pin) => {\n                                return (\n                                    <PinMarker\n                                        description={pin.description}\n                                        hint={pin.hint}\n                                        destination={pin.destination}\n                                        title={pin.title}\n                                        objectID={pin._id}\n                                        lng={pin.coords[1]}\n                                        lat={pin.coords[0]}\n                                    />\n                                );\n                            })\n                        );\n                    });\n            })\n            .catch(console.error);\n    }, [props.match.params.id]);\n\n    return (\n        <Map\n            center={position}\n            zoom={13}\n            onClick={(e) => {\n                if (canPlacePin) {\n                    globalPosition = e.latlng;\n                    setModalShow(true);\n                    setCanPlacePin(!canPlacePin);\n                }\n            }}\n        >\n            <AddpinForm\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                setMarkers={setMarkers}\n                markers={markers}\n                setModule={setModule}\n                module={module}\n            />\n            <button\n                style={floatStyle}\n                onClick={() => setCanPlacePin(!canPlacePin)}\n            >\n                <div style={{ fontSize: \"40px\" }}>+</div>\n            </button>\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            <Marker position={position}>\n                <Popup>Your location</Popup>\n            </Marker>\n            {markers}\n        </Map>\n    );\n};\n\nexport default DropPin;\n","import React from 'react'\nimport styled from 'styled-components'\nimport Menu from './Menu'\n\n\nconst StyledBurger = styled.button`\n  position: fixed;\n  top: 10px;\n  right: 2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 2rem;\n  height: 2rem;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 1502;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 2rem;\n    height: 0.25rem;\n    background: ${({ open }) => open ? '#FFFFFF' : '#FFFFFF'};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => open ? '0' : '1'};\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`\n\nconst Burger = ({ open, setOpen, center_container }) => {\n  console.log(center_container.center_container.current)\n  return (\n    <StyledBurger open={open} onClick={() => {\n      setOpen(!open)\n      if(!open)\n        center_container.center_container.current.style.opacity = .5 \n      else\n        center_container.center_container.current.style.opacity = 1\n    }}>\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  )\n}\n\n\n\n\nconst NavMenu = (center_container) => {\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <div>\n        <Burger open={open} setOpen={setOpen} center_container={center_container} />\n        <Menu open={open} setOpen={setOpen} center_container={center_container}/>\n        </div>\n    )\n}\n\nexport default NavMenu","import React, { Component} from 'react'\n\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport {Container} from 'react-bootstrap'\nimport 'leaflet/dist/leaflet.css'\nimport {Stitch,RemoteMongoClient } from \"mongodb-stitch-browser-sdk\"\nimport {ObjectId} from 'mongodb'\n\nexport default class Module extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            current_position:[],\n            module_info: {\n                name:'',\n                owner_email: '',\n                owner_id: '',\n                owner_name: '',\n                description: '',\n            },\n        }\n\n        this.getUserPosition = this.getUserPosition.bind(this)\n        this.fetch_userinfo = this.fetch_userinfo.bind(this)\n\n        const appId = \"capstonear_app-xkqng\"\n        if (Stitch.hasAppClient(appId)) {\n            this.client = Stitch.getAppClient(appId)\n            const mongodb = this.client.getServiceClient(\n                RemoteMongoClient.factory,\n                \"mongodb-atlas\"\n              );\n              //select the db in our mongdb atlas cluster\n              this.db = mongodb.db(\"APP\");\n            console.log(\"client\")\n        }\n        else{\n            this.client = Stitch.initializeAppClient(appId)\n            console.log(\"client init\")\n        }\n    }\n\n    componentDidMount(){\n        \n        this.getUserPosition()\n        this.fetch_userinfo()\n        const appId = \"capstonear_app-xkqng\"\n        if (Stitch.hasAppClient(appId)) {\n            this.client = Stitch.getAppClient(appId)\n            const mongodb = this.client.getServiceClient(\n                RemoteMongoClient.factory,\n                \"mongodb-atlas\"\n              );\n              //select the db in our mongdb atlas cluster\n              this.db = mongodb.db(\"APP\");\n            console.log(\"client\")\n        }\n        else{\n            this.client = Stitch.initializeAppClient(appId)\n            console.log(\"client init\")\n        }\n    }\n\n    async fetch_userinfo(){\n        await this.db.collection(\"MODULES\").find({\n            _id: ObjectId(this.props.match.params.id)\n        })\n        .asArray()\n        .then((module_info) => {\n            if(module_info === undefined || module_info.length === 0)\n            {\n                console.log(module_info)\n                return\n            }\n            this.setState({module_info: module_info[0]}\n            )\n          console.log(module_info)\n        }\n        )\n        .catch((err) => {this.setState({error: err})\n         console.log(err)\n        }\n        )\n       \n    }\n\n    getUserPosition(){\n        navigator.geolocation.getCurrentPosition(position => {\n          this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\n          \n          console.log(this.state)\n          \n        })\n    }\n\n    renderMap(){\n        const userLocation = this.state.userLocationFound ? (\n            <Marker position={this.state.userLocation}>\n              <Popup >Your location</Popup>\n            </Marker>\n          ) : null\n\n        return (\n        <div id='leaflet-container'>\n        <Map center={this.state.currentLocation} zoom={13} maxZoom={18} >\n            <TileLayer\n            \n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n            />\n            {userLocation}     \n        </Map>\n        </div>\n        )   \n    }\n\n\n\n    render(){\n      \n        return(\n            <Container>\n                title: \n                <br />\n                {this.state.module_info.title}\n                <br />\n                <br />\n\n                owner_email: \n                <br />\n                {this.state.module_info.owner_email}\n                <br />\n                <br />\n\n                owner_name: \n                <br />\n                {this.state.module_info.owner_name}\n                <br />\n                <br />\n\n                owner_id: \n                <br />\n                {this.state.module_info.owner_id}\n                <br />\n                <br />\n\n                description: \n                <br />\n                {this.state.module_info.description}\n                <br />\n                <br />\n              \n\n\n                <button className='btn btn-primary' \n                        onClick={() =>\n                            window.location.assign(\n                                \"#/module/\" + this.state.module_info._id+\"/pins\"\n                        )}\n                        >start module</button>\n            </Container>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport {\n    Container,\n    Row,\n    Col,\n    Form,\n    Button,\n    Tabs,\n    Tab,\n    Modal,\n} from \"react-bootstrap\";\nimport { List, arrayMove } from \"react-movable\";\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport { ObjectId } from \"mongodb\";\nimport \"./EditModule.css\";\n\n// @classdesc Used to make the Edit Module view.\nexport default class EditModule extends Component {\n    // Creates a new EditModule\n    // @param {Object} props\n    // @class\n    constructor(props) {\n        super(props);\n        this.state = {\n            module_info: {\n                _id: \"\",\n                title: \"\",\n                owner_email: \"\",\n                owner_id: \"\",\n                owner_name: \"\",\n                description: \"\",\n                pins: [],\n                shared_array: [],\n                public: false,\n            },\n            pins: [],\n            modal: false,\n            idx: -1,\n        };\n\n        this.fetch_userinfo = this.fetch_userinfo.bind(this);\n\n        this.show_modal = this.show_modal.bind(this);\n        this.hide_modal = this.hide_modal.bind(this);\n        this.modal_component = this.modal_component.bind(this);\n\n        this.delete_pin = this.delete_pin.bind(this);\n        this.list_pins = this.list_pins.bind(this);\n        this.module_form = this.module_form.bind(this);\n        this.save_pin_order = this.save_pin_order.bind(this);\n        this.save_module = this.save_module.bind(this);\n\n        const appId = \"capstonear_app-xkqng\";\n        this.client = Stitch.hasAppClient(appId)\n            ? Stitch.getAppClient(appId)\n            : Stitch.initializeDefaultAppClient(appId);\n        const mongodb = this.client.getServiceClient(\n            RemoteMongoClient.factory,\n            \"mongodb-atlas\"\n        );\n        this.db = mongodb.db(\"APP\");\n\n        this.fetch_userinfo();\n    }\n\n    // Gets the module ID from the routing parameter and uses it to get the\n    // associated module and pins for that module.\n    // @return {Promise} Query to set state.module_info and state.pins\n    async fetch_userinfo() {\n        const query = {\n            _id: ObjectId(this.props.match.params.id),\n        };\n\n        await this.db\n            .collection(\"MODULES\")\n            .findOne(query)\n            .then((res) => {\n                console.log(\"Module: \", res);\n                this.setState({ module_info: res });\n\n                // Pipeline to ensure that the order of the pins stays the same after the query\n                const pipeline = [\n                    { $match: { _id: { $in: res.pins } } },\n                    {\n                        $addFields: {\n                            __order: { $indexOfArray: [res.pins, \"$_id\"] },\n                        },\n                    },\n                    { $sort: { __order: 1 } },\n                ];\n\n                this.db\n                    .collection(\"PINS\")\n                    .aggregate(pipeline)\n                    .toArray()\n                    .then((res) => {\n                        console.log(\"Pins: \", res);\n                        this.setState({ pins: res });\n                    });\n            })\n            .catch(console.error);\n    }\n\n    // Sets state.modal to true\n    show_modal() {\n        this.setState({ modal: true });\n    }\n\n    // Sets state.modal to false\n    hide_modal() {\n        this.setState({ modal: false });\n    }\n\n    // @return {JSX.Element} Modal to confirm deletion\n    modal_component() {\n        var modal_message;\n        if (this.state.idx < 0) modal_message = <p>Nothing to delete</p>;\n        else\n            modal_message = (\n                <p>\n                    Are you sure you want to delete{\" \"}\n                    <b>{this.state.pins[this.state.idx].title}</b>?\n                </p>\n            );\n\n        return (\n            <Modal\n                // size=\"sm\"\n                show={this.state.modal}\n                onHide={(e) => {\n                    e.preventDefault();\n                    this.hide_modal();\n                }}\n                style={{\n                    marginTop: \"50px\",\n                }}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Confirm Deletion</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{modal_message}</Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        variant=\"danger\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            if (this.state.idx > -1)\n                                this.delete_pin(this.state.idx);\n                            this.hide_modal();\n                        }}\n                    >\n                        Delete\n                    </Button>{\" \"}\n                    <Button\n                        variant=\"secondary\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.hide_modal();\n                        }}\n                    >\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n\n    // @return {JSX.Element} Form to fill out module title, description, and\n    // public/private status\n    module_form() {\n        return (\n            <Form>\n                <Form.Group>\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                        type=\"title\"\n                        id=\"title\"\n                        value={this.state.module_info.title}\n                        onChange={(e) => {\n                            var module_info = this.state.module_info;\n                            module_info.title = e.target.value;\n                            this.setState({ module_info: module_info });\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows=\"5\"\n                        id=\"description\"\n                        value={this.state.module_info.description}\n                        onChange={(e) => {\n                            var module_info = this.state.module_info;\n                            module_info.description = e.target.value;\n                            this.setState({ module_info: module_info });\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group\n                    style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        marginBottom: \"0\",\n                    }}\n                >\n                    <Form.Check\n                        inline\n                        type=\"radio\"\n                        label=\"Public\"\n                        name=\"formHorizontalRadios\"\n                        id=\"true\"\n                        checked={this.state.module_info.public}\n                        onChange={(e) => {\n                            var module_info = this.state.module_info;\n                            module_info.public = true;\n                            this.setState({\n                                module_info: module_info,\n                            });\n                        }}\n                    />\n                    <Form.Check\n                        inline\n                        type=\"radio\"\n                        label=\"Private\"\n                        name=\"formHorizontalRadios\"\n                        id=\"false\"\n                        checked={!this.state.module_info.public}\n                        onChange={(e) => {\n                            var module_info = this.state.module_info;\n                            module_info.public = false;\n                            this.setState({\n                                module_info: module_info,\n                            });\n                        }}\n                    />\n                </Form.Group>\n            </Form>\n        );\n    }\n\n    // Creates the list of pins based on state.pins. Uses the react-movable\n    // library to make the list of pins draggable.\n    // @return {JSX.Element} The list of pins.\n    list_pins() {\n        return (\n            <List\n                values={this.state.pins}\n                onChange={({ oldIndex, newIndex }) => {\n                    var pins = this.state.pins;\n                    pins = arrayMove(pins, oldIndex, newIndex);\n                    this.setState({ pins: pins });\n                }}\n                renderList={({ children, props }) => (\n                    <ol\n                        {...props}\n                        style={{\n                            display: \"grid\",\n                            justifyContent: \"center\",\n                            paddingLeft: \"0px\",\n                        }}\n                    >\n                        {children}\n                    </ol>\n                )}\n                renderItem={({ index, props }) => (\n                    <li {...props}>\n                        <Row style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\n                            <Col\n                                xs=\"4\"\n                                style={{\n                                    marginTop: \"auto\",\n                                    marginBottom: \"auto\",\n                                }}\n                            >\n                                {this.state.pins[index].title}\n                            </Col>\n                            <Col>\n                                <Button\n                                    variant=\"link\"\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        // TODO: Link to Edit Pin modal\n                                    }}\n                                >\n                                    Edit\n                                </Button>\n                            </Col>\n                            <Col>\n                                <Button\n                                    variant=\"danger\"\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        this.setState({ idx: index });\n                                        this.show_modal();\n                                    }}\n                                >\n                                    Delete\n                                </Button>\n                            </Col>\n                        </Row>\n                    </li>\n                )}\n            />\n        );\n    }\n\n    // This function will remove a pin from the DB and state.pins\n    // @param {number} idx - The index of the pin to delete\n    delete_pin(idx) {\n        const query = { _id: this.state.pins[idx]._id };\n        this.db\n            .collection(\"PINS\")\n            .deleteOne(query)\n            .then((res) => {\n                console.log(\"Delete response: \", res);\n\n                // Update pin list\n                var pins = this.state.pins;\n                pins.splice(idx, 1);\n                this.setState({ pins: pins, idx: -1 });\n            })\n            .catch(console.error);\n    }\n\n    // Converts state.pins to a list of ObjectIDs, then updates\n    // state.module_info.pins based on the new list\n    save_pin_order() {\n        var module = this.state.module_info;\n        const pin_ids = this.state.pins.map((pin) => {\n            return pin._id;\n        });\n        module.pins = pin_ids;\n        this.setState({ module_info: module });\n    }\n\n    // Saves the module to the DB\n    save_module() {\n        this.save_pin_order();\n        const query = { _id: this.state.module_info._id };\n        const update = {\n            $set: this.state.module_info,\n        };\n        const options = { upsert: false };\n\n        this.db\n            .collection(\"MODULES\")\n            .updateOne(query, update, options)\n            .then((res) => {\n                console.log(\"Save response: \", res);\n\n                // Go back to Manage Module view\n                window.location.assign(\"#/modules/edit/\");\n            })\n            .catch(console.error);\n    }\n\n    // @return {JSX.Element} The EditModule componenet\n    render() {\n        return (\n            <Container\n                style={{\n                    marginTop: \"10px\",\n                    maxWidth: \"540px\",\n                    height: \"100%\",\n                }}\n            >\n                <Form style={{ height: \"100%\" }}>\n                    <Tabs\n                        defaultActiveKey=\"Module Info\"\n                        transition={false}\n                        style={{\n                            textAlign: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Tab eventKey=\"Module Info\" title=\"Module Info\">\n                            {this.module_form()}\n                        </Tab>\n                        <Tab\n                            eventKey=\"Pins\"\n                            title=\"Pins\"\n                            style={{ height: \"100%\" }}\n                        >\n                            {this.list_pins()}\n                        </Tab>\n                    </Tabs>\n                    <Form.Group>\n                        <Button\n                            variant=\"primary\"\n                            size=\"lg\"\n                            block\n                            onClick={(e) => {\n                                e.preventDefault();\n                                var id = this.state.module_info._id;\n                                window.location.assign(\n                                    \"#/module/\" + id + \"/pins/edit\"\n                                );\n                            }}\n                        >\n                            Pin Map\n                        </Button>\n                        <Button\n                            variant=\"secondary\"\n                            size=\"lg\"\n                            block\n                            onClick={(e) => {\n                                e.preventDefault();\n                                this.save_module();\n                            }}\n                        >\n                            Save\n                        </Button>\n                    </Form.Group>\n\n                    <Form.Group\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Button variant=\"primary\">Share</Button>\n                    </Form.Group>\n                </Form>\n\n                {this.modal_component()}\n            </Container>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Card, Tab, Tabs, CardDeck, Form, Button } from \"react-bootstrap\";\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\n//import {AwsServiceClient, AwsRequest} from 'mongodb-stitch-browser-services-aws'\n\nexport default class ViewModules extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modules: [],\n            my_modules: [],\n            shared_modules: [],\n            img1: \"\",\n            stitch_res: [],\n        };\n\n        //refs\n        this.goto_module_id = React.createRef();\n\n        this.add_module_cards = this.add_module_cards.bind(this);\n        this.fetch_modules = this.fetch_modules.bind(this);\n        this.goto_module = this.goto_module.bind(this);\n\n        const appId = \"capstonear_app-xkqng\";\n        if (Stitch.hasAppClient(appId)) {\n            this.client = Stitch.getAppClient(appId);\n            const mongodb = this.client.getServiceClient(\n                RemoteMongoClient.factory,\n                \"mongodb-atlas\"\n            );\n            //select the db in our mongdb atlas cluster\n            this.db = mongodb.db(\"APP\");\n        } else {\n            this.client = Stitch.initializeAppClient(appId);\n            //console.log(\"client init\")\n        }\n    }\n\n    componentDidMount() {\n        this.fetch_modules();\n\n        console.log(this.state);\n    }\n\n    async fetch_modules() {\n        await this.db\n            .collection(\"MODULES\")\n            .find({\n                owner_id: this.client.auth.authInfo.userId,\n            })\n            .asArray()\n            .then((my_modules) => {\n                this.setState({\n                    my_modules: my_modules,\n                    modules: {\n                        0: my_modules,\n                        1: this.state.shared_modules,\n                    },\n                });\n\n                console.log(this.state.my_modules);\n            });\n\n        //fetch shared modules\n        await this.db\n            .collection(\"MODULES\")\n            .find({\n                shared_with: this.client.auth.authInfo.userProfile.data.email,\n            })\n            .asArray()\n            .then((shared_modules) => {\n                this.setState({\n                    shared_modules: shared_modules,\n                    modules: {\n                        0: this.state.my_modules,\n                        1: shared_modules,\n                    },\n                });\n                console.log(shared_modules);\n            });\n        console.log(this.state.modules);\n    }\n\n    goto_module(id) {\n        window.location.assign(\"#/module/\" + id);\n    }\n\n    add_module_cards(type) {\n        if (this.state.modules.length === 0) return;\n\n        const mds = this.state.modules[type].map(function (module, idx) {\n            return (\n                <div className=\"col-md-6 col-lg-4 \" key={idx}>\n                    <Card\n                        className=\"h-100\"\n                        style={{\n                            display: \"fixed\",\n\n                            Width: \"25rem\",\n                            margin: \"0.25rem\",\n                            justifyContent: \"center\",\n                            textAlign: \"center\",\n                        }}\n                    >\n                        <Card.Body>\n                            <Card.Img\n                                variant=\"top\"\n                                src=\"https://capstoneusercontent.s3.amazonaws.com/ar.png\"\n                            />\n                            <Card.Title>{module.title}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">\n                                by {module.owner_name} ({module.owner_email})\n                            </Card.Subtitle>\n                            <Card.Text>{module.description}</Card.Text>\n                            <div\n                                className=\"btn-toolbar\"\n                                style={{\n                                    justifyContent: \"center\",\n                                }}\n                            >\n                                <div className=\"btn-group mr-2\">\n                                    <button\n                                        className=\"btn btn-primary\"\n                                        onClick={() =>\n                                            window.location.assign(\n                                                \"#/module/\" + module._id\n                                            )\n                                        }\n                                    >\n                                        View Details\n                                    </button>\n                                </div>\n                                <div className=\"btn-group mr-2\">\n                                    <button className=\"btn btn-primary\"\n                                        onClick={() =>\n                                            window.location.assign(\n                                                \"#/module/\" + module._id+\"/pins\"\n                                        )\n                                    }>\n                                        Start Module\n                                    </button>\n                                </div>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </div>\n            );\n        });\n        return (\n            <div\n                style={{\n                    top: \"50px\",\n                    bottom: \"0px\",\n                    position: \"relative\",\n                }}\n                className=\"container\"\n            >\n                <CardDeck\n                    style={{\n                        top: \"50px\",\n                    }}\n                >\n                    {mds}\n                </CardDeck>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    top: \"0px\",\n                    bottom: \"0px\",\n                    width: \"100%\",\n                    overflowY: \"scroll\",\n                }}\n            >\n                <div\n                    style={{\n                        top: \"10px\",\n                        position: \"relative\",\n                        marginLeft: \"auto\",\n                        marginRight: \"auto\",\n                    }}\n                >\n                    <Tabs\n                        defaultActiveKey=\"My Modules\"\n                        transition={false}\n                        style={{\n                            textAlign: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Tab eventKey=\"My Modules\" title=\"My Modules\">\n                            {this.add_module_cards(0)}\n                        </Tab>\n\n                        <Tab eventKey=\"Shared Modules\" title=\"Shared with me\">\n                            {this.add_module_cards(1)}\n                        </Tab>\n\n                        <Tab eventKey=\"Go To\" title=\"Go To\">\n                            <Form>\n                                <Form.Group controlId=\"formModuleId\">\n                                    <Form.Label>Module ID:</Form.Label>\n                                    <Form.Control\n                                        required\n                                        type=\"string\"\n                                        placeholder=\"Enter module id\"\n                                        ref={this.goto_module_id}\n                                    />\n                                </Form.Group>\n\n                                <Button\n                                    variant=\"primary\"\n                                    onClick={() => {\n                                        window.location.assign(\n                                            \"#/module/\" +\n                                                this.goto_module_id.current\n                                                    .value\n                                        );\n                                    }}\n                                >\n                                    View Module\n                                </Button>\n                            </Form>\n                        </Tab>\n                    </Tabs>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport {\n    Form,\n    FormGroup,\n    Input,\n    Row,\n    Col,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n} from \"reactstrap\";\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\n\nexport default class ManageModules extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modules: [],\n            modal: false,\n            idx: -1,\n        };\n\n        this.fetch_userinfo = this.fetch_userinfo.bind(this);\n\n        this.toggle = this.toggle.bind(this);\n        this.modal_message = this.modal_message.bind(this);\n        this.list_modules = this.list_modules.bind(this);\n        this.delete_module = this.delete_module.bind(this);\n        this.add_module = this.add_module.bind(this);\n        this.save_modules = this.save_modules.bind(this);\n\n        // Setting up DB with Stitch\n        const appId = \"capstonear_app-xkqng\";\n        this.client = Stitch.hasAppClient(appId)\n            ? Stitch.getAppClient(appId)\n            : Stitch.initializeDefaultAppClient(appId);\n        const mongodb = this.client.getServiceClient(\n            RemoteMongoClient.factory,\n            \"mongodb-atlas\"\n        );\n        this.db = mongodb.db(\"APP\");\n\n        this.fetch_userinfo();\n    }\n\n    async fetch_userinfo() {\n        const query = {\n            owner_id: this.client.auth.authInfo.userId,\n        };\n        await this.db\n            .collection(\"MODULES\")\n            .find(query)\n            .toArray()\n            .then((res) => {\n                console.log(\"Modules loaded: \", res);\n\n                this.setState({ modules: res });\n            })\n            .catch(console.error);\n    }\n\n    toggle() {\n        var modal = !this.state.modal;\n        this.setState({ modal: modal });\n    }\n\n    modal_message() {\n        if (this.state.idx < 0) return <p>Nothing to delete</p>;\n        else\n            return (\n                <p>\n                    Are you sure you want to delete{\" \"}\n                    <b>{this.state.modules[this.state.idx].title}</b>?\n                </p>\n            );\n    }\n\n    list_modules() {\n        return this.state.modules.map((module, idx) => {\n            return (\n                <div key={idx}>\n                    <Row form>\n                        <Col xs=\"6\">\n                            <FormGroup>\n                                <Input\n                                    type=\"text\"\n                                    value={this.state.modules[idx].title}\n                                    onChange={(event) => {\n                                        event.preventDefault();\n\n                                        var modules = [...this.state.modules];\n                                        modules[idx].title = event.target.value;\n                                        this.setState({ modules });\n                                    }}\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Col>\n                            <Button\n                                color=\"link\"\n                                onClick={(event) => {\n                                    event.preventDefault();\n                                    var id = this.state.modules[idx]._id;\n                                    window.location.assign(\n                                        \"#/module/\" + id + \"/edit\"\n                                    );\n                                }}\n                            >\n                                Edit\n                            </Button>\n                        </Col>\n                        <Col>\n                            <Button\n                                color=\"danger\"\n                                onClick={(event) => {\n                                    event.preventDefault();\n                                    this.setState({ idx: idx });\n                                    this.toggle();\n                                }}\n                            >\n                                Delete\n                            </Button>\n                        </Col>\n                    </Row>\n                </div>\n            );\n        });\n    }\n\n    delete_module(idx) {\n        const query = { _id: this.state.modules[idx]._id };\n        this.db\n            .collection(\"MODULES\")\n            .deleteOne(query)\n            .then((res) => {\n                console.log(\"Delete response: \", res);\n\n                // Update module list\n                var modules = [...this.state.modules];\n                modules.splice(idx, 1);\n                this.setState({ modules: modules, idx: -1 });\n            })\n            .catch(console.error);\n    }\n\n    add_module() {\n        const query = {\n            title: \"title\",\n            owner_id: this.client.auth.authInfo.userId,\n            owner_name: this.client.auth.authInfo.userProfile.name,\n            owner_email: this.client.auth.authInfo.userProfile.email,\n            description: \"\",\n            pins: [],\n            shared_with: [],\n            public: false,\n        };\n\n        this.db\n            .collection(\"MODULES\")\n            .insertOne(query)\n            .then((res) => {\n                console.log(\"Add response: \", res);\n\n                // Navigate to Edit Module view\n                var id = res.insertedId;\n                window.location.assign(\"#/module/\" + id + \"/edit\");\n            })\n            .catch(console.error);\n    }\n\n    save_modules() {\n        Promise.all(\n            this.state.modules.map((module) => {\n                const query = { _id: module._id };\n                const update = {\n                    $set: {\n                        title: module.title,\n                    },\n                };\n                const options = { upsert: false };\n\n                return this.db\n                    .collection(\"MODULES\")\n                    .updateOne(query, update, options);\n            })\n        )\n            .then((res) => {\n                console.log(\"Save response: \", res);\n            })\n            .catch(console.error);\n    }\n\n    render() {\n        return (\n            <div\n                style={{\n                    top: \"10px\",\n                    position: \"relative\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    height: \"100%\",\n                    overflow: \"hidden\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                }}\n                className=\"container\"\n            >\n                <div\n                    style={{\n                        height: \"100%\",\n                        overflow: \"hidden\",\n                    }}\n                >\n                    <Form\n                        style={{ height: \"100%\" }}\n                        onSubmit={(event) => {\n                            event.preventDefault();\n                            this.save_modules();\n                        }}\n                    >\n                        <div\n                            style={{\n                                maxHeight: \"60%\",\n                                overflowY: \"scroll\",\n                                overflowX: \"hidden\",\n                            }}\n                        >\n                            {this.list_modules()}\n                        </div>\n\n                        <div style={{ marginTop: \"10px\" }}>\n                            <Button\n                                color=\"primary\"\n                                size=\"lg\"\n                                block\n                                onClick={(event) => {\n                                    event.preventDefault();\n                                    this.add_module();\n                                }}\n                            >\n                                Add Module\n                            </Button>\n                            <Button\n                                color=\"secondary\"\n                                size=\"lg\"\n                                block\n                                onClick={(event) => {\n                                    event.preventDefault();\n                                    this.save_modules();\n                                    window.location.assign(\"#/\");\n                                }}\n                            >\n                                Save\n                            </Button>\n                        </div>\n                    </Form>\n                    <Modal\n                        isOpen={this.state.modal}\n                        toggle={(event) => {\n                            event.preventDefault();\n                            this.toggle();\n                        }}\n                        style={{\n                            marginTop: \"50px\",\n                        }}\n                    >\n                        <ModalHeader\n                            toggle={(event) => {\n                                event.preventDefault();\n                                this.toggle();\n                            }}\n                        >\n                            Confirm Deletion\n                        </ModalHeader>\n                        <ModalBody>{this.modal_message()}</ModalBody>\n                        <ModalFooter>\n                            <Button\n                                color=\"danger\"\n                                onClick={(event) => {\n                                    event.preventDefault();\n                                    if (this.state.idx > -1)\n                                        this.delete_module(this.state.idx);\n                                    this.toggle();\n                                }}\n                            >\n                                Delete\n                            </Button>{\" \"}\n                            <Button\n                                color=\"secondary\"\n                                onClick={(event) => {\n                                    event.preventDefault();\n                                    this.toggle();\n                                }}\n                            >\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react'\nimport { Map, Marker, Popup, TileLayer,Polyline } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport L from 'leaflet'\nimport {Stitch, RemoteMongoClient, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\nimport { ObjectId } from 'mongodb'\n\n\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nconst Style = {\n  position: \"fixed\",\n  width: \"60px\",\n  height: \"60px\",\n  bottom: \"40px\",\n  right: \"40px\",\n  backgroundColor: \"#0C9\",\n  color: \"#FFF\",\n  textAlign: \"center\",\n  boxShadow: \"2px 2px 3px #999\",\n  zIndex: 1500\n}\nvar greenIcon = new L.Icon({\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\nvar myIcon = new L.divIcon({\n  className: 'my-div-icon',\n  html: '<span  class=\"my-div-span\">YOU ARE HERE </span>'+\n        '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png\"/>'\n})\n\nclass ViewPinOnMap extends Component{\n  constructor(props){\n    super(props)\n\n    this.state ={\n      currentLocation: {lat: 45.51, lng:-122.68},\n      zoom: 13,\n      userLocation:[],\n      userLocationFound: false,\n      username:\"\",\n      useremail:\"\",\n      userID:\"\",\n      stitch_res:[],\n      pin:[],\n      pins_line:[],\n      pins_array:[],\n    }\n  this.getUserPosition = this.getUserPosition.bind(this)\n  this.drawpins = this.drawpins.bind(this)\n  this.drawlines = this.drawlines.bind(this)\n  this.openGoogle = this.openGoogle.bind(this)\n\n  const appId = \"capstonear_app-xkqng\"\n  this.client = Stitch.hasAppClient(appId)\n  ? Stitch.getAppClient(appId)\n  : Stitch.initializeDefaultAppClient(appId)\n  const mongodb = this.client.getServiceClient(\n  RemoteMongoClient.factory,\n  \"mongodb-atlas\"\n  );\n  this.db = mongodb.db(\"APP\"); \n  }\n  \n\n  getUserPosition(){\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\n      \n      //console.log(this.state)\n      \n    })\n  \n  }\n\n  componentDidMount(){\n    this.getUserPosition()\n    this.drawpins()\n  }\n \n  async drawpins() {\n    if(!this.client.auth.isLoggedIn){\n        return\n    }\n    const query ={_id: ObjectId(this.props.match.params.id) };\n    await this.db.collection(\"MODULES\").findOne(query)\n    .then((stitch_res) => {this.setState({stitch_res})\n      console.log(this.state.stitch_res)\n      var temp_array =[]\n      const pipeline = [\n        { $match: { _id: { $in: stitch_res.pins } } },\n        {\n            $addFields: {\n                __order: { $indexOfArray: [stitch_res.pins, \"$_id\"] },\n            },\n        },\n        { $sort: { __order: 1 } },\n    ];\n    this.db.collection(\"PINS\").aggregate(pipeline)\n    .toArray()\n    .then((res) => {\n        console.log(\"Pins: \", res);\n        this.setState ({ pins_array: res} )\n\n    });      \n       \n    }\n    )\n  }\n  drawlines(){\n   \n    if(this.state.pins_line.length>0)\n    {\n      return (\n        <Polyline positions={this.state.pins_line} color ={'red'}>\n      </Polyline>\n      )\n    }\n    return\n  } \n  openGoogle(coords)\n  {\n    var url= \"http://maps.google.com?q=\"+coords[0]+\",\"+coords[1]\n    var win = window.open(url, '_blank');\n    return\n  }\n  render(){\n    const userLocation = this.state.userLocationFound ? (\n      <Marker  position={this.state.userLocation}  icon= {myIcon} >\n        <Popup>Your location</Popup>\n      </Marker>\n    ) : null\n   \n    return (\n      <div>\n      <Map center={this.state.currentLocation} zoom={13} maxZoom={18} >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n        />\n        {userLocation}\n         \n        {this.state.pins_array.map((info,idx) => {\n            return <Marker \n                           key = {idx} position={info.coords} \n                           icon= {new L.divIcon({\n                                                  className: 'my-div-icon',\n                                                  html: '<span style={Style} class=\"my-div-span\">'+(idx+1)+'</span>'+\n                                                        '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png\"/>'\n                                                })} >\n                        <Popup>\n                              <h1>{info.desc}</h1>\n                              <p>{info.description}</p>\n                              <p>{info.hint}</p>\n                              <p>{info.destination}</p>\n                              <button onClick={()=>this.openGoogle(info.coords)} >Open Google Map</button>\n                        </Popup>\n                    </Marker>\n          })}\n      </Map>\n      </div>\n    );\n    }\n}\n\nexport default ViewPinOnMap;\n\n//this.db.collection(\"PINS\").find({_id: ObjectId(\"5ebed1bc5992681f357d7948\")} )\n//this.db.collection(\"PINS\").find({owner_id: this.client.auth.authInfo.userId} )\n","import React, { useEffect, useState } from \"react\";\r\nimport Tesseract from 'tesseract.js';\r\n\r\nconst Translate = props => {\r\n    const [caption, setCaption] = useState(\"\");\r\n    const image = props.image ? props.image : 'https://tesseract.projectnaptha.com/img/eng_bw.png';\r\n    useEffect(() => {\r\n        Tesseract.recognize(\r\n            image,\r\n            'eng',\r\n            { logger: m => console.log(m) }\r\n        )\r\n            .then(({ data: { text } }) => {\r\n                console.log(text);\r\n                setCaption(text);\r\n            })\r\n    }, [image])\r\n    return (\r\n        <div className=\"container\">\r\n            <img className=\"img-fluid\" src=\"https://tesseract.projectnaptha.com/img/eng_bw.png\"></img>\r\n            <figcaption>{caption}</figcaption>\r\n        </div>);\r\n}\r\nexport default Translate;","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport MapView from \"./components/MapView.js\";\nimport Menu from \"./components/Menu/Menu.js\";\nimport { Stitch } from \"mongodb-stitch-browser-sdk\";\nimport Login from \"./components/Login\";\nimport DropPin from \"./components/DropPin\";\nimport NavMenu from \"./components/Menu/NavMenu\";\nimport Module from \"./components/Module\";\nimport EditModule from \"./components/EditModule\";\nimport { Navbar } from \"react-bootstrap\";\nimport ViewModules from \"./components/ViewModules\";\nimport ManageModules from \"./components/ManageModules\";\nimport ViewPinOnMap from \"./components/ViewPinOnMap\";\nimport Translate from \"./components/imageTranslate\"\n\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        const appId = \"capstonear_app-xkqng\";\n        this.client = Stitch.hasAppClient(appId)\n            ? Stitch.getAppClient(appId)\n            : Stitch.initializeDefaultAppClient(appId);\n\n        if (this.client.auth.hasRedirectResult()) {\n            console.log(\"has results\");\n\n            this.client.auth.handleRedirectResult().then((user) => {\n                window.location.assign(\"/\");\n            });\n        } else {\n            //window.location.replace('#/login')\n        }\n        this.state = {\n            isLoggedIn: false,\n        };\n\n        //refs\n\n        this.center_container = React.createRef();\n\n        this.NavMenu = this.NavMenu.bind(this);\n    }\n\n    componentDidMount() {}\n\n    handleStitchClient() {\n        this.setState({\n            stitchClient: this.client,\n            userProfile: this.client.auth.userProfile,\n            isLoggedIn: true,\n        });\n    }\n\n    Home = () => {\n        if (this.client.auth.isLoggedIn) {\n            return (\n                <div>\n                    <MapView />\n                </div>\n            );\n        } else {\n            return <Login />;\n        }\n    };\n\n    NavMenu = () => {\n        if (this.client.auth.isLoggedIn) {\n            return <NavMenu center_container={this.center_container} />;\n        }\n    };\n\n    render() {\n        return (\n            <HashRouter basename=\"/\">\n                <div>\n                    <Navbar\n                        className=\"navbar bg-dark navbar-dark\"\n                        style={{\n                            position: \"fixed\",\n                            width: \"100%\",\n                            height: \"50px\",\n                            zIndex: 1500,\n                        }}\n                    >\n                        <Navbar.Brand href=\"#/\">Context AR</Navbar.Brand>\n                    </Navbar>\n                    {this.NavMenu()}\n                </div>\n\n                <div\n                    ref={this.center_container}\n                    className=\"center_container\"\n                    style={{\n                        position: \"fixed\",\n                        top: \"50px\",\n                        bottom: \"0\",\n                        width: \"100%\",\n                        height: \"calc(100% - 50px)\",\n                    }}\n                >\n                    <Switch>\n                        <Route exact path=\"/menu\" component={Menu} />\n\n                        <Route\n                            exact\n                            path=\"/modules/edit\"\n                            component={ManageModules}\n                        />\n                        <Route exact path=\"/modules\" component={ViewModules} />\n\n                        <Route\n                            exact\n                            path=\"/module/:id/pins/edit\"\n                            component={DropPin}\n                        />\n                        <Route\n                            exact\n                            path=\"/module/:id/pins\"\n                            component={ViewPinOnMap}\n                        />\n\n                        <Route\n                            exact\n                            path=\"/module/:id/edit\"\n                            component={EditModule}\n                        />\n                        <Route path=\"/module/:id\" component={Module} />\n\n                        <Route exact path=\"/\">\n                            {this.Home}\n                        </Route>\n                        <Route><Translate/></Route>\n                    </Switch>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}