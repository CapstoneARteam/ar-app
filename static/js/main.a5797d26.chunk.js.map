{"version":3,"sources":["components/DropPin.js","../node_modules/require_optional sync","components/MapView.js","components/Menu/Menu.js","components/Login.js","components/Menu/NavMenu.js","components/Module.js","components/EditModule.js","components/ViewModules.js","components/ManageModules.js","components/ViewPinOnMap.js","App.js","serviceWorker.js","index.js"],"names":["appId","client","Stitch","hasAppClient","getAppClient","initializeDefaultAppClient","db","getServiceClient","RemoteMongoClient","factory","globalPosition","floatStyle","position","width","height","bottom","right","backgroundColor","color","borderRadius","textAlign","boxShadow","zIndex","HandleUpload","base64data","id","console","log","basestring","replace","fileBuffer","Buffer","binaryImageData","BSON","Binary","Uint8Array","aws","AwsServiceClient","args","ACL","Bucket","ContentType","Key","ContentEncoding","Body","request","AwsRequest","Builder","withService","withAction","withRegion","withArgs","execute","build","then","result","catch","err","OpenFile","props","srcurl","imgurl","type","multiple","onChange","e","target","files","fileReader","FileReader","readAsDataURL","onloadend","setbase64data","HandleFileChange","style","src","onError","onerror","EditForm","useState","pin","setPin","handleInputChange","name","value","Date","now","setimgurl","centered","show","Header","Title","Group","Label","Control","title","as","rows","description","hint","destination","Footer","variant","onClick","cancel","save","PinMarker","modalShow","setModalShow","key","coords","_id","query","update","$set","collection","findOneAndUpdate","objectID","toString","AddpinForm","className","htmlFor","required","onHide","document","getElementById","lng","lat","owner_id","auth","authInfo","userId","audio","video","insertOne","res","insertedId","setMarkers","markers","module","pins","setModule","upsert","error","DropPin","setPosition","canPlacePin","setCanPlacePin","owner_email","owner_name","shared_array","public","useEffect","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","ObjectId","match","params","findOne","pipeline","$match","$in","$addFields","__order","$indexOfArray","$sort","aggregate","toArray","map","center","zoom","latlng","left","window","history","back","fontSize","url","attribution","webpackEmptyContext","req","Error","code","keys","resolve","exports","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","myIcon","divIcon","html","MapView","state","currentLocation","userLocation","userLocationFound","modules","getpins","bind","getUserPosition","getDistance","toRadian","centerMap","mongodb","setState","this","interval","setInterval","clearInterval","origin","lon1","lat1","lon2","lat2","deltaLat","deltaLon","a","Math","pow","sin","cos","asin","sqrt","degree","PI","isLoggedIn","find","$ne","shared_with","userProfile","data","email","asArray","curr","pin_array","i","length","obj","refs","leafletElement","doubleClickZoom","disable","setTimeout","enable","setView","Marker","icon","Popup","Map","ref","maxZoom","TileLayer","info","idx","location","assign","faStreetView","size","Component","Menu","username","useremail","userID","stitch_res","menuOpen","open","login","logout","addamodule","listmymodules","first_name","userImg","picture","credential","GoogleRedirectCredential","loginWithRedirect","reload","temp_module_name","owner","StyledMenu","setOpen","center_container","top","alt","maxHeigh","maxWidth","listStyleType","paddingLeft","current","opacity","href","fontColor","styled","nav","Login","hasRedirectResult","handleRedirectResult","user","class","margin","StyledBurger","button","Burger","NavMenu","React","Module","fileToBase64","filename","filepath","Promise","file","File","reader","onload","event","current_position","module_info","base64img","user_id","accessed_links","fetch_userinfo","update_user","initializeAppClient","undefined","includes","$addToSet","Container","EditModule","ind","modal","modal2","copied","link","show_modal","show_modal2","hide_modal","hide_modal2","delete_pin_modal","share_modal","list_shared","add_email","delete_email","delete_email_modal","copy_clipboard","save_pin","delete_pin","list_pins","module_form","save_pin_order","save_module","textArea","select","execCommand","copy","modal_message","Modal","marginTop","closeButton","Button","preventDefault","returnNewDocument","$pull","multi","Row","form","Col","xs","FormGroup","FormControl","plaintext","readOnly","sz","maxHeight","overflowY","overflowX","Form","block","textarea","placeholder","display","justifyContent","marginBottom","Check","inline","label","checked","values","oldIndex","newIndex","arrayMove","renderList","children","renderItem","index","deleteOne","splice","pin_ids","updateOne","Tabs","defaultActiveKey","transition","Tab","eventKey","ViewModules","my_modules","shared_modules","img1","accessed_modules","goto_module_id","createRef","add_module_cards","fetch_modules","goto_module","0","1","2","$setOnInsert","options","mds","Card","Width","Img","Subtitle","Text","CardDeck","marginLeft","marginRight","controlId","ManageModules","toggle","list_modules","delete_module","add_module","save_modules","all","onSubmit","nextButtonStyle","previousButtonStyle","currentButtonStyle","ViewPinOnMap","pins_line","pins_array","current_pin_index","drawpins","drawlines","openGoogle","nextPin","previousPin","currentPin","bounds","reduce","acc","rect","percent","latMin","lngMin","latMax","lngMax","lngPad","latPad","AddPaddingToRect","boundingRect","elem","Polyline","positions","userloc","openPopup","temp","marker_icon","ButtonGroup","faArrowAltCircleRight","faArrowAltCircleLeft","faMapMarkerAlt","App","Home","stitchClient","basename","Navbar","Brand","exact","path","component","Boolean","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a5797d26.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nimport {Stitch,RemoteMongoClient,BSON} from \"mongodb-stitch-browser-sdk\"\r\nimport {AwsServiceClient, AwsRequest } from 'mongodb-stitch-browser-services-aws'\r\n\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\n\r\nimport { ObjectId } from \"mongodb\";\r\n\r\nconst appId = \"capstonear_app-xkqng\";\r\nconst client = Stitch.hasAppClient(appId)\r\n    ? Stitch.getAppClient(appId)\r\n    : Stitch.initializeDefaultAppClient(appId);\r\nconst mongodb = client.getServiceClient(\r\n    RemoteMongoClient.factory,\r\n    \"mongodb-atlas\"\r\n);\r\nconst db = mongodb.db(\"APP\");\r\n\r\n//image data\r\nvar base64data = 'default'\r\n\r\nvar globalPosition = {};\r\n\r\nconst floatStyle = {\r\n    position: \"fixed\",\r\n    width: \"60px\",\r\n    height: \"60px\",\r\n    bottom: \"40px\",\r\n    right: \"40px\",\r\n    backgroundColor: \"#0C9\",\r\n    color: \"#FFF\",\r\n    borderRadius: \"50px\",\r\n    textAlign: \"center\",\r\n    boxShadow: \"2px 2px 3px #999\",\r\n    zIndex: 1500,\r\n};\r\n\r\n\r\n\r\n\r\n\r\nvar HandleFileChange = (props, e) => {\r\n    console.log(e.target.files)\r\n    console.log(e.target.files[0])\r\n    let fileReader = new FileReader();\r\n    fileReader.readAsDataURL(e.target.files[0])\r\n    fileReader.onloadend = (e) => {\r\n        props.setbase64data(e.target.result)\r\n       \r\n        return e.target.result\r\n        \r\n        \r\n    }\r\n    \r\n    \r\n}\r\n\r\nconst HandleUpload = (base64data, id) =>{\r\n    console.log(base64data)\r\n    console.log(id)\r\n    // console.log(window.context)\r\n    // Convert the base64 encoded image string to a BSON Binary object\r\n    var basestring = base64data.replace(/^data:image\\/\\w+;base64,/, '');\r\n    var fileBuffer = new Buffer(basestring, 'base64');\r\n    const binaryImageData = new BSON.Binary(new Uint8Array(fileBuffer), 0)\r\n\r\n    const aws = client.getServiceClient(AwsServiceClient.factory, \"capstoneusercontent\");\r\n    // These are the arguments specifically for the s3 service PutObject function\r\n    const args = {\r\n        ACL: 'public-read',\r\n        Bucket: \"capstoneusercontent\",\r\n        ContentType: \"image/jpeg\",\r\n        Key: id + '.jpeg',\r\n        ContentEncoding: 'base64',\r\n        Body: binaryImageData,\r\n        // or Body could be a BSON object\r\n    };\r\n\r\n    const request = new AwsRequest.Builder()\r\n    .withService(\"s3\")\r\n    .withAction(\"PutObject\")\r\n    .withRegion(\"us-west-2\") // this is optional\r\n    .withArgs(args); // depending on the service and action, this may be optional as well\r\n\r\n    console.log(request)\r\n\r\n    aws.execute(request.build())\r\n    .then(result => {\r\n        console.log(result)\r\n    }).catch(err => {\r\n        console.log(err)\r\n    });\r\n    \r\n}\r\n\r\nconst OpenFile = (props) =>{\r\n    console.log(\"open file\")\r\n   \r\n    console.log(props.base64data)\r\n    var srcurl = ''\r\n    if(props.base64data === 'default'){\r\n        srcurl = props.imgurl\r\n    }\r\n    else{\r\n        srcurl = props.base64data\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <input type=\"file\" multiple=\"single\"  onChange={(e) => {\r\n                HandleFileChange(props, e)\r\n                }}></input>  \r\n            <img style={{\r\n                    height: '200px',\r\n                    width : '300px'\r\n                }} \r\n                src={srcurl}\r\n                onError={(e)=>{e.target.onerror = null; e.target.src='https://capstoneusercontent.s3-us-west-2.amazonaws.com/default.png'}}\r\n                ></img>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\nexport const EditForm = (props) => {\r\n    const [pin, setPin] = useState(props.pin);\r\n\r\n    const handleInputChange = (e) => {\r\n        setPin({ ...pin, [e.target.name]: e.target.value });\r\n    };\r\n   \r\n    const [imgurl, setimgurl] = useState(\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + props.id + \".jpeg?versionid=latest&date=\" + Date.now());\r\n  \r\n\r\n    return (\r\n        <Modal {...props} centered show={props.show} style={{ zIndex: \"1600\" }}>\r\n            <Modal.Header>\r\n                <Modal.Title>Edit a Pin</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control\r\n                            type=\"title\"\r\n                            id=\"title\"\r\n                            name=\"title\"\r\n                            value={pin.title}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows=\"2\"\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            value={pin.description}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Hint</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows=\"2\"\r\n                            id=\"hint\"\r\n                            name=\"hint\"\r\n                            value={pin.hint}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Destination</Form.Label>\r\n                        <Form.Control\r\n                            id=\"destination\"\r\n                            name=\"destination\"\r\n                            value={pin.destination}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <OpenFile base64data={props.base64data} setbase64data={props.setbase64data} imgurl={imgurl} setimgurl={setimgurl}></OpenFile>\r\n                        \r\n                    </Form.Group>\r\n                </Form>\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={\r\n                    () =>{\r\n                        props.cancel()\r\n                        props.setbase64data('default')\r\n                    }\r\n                    }>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    variant=\"primary\"\r\n                    onClick={() => {\r\n      /*\r\n\r\n                        const title =\r\n                            document.getElementById(\"title\").value || \"\";\r\n                        const hint =\r\n                            document.getElementById(\"hint\").value || \"\";\r\n                        const description =\r\n                            document.getElementById(\"description\").value || \"\";\r\n                        const destination =\r\n                            document.getElementById(\"destination\").value || \"\";\r\n                        const query = { _id: props.objectID };\r\n                        const update = {\r\n                            $set: {\r\n                                title: title,\r\n                                description: description,\r\n                                hint: hint,\r\n                                destination: destination,\r\n                            },\r\n                        };\r\n                        // update a pin on the database\r\n                        db.collection(\"PINS\")\r\n                            .findOneAndUpdate(query, update)\r\n                            .then((objectID) => {\r\n                                console.log(objectID._id.toString())\r\n                                console.log(base64data)\r\n                                if(base64data === \"default\")\r\n                                {}\r\n                                else{\r\n                                    //upload image\r\n                                    HandleUpload(base64data, objectID._id.toString())\r\n\r\n                                }\r\n                                \r\n                                setDefaultValues({\r\n                                    title: title,\r\n                                    description: description,\r\n                                    hint: hint,\r\n                                    destination: destination\r\n                                });\r\n                                setimgurl(\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + props.id + \".jpeg?versionid=latest&date=\" + Date.now())\r\n                                props.cancel();\r\n                            });\r\n\r\n*/                      \r\n                        props.save(pin);\r\n                    }}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst PinMarker = (props) => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [base64data, setbase64data] = useState(\"default\");\r\n  \r\n    return (\r\n        <Marker\r\n            key={globalPosition}\r\n            position={props.pin.coords}\r\n            onClick={() => {\r\n                setModalShow(!modalShow);\r\n            }}\r\n        >\r\n            <EditForm\r\n\r\n                pin={props.pin}\r\n                id={props.pin._id}\r\n                show={modalShow}\r\n                save={(pin) => {\r\n                    const query = { _id: pin._id };\r\n                    const update = {\r\n                        $set: pin,\r\n                    };\r\n                    // update a pin on the database\r\n                    db.collection(\"PINS\")\r\n                        .findOneAndUpdate(query, update)\r\n                        .then((objectID) => {\r\n                            if(base64data === \"default\")\r\n                            {}\r\n                            else{\r\n                                //upload image\r\n                                HandleUpload(base64data, objectID._id.toString())\r\n                                setbase64data(\"default\")\r\n\r\n                            }\r\n                            setModalShow(false);\r\n                      \r\n                        });\r\n                }}\r\n                cancel={() => setModalShow(false)}\r\n                \r\n                setbase64data={setbase64data}\r\n                base64data={base64data}\r\n            />\r\n        </Marker>\r\n    );\r\n};\r\n\r\nconst AddpinForm = (props) => {\r\n\r\n    return (\r\n        <Modal {...props} centered style={{ zIndex: \"1600\" }}>\r\n            <Modal.Header>\r\n                <Modal.Title>Add a Pin</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <label className=\"d-block\" htmlFor=\"title\">\r\n                    Title\r\n                </label>\r\n                <input type=\"text\" className=\"w-100\" id=\"title\" required />\r\n                <label className=\"d-block\" htmlFor=\"description\">\r\n                    Description\r\n                </label>\r\n                <textarea className=\"w-100\" id=\"description\" required />\r\n                <label className=\"d-block\" htmlFor=\"hint\">\r\n                    Hint\r\n                </label>\r\n                <textarea className=\"w-100\" id=\"hint\" required />\r\n                <label className=\"d-block\" htmlFor=\"destination\">\r\n                    Destination\r\n                </label>\r\n                <textarea className=\"w-100\" id=\"destination\" required />\r\n\r\n                <label className=\"d-block\" htmlFor=\"pinImage\">\r\n                    Image\r\n                </label>\r\n\r\n                <OpenFile base64data={props.base64data} setbase64data={props.setbase64data} imgurl={\"\"}> </OpenFile>\r\n                \r\n\r\n\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button className=\"btn btn-secondary\" onClick={ ()=> {\r\n                    props.onHide() \r\n                    props.setbase64data(\"default\")\r\n                }}>\r\n                    Cancel\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => {\r\n                        const title =\r\n                            document.getElementById(\"title\").value || \"\";\r\n                        const hint =\r\n                            document.getElementById(\"hint\").value || \"\";\r\n                        const description =\r\n                            document.getElementById(\"description\").value || \"\";\r\n                        const destination =\r\n                            document.getElementById(\"destination\").value || \"\";\r\n                        const { lng, lat } = globalPosition;\r\n                        // insert a new pin on the database\r\n                        const pin = {\r\n                            title: title,\r\n                            owner_id: client.auth.authInfo.userId,\r\n                            description: description,\r\n                            hint: hint,\r\n                            destination: destination,\r\n                            audio: \"\",\r\n                            video: \"\",\r\n                            coords: [lat, lng],\r\n                        };\r\n                        db.collection(\"PINS\")\r\n                            .insertOne(pin)\r\n                            .then((res) => {\r\n                                //console.log(res.insertedId.id)\r\n                                \r\n                                if(props.base64data === \"default\")\r\n                                {}\r\n                                else{\r\n                                    //upload image\r\n                                    HandleUpload(props.base64data, res.insertedId.toString())\r\n                                    props.setbase64data(\"default\")\r\n                                }\r\n                                // add the new pin to the map on success of adding the pin to\r\n                                // to the database\r\n                                props.setMarkers([\r\n                                    ...props.markers,\r\n                                    <PinMarker\r\n\r\n                                        id={res.insertedId.toString()}\r\n                                        description={description}\r\n                                        hint={hint}\r\n                                        destination={destination}\r\n                                        title={title}\r\n                                        objectID={res.insertedId}\r\n                                        lng={lng}\r\n                                        lat={lat}\r\n\r\n                                        key={res.insertedId}\r\n                                        pin={pin}\r\n\r\n                                    />,\r\n                                ]);\r\n\r\n                                var module = props.module;\r\n                                module.pins = [...module.pins, res.insertedId];\r\n                                props.setModule(module);\r\n\r\n                                const query = { _id: module._id };\r\n                                const update = {\r\n                                    $set: {\r\n                                        pins: module.pins,\r\n                                    },\r\n                                };\r\n                                const options = { upsert: false };\r\n                                db.collection(\"MODULES\")\r\n                                    .findOneAndUpdate(query, update, options)\r\n                                    .then((res) => {})\r\n                                    .catch(console.error);\r\n                            });\r\n                        props.onHide();\r\n                    }}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst DropPin = (props) => {\r\n    const [position, setPosition] = useState([45, 45]);\r\n    const [markers, setMarkers] = useState([]);\r\n    const [canPlacePin, setCanPlacePin] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [base64data, setbase64data] = useState(\"default\");\r\n    const [module, setModule] = useState({\r\n        _id: \"\",\r\n        title: \"\",\r\n        owner_email: \"\",\r\n        owner_id: \"\",\r\n        owner_name: \"\",\r\n        description: \"\",\r\n        pins: [],\r\n        shared_array: [],\r\n        public: false,\r\n    });\r\n   \r\n\r\n    // Getting the users current location\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((pos) => {\r\n            const { latitude, longitude } = pos.coords;\r\n            setPosition([latitude, longitude]);\r\n        });\r\n    }, []);\r\n\r\n    // Getting the module and pins for the module\r\n    useEffect(() => {\r\n        const query = {\r\n            _id: ObjectId(props.match.params.id),\r\n        };\r\n        db.collection(\"MODULES\")\r\n            .findOne(query)\r\n            .then((res) => {\r\n                setModule(res);\r\n\r\n                // Pipeline to ensure that the order of the pins stays the same after the query\r\n                const pipeline = [\r\n                    { $match: { _id: { $in: res.pins } } },\r\n                    {\r\n                        $addFields: {\r\n                            __order: { $indexOfArray: [res.pins, \"$_id\"] },\r\n                        },\r\n                    },\r\n                    { $sort: { __order: 1 } },\r\n                ];\r\n\r\n                db.collection(\"PINS\")\r\n                    .aggregate(pipeline)\r\n                    .toArray()\r\n                    .then((res) => {\r\n                        setMarkers(\r\n                            res.map((pin) => {\r\n\r\n                                return <PinMarker \r\n                                        key={pin._id} pin={pin}\r\n                                        setbase64data={setbase64data}\r\n                                        base64data={base64data}\r\n                                    />;\r\n\r\n                            })\r\n                        );\r\n                    });\r\n            })\r\n            .catch(console.error);\r\n    }, [props.match.params.id]);\r\n\r\n    return (\r\n        <Map\r\n            center={position}\r\n            zoom={13}\r\n            onClick={(e) => {\r\n                if (canPlacePin) {\r\n                    globalPosition = e.latlng;\r\n                    setModalShow(true);\r\n                    setCanPlacePin(!canPlacePin);\r\n                }\r\n            }}\r\n        >\r\n            <AddpinForm\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                setMarkers={setMarkers}\r\n                markers={markers}\r\n                setModule={setModule}\r\n                module={module}\r\n                \r\n                setbase64data={setbase64data}\r\n                base64data={base64data}\r\n            />\r\n            <button\r\n                style={{\r\n                    zIndex: 1500,\r\n                    position: \"fixed\",\r\n                    bottom: \"10px\",\r\n                    left: \"10px\",\r\n                    textAlign: \"center\",\r\n                }}\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                    window.history.back();\r\n                }}\r\n            >\r\n                Save\r\n            </button>\r\n            <button\r\n                style={floatStyle}\r\n                onClick={() => setCanPlacePin(!canPlacePin)}\r\n            >\r\n                <div style={{ fontSize: \"40px\" }}>+</div>\r\n            </button>\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            <Marker position={position}>\r\n                <Popup>Your location</Popup>\r\n            </Marker>\r\n            {markers}\r\n        </Map>\r\n    );\r\n};\r\n\r\nexport default DropPin;\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 217;","import React, {Component} from 'react'\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L from 'leaflet'\r\nimport {Stitch, RemoteMongoClient, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\r\nimport { ObjectId } from 'mongodb'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStreetView } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nconst Style = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"40px\",\r\n  backgroundColor: \"#0C9\",\r\n  color: \"#FFF\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500\r\n}\r\nvar greenIcon = new L.Icon({\r\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  shadowSize: [41, 41]\r\n});\r\n\r\nvar myIcon = new L.divIcon({\r\n  className: 'my-div-icon',\r\n  html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png\"/>'\r\n})\r\n\r\nconst floatStyle = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"40px\",\r\n  backgroundColor: \"#0C9\",\r\n  color: \"#FFF\",\r\n  borderRadius: \"50px\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500,\r\n};\r\n\r\nclass MapView extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state ={\r\n      currentLocation: {lat: 45.51, lng:-122.68},\r\n      zoom: 13,\r\n      userLocation:[],\r\n      userLocationFound: false,\r\n      modules: [],\r\n      pins: [],\r\n    }\r\n\r\n  this.getpins = this.getpins.bind(this)\r\n  this.getUserPosition = this.getUserPosition.bind(this)\r\n  this.getDistance = this.getDistance.bind(this)\r\n  this.toRadian = this.toRadian.bind(this)\r\n  this.centerMap = this.centerMap.bind(this)\r\n\r\n  const appId = \"capstonear_app-xkqng\"\r\n  this.client = Stitch.hasAppClient(appId)\r\n  ? Stitch.getAppClient(appId)\r\n  : Stitch.initializeDefaultAppClient(appId)\r\n  const mongodb = this.client.getServiceClient(\r\n  RemoteMongoClient.factory,\r\n  \"mongodb-atlas\"\r\n  );\r\n  this.db = mongodb.db(\"APP\"); \r\n  }\r\n  \r\n\r\n  getUserPosition(){\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\r\n      \r\n      //console.log(this.state)\r\n      \r\n    })\r\n  \r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getUserPosition()\r\n    this.getpins()\r\n\r\n    this.interval = setInterval(this.getUserPosition, 10000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  //find distance between two points in meters. Returns true for less than meters or false if not\r\n  getDistance(origin, destination) {\r\n    var lon1 = this.toRadian(origin[1]);\r\n    var lat1 = this.toRadian(origin[0]);\r\n    var lon2 = this.toRadian(destination[1]);\r\n    var lat2 = this.toRadian(destination[0]);\r\n\r\n    var deltaLat = lat2 - lat1;\r\n    var deltaLon = lon2 - lon1;\r\n\r\n    var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\r\n    var c = 2 * Math.asin(Math.sqrt(a));\r\n    var EARTH_RADIUS = 6371;\r\n    var d = c * EARTH_RADIUS * 1000;\r\n\r\n    // 24000 meters ~ 15 miles\r\n    if(d < 24000)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  toRadian(degree) {\r\n    return degree*Math.PI/180;\r\n  }\r\n\r\n  async getpins() {\r\n    if(!this.client.auth.isLoggedIn){\r\n      return\r\n    }\r\n    await this.db.collection(\"MODULES\")\r\n      .find({\r\n        owner_id: { $ne: this.client.auth.authInfo.userId},\r\n        shared_with: { $ne: this.client.auth.authInfo.userProfile.data.email},\r\n        public: true,\r\n        pins: { $ne: []},\r\n      })\r\n      .asArray()\r\n      .then((res) => {\r\n        this.setState({modules: res})\r\n        res = res.map(curr => {\r\n          curr = curr.pins[0];\r\n          return curr;\r\n        })\r\n        this.setState({pin_array: res})\r\n        //console.log(\"Pin Array: \", res);\r\n        //console.log(\"Modules: \", this.state.modules);\r\n      })\r\n\r\n    await this.db\r\n      .collection(\"PINS\")\r\n      .find({\r\n        _id: { $in: [...this.state.pin_array]}\r\n      })\r\n      .toArray()\r\n      .then((res) => {\r\n        res = res.map(curr => {\r\n          curr = curr.coords;\r\n          return curr;\r\n        })\r\n        //console.log(\"Pins: \", res);\r\n        this.setState({ pins: res });\r\n      });\r\n\r\n    // limits pins to only those within specific miles of userlocation\r\n    var pins = [...this.state.pins];\r\n    var modules = [...this.state.modules];\r\n    for(var i = 0; i < this.state.pins.length; i++) {\r\n      if(!this.getDistance(this.state.userLocation, this.state.pins[i])) {\r\n        if(i !== -1)\r\n          delete pins[i];\r\n          delete modules[i];\r\n      }\r\n    }\r\n    this.setState({ pins: pins });\r\n    this.setState({ modules: modules});\r\n  }\r\n\r\n  centerMap(obj,coords)\r\n  {\r\n    this.getUserPosition();\r\n\r\n    const map = this.refs.map.leafletElement;\r\n    map.doubleClickZoom.disable();\r\n    setTimeout(function() {\r\n         map.doubleClickZoom.enable();\r\n    }, 1000);\r\n    map.setView(coords, 13);\r\n  }\r\n\r\n  render(){\r\n    const userLocation = this.state.userLocationFound ? (\r\n      <Marker position={this.state.userLocation} icon= {myIcon} >\r\n        <Popup >Your location</Popup>\r\n      </Marker>\r\n    ) : null\r\n\r\n    return (\r\n      <div id='leaflet-container'>\r\n      <Map ref='map' center={this.state.currentLocation} zoom={13} maxZoom={18} >\r\n        <TileLayer\r\n          \r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n        />\r\n        {userLocation}   \r\n        {this.state.pins.map((info,idx) => {\r\n            return <Marker \r\n              key = {idx} position={info} \r\n              icon= {new L.divIcon({\r\n                className: 'my-div-icon',\r\n                html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png\"/>' \r\n              })} >\r\n              <Popup>\r\n                <h1>{this.state.modules[idx].title}</h1>\r\n                <p>{this.state.modules[idx].description}</p>\r\n                <p>{this.state.modules[idx].owner_name}</p>\r\n                <p>{this.state.modules[idx].owner_email}</p>\r\n                <p>\r\n                  <img\r\n                    style={{\r\n                      height: '100px',\r\n                      width: '150px'\r\n                    }}\r\n                    src={\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + this.state.modules[idx].pins[0] + \".jpeg?versionid=latest&date=\" + Date.now()}\r\n                    onError={(e)=>{e.target.onerror = null; e.target.src=\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/ar.png\"}}>\r\n                  </img>\r\n                </p>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() =>\r\n                  window.location.assign(\"#/module/\" + this.state.modules[idx]._id)\r\n                  }\r\n                  >View Details</button>\r\n              </Popup>\r\n            </Marker>\r\n          })}  \r\n          <button style={floatStyle} onClick={()=>this.centerMap(this,this.state.userLocation)} >\r\n            <div><FontAwesomeIcon icon={faStreetView} size=\"3x\" /></div>\r\n          </button>\r\n      </Map>\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default MapView;","import React, { Component } from \"react\";\r\nimport {\r\n    Stitch,\r\n    RemoteMongoClient,\r\n    GoogleRedirectCredential,\r\n} from \"mongodb-stitch-browser-sdk\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport styled from \"styled-components\";\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            useremail: \"\",\r\n            userID: \"\",\r\n            stitch_res: [],\r\n            menuOpen: this.props.open,\r\n        };\r\n\r\n        //bind functions\r\n        this.login = this.login.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.addamodule = this.addamodule.bind(this);\r\n        this.listmymodules = this.listmymodules.bind(this);\r\n        console.log(props);\r\n        const appId = \"capstonear_app-xkqng\";\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId);\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n            );\r\n            //select the db in our mongdb atlas cluster\r\n            this.db = mongodb.db(\"APP\");\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        //init mongodb stitch\r\n\r\n        if (\r\n            this.client.auth.isLoggedIn &&\r\n            this.client.auth.authInfo.userProfile\r\n        ) {\r\n            this.setState({\r\n                username: this.client.auth.authInfo.userProfile.data.first_name,\r\n                useremail: this.client.auth.authInfo.userProfile.data.email,\r\n                userID: this.client.auth.authInfo.userId,\r\n                userImg: this.client.auth.authInfo.userProfile.data.picture,\r\n            });\r\n\r\n            console.log(this.client.auth.authInfo.userProfile.data);\r\n        }\r\n    }\r\n\r\n    //login button handler\r\n    async login() {\r\n        //login using google redirect\r\n        const credential = new GoogleRedirectCredential();\r\n        this.client.auth.loginWithRedirect(credential);\r\n        console.log(this.state);\r\n    }\r\n\r\n    async logout() {\r\n        await this.client.auth.logout();\r\n        this.setState({\r\n            username: \"\",\r\n            useremail: \"\",\r\n            userID: \"\",\r\n        });\r\n        window.location.reload();\r\n    }\r\n\r\n    addamodule() {\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .insertOne({\r\n                owner_id: this.state.userID,\r\n                name: this.state.temp_module_name,\r\n                owner: this.state.useremail,\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    listmymodules() {\r\n        if (!this.client.auth.isLoggedIn) {\r\n            return;\r\n        }\r\n        this.db\r\n            .collection(\"PINS\")\r\n            .find({ _id: ObjectId(\"5ebed1bc5992681f357d7948\") })\r\n            .asArray()\r\n            .then((stitch_res) => {\r\n                this.setState({ stitch_res });\r\n                console.log(this.state.stitch_res[0]);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <StyledMenu\r\n                open={this.props.open}\r\n                setOpen={this.props.setOpen}\r\n                center_container={this.props.center_container}\r\n                style={{}}\r\n            >\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        top: \"2rem\",\r\n                    }}\r\n                >\r\n                    <img\r\n                        src={this.state.userImg}\r\n                        alt=\"test\"\r\n                        style={{\r\n                            maxHeigh: \"80px\",\r\n                            maxWidth: \"80px\",\r\n                            borderRadius: \"50%\",\r\n                            top: \"1rem\",\r\n                        }}\r\n                    ></img>\r\n\r\n                    <p\r\n                        style={{\r\n                            fontSize: \"1.5rem\",\r\n                            top: \"4rem\",\r\n                            color: \"white\",\r\n                            zIndex: 1002,\r\n                        }}\r\n                    >\r\n                        {\" \"}\r\n                        Welcome, <br /> {this.state.username}{\" \"}\r\n                    </p>\r\n                </div>\r\n\r\n                <ul\r\n                    style={{ listStyleType: \"none\", paddingLeft: 0 }}\r\n                    onClick={() => {\r\n                        this.props.center_container.center_container.current.style.opacity = 1;\r\n                        this.props.setOpen(!this.props.open);\r\n                    }}\r\n                >\r\n                    <li>\r\n                        <a href=\"#/\">Home</a>\r\n                    </li>\r\n                    <br />\r\n                    <li>\r\n                        <a href=\"#/modules\">My Modules</a>\r\n                    </li>\r\n                    <br />\r\n                    <li>\r\n                        <a href=\"#/modules/edit\">Manage Modules</a>\r\n                    </li>\r\n                    <br />\r\n                </ul>\r\n\r\n                <a\r\n                    href=\"#/logout\"\r\n                    onClick={this.logout}\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        fontSize: \"1rem\",\r\n                        fontColor: \"#00000\",\r\n                        bottom: \"10rem\",\r\n                    }}\r\n                >\r\n                    Log Out\r\n                </a>\r\n            </StyledMenu>\r\n        );\r\n    }\r\n}\r\n\r\n// menu style sheet\r\n// tutorial from https://css-tricks.com/hamburger-menu-with-a-side-of-react-hooks-and-styled-components/ with modified styles\r\nconst StyledMenu = styled.nav`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    background: #343a40;\r\n    transform: ${({ open }) =>\r\n        open ? \"translateX(-100)\" : \"translateX(100%)\"};\r\n    height: 100vh;\r\n    text-align: left;\r\n    padding: 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    transition: transform 0.3s ease-in-out;\r\n    z-index: 1501;\r\n\r\n    @media (max-width: 150px) {\r\n        width: 100%;\r\n    }\r\n\r\n    a {\r\n        font-size: 1.5rem;\r\n        text-transform: uppercase;\r\n        padding: 2rem 0;\r\n        font-weight: Light;\r\n        letter-spacing: 0.5rem;\r\n        color: #FFFFF;\r\n        text-decoration: none;\r\n        transition: color 0.3s linear;\r\n\r\n        @media (max-width: 150px) {\r\n            font-size: 1rem;\r\n            text-align: center;\r\n        }\r\n\r\n        &:hover {\r\n            color: #343078;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Menu;\r\n","import React, {Component} from 'react'\r\nimport './Login.css'\r\nimport {Stitch, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\r\n\r\nexport default class Login extends Component{\r\n    constructor(){\r\n        super()\r\n        const appId = \"capstonear_app-xkqng\"\r\n        this.client = Stitch.getAppClient(appId)\r\n        this.login = this.login.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n      if (this.client.auth.hasRedirectResult()) {\r\n        console.log(\"has results\")\r\n  \r\n        this.client.auth.handleRedirectResult().then(user => {\r\n          this.setState(\r\n            {\r\n              username: this.client.auth.authInfo.userProfile.data.name,\r\n              useremail: this.client.auth.authInfo.userProfile.data.email,\r\n              userID: this.client.auth.authInfo.userId,\r\n  \r\n            }\r\n          )\r\n          window.location.assign('#/')\r\n        }\r\n        )\r\n      }\r\n        \r\n       \r\n    }\r\n\r\n\r\n    async login(){\r\n          \r\n          //login using google redirect\r\n          const credential = new GoogleRedirectCredential();\r\n          await this.client.auth.loginWithRedirect(credential);\r\n          console.log(this.state)\r\n          \r\n        \r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      \r\n          <div class=\"row justify-content-center\" style={{\r\n            position: \"fixed\",\r\n            margin: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0,\r\n            height: \"50px\"\r\n          }}>\r\n              <button class=\"btn btn-primary\"onClick={this.login}>Login with Google</button>\r\n          </div>\r\n      \r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Menu from './Menu'\r\n\r\n\r\nconst StyledBurger = styled.button`\r\n  position: fixed;\r\n  top: 10px;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 1502;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.25rem;\r\n    background: ${({ open }) => open ? '#FFFFFF' : '#FFFFFF'};\r\n    border-radius: 10px;\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => open ? '0' : '1'};\r\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\r\n    }\r\n  }\r\n`\r\n\r\nconst Burger = ({ open, setOpen, center_container }) => {\r\n  console.log(center_container.center_container.current)\r\n  return (\r\n    <StyledBurger open={open} onClick={() => {\r\n      setOpen(!open)\r\n      if(!open)\r\n        center_container.center_container.current.style.opacity = .5 \r\n      else\r\n        center_container.center_container.current.style.opacity = 1\r\n    }}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </StyledBurger>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst NavMenu = (center_container) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n        <div>\r\n        <Burger open={open} setOpen={setOpen} center_container={center_container} />\r\n        <Menu open={open} setOpen={setOpen} center_container={center_container}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavMenu","import React, { Component} from 'react'\r\n\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\r\nimport {Container} from 'react-bootstrap'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport {Stitch,RemoteMongoClient,BSON} from \"mongodb-stitch-browser-sdk\"\r\nimport {AwsServiceClient, AwsRequest } from 'mongodb-stitch-browser-services-aws'\r\nimport {ObjectId} from 'mongodb'\r\n//const BSON = require('bson');\r\n\r\nexport default class Module extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            current_position:[],\r\n            module_info: {\r\n                name:'',\r\n                owner_email: '',\r\n                owner_id: '',\r\n                owner_name: '',\r\n                description: '',\r\n            },\r\n          \r\n            base64img:'',\r\n            user: {\r\n                _id: '',\r\n                user_id: '',\r\n                accessed_links: [],\r\n            },\r\n\r\n        }\r\n\r\n        this.getUserPosition = this.getUserPosition.bind(this)\r\n        this.fetch_userinfo = this.fetch_userinfo.bind(this)\r\n\r\n        this.update_user = this.update_user.bind(this);\r\n\r\n        const appId = \"capstonear_app-xkqng\"\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId)\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n              );\r\n              //select the db in our mongdb atlas cluster\r\n              this.db = mongodb.db(\"APP\");\r\n            console.log(\"client\")\r\n        }\r\n        else{\r\n            this.client = Stitch.initializeAppClient(appId)\r\n            console.log(\"client init\")\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.getUserPosition()\r\n        this.fetch_userinfo()\r\n\r\n        const appId = \"capstonear_app-xkqng\"\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId)\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n              );\r\n              //select the db in our mongdb atlas cluster\r\n              this.db = mongodb.db(\"APP\");\r\n            console.log(\"client\")\r\n        }\r\n        else{\r\n            this.client = Stitch.initializeAppClient(appId)\r\n            console.log(\"client init\")\r\n        }\r\n    }\r\n\r\n    async fetch_userinfo(){\r\n        await this.db.collection(\"MODULES\").find({\r\n            _id: ObjectId(this.props.match.params.id)\r\n        })\r\n        .asArray()\r\n        .then((module_info) => {\r\n            if(module_info === undefined || module_info.length === 0)\r\n            {\r\n                console.log(module_info)\r\n                return\r\n            }\r\n            this.setState({module_info: module_info[0]}\r\n            )\r\n          console.log(module_info)\r\n        }\r\n        )\r\n        .catch((err) => {this.setState({error: err})\r\n         console.log(err)\r\n        }\r\n        )\r\n\r\n        const query = {\r\n            user_id: this.client.auth.authInfo.userId,\r\n        };\r\n        await this.db\r\n            .collection(\"USERS\")\r\n            .findOne(query)\r\n            .then((res) => {\r\n                console.log(\"User: \", res);\r\n\r\n                this.setState({ user: res });\r\n            })\r\n            .catch(console.error);\r\n\r\n        this.update_user();\r\n    }\r\n\r\n    getUserPosition(){\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n          this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\r\n          \r\n          console.log(this.state)\r\n          \r\n        })\r\n    }\r\n\r\n    update_user() {\r\n        if(\r\n            this.client.auth.authInfo.userId != this.state.module_info.owner_id && this.state.module_info.public == true && !this.state.module_info.shared_with.includes(this.client.auth.authInfo.userProfile.email)){\r\n            const query = {\r\n                _id: this.state.user._id,\r\n                user_id: this.client.auth.authInfo.userId,\r\n            };\r\n            const update = { $addToSet: { accessed_links: ObjectId(this.state.module_info._id) } };\r\n    \r\n            this.db\r\n                .collection(\"USERS\")\r\n                .findOneAndUpdate(query, update)\r\n                .then((res) => {\r\n                    console.log(\"Update response: \", res);\r\n                })\r\n                .catch(console.error);\r\n        }\r\n    }\r\n\r\n    renderMap(){\r\n        const userLocation = this.state.userLocationFound ? (\r\n            <Marker position={this.state.userLocation}>\r\n              <Popup >Your location</Popup>\r\n            </Marker>\r\n          ) : null\r\n\r\n        return (\r\n        <div id='leaflet-container'>\r\n        <Map center={this.state.currentLocation} zoom={13} maxZoom={18} >\r\n            <TileLayer\r\n            \r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n            />\r\n            {userLocation}     \r\n        </Map>\r\n        </div>\r\n        )   \r\n    }\r\n\r\n\r\n    fileToBase64 = (filename, filepath) => {\r\n        return new Promise(resolve => {\r\n          var file = new File([filename], filepath);\r\n          var reader = new FileReader();\r\n          // Read file content on file loaded event\r\n          reader.onload = function(event) {\r\n            resolve(event.target.result);\r\n          };\r\n          \r\n          // Convert data to base64 \r\n          reader.readAsDataURL(file);\r\n        });\r\n      };\r\n\r\n\r\n    render(){\r\n      \r\n        return(\r\n            <Container>\r\n                title: \r\n                <br />\r\n                {this.state.module_info.title}\r\n                <br />\r\n                <br />\r\n\r\n                owner_email: \r\n                <br />\r\n                {this.state.module_info.owner_email}\r\n                <br />\r\n                <br />\r\n\r\n                owner_name: \r\n                <br />\r\n                {this.state.module_info.owner_name}\r\n                <br />\r\n                <br />\r\n\r\n                owner_id: \r\n                <br />\r\n                {this.state.module_info.owner_id}\r\n                <br />\r\n                <br />\r\n\r\n                description: \r\n                <br />\r\n                {this.state.module_info.description}\r\n                <br />\r\n                <br />\r\n              \r\n             \r\n        \r\n\r\n                <button className='btn btn-primary' \r\n                        onClick={() =>\r\n                            window.location.assign(\r\n                                \"#/module/\" + this.state.module_info._id+\"/pins\"\r\n                        )}\r\n                        >start module</button>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Button,\r\n    Tabs,\r\n    Tab,\r\n    Modal,\r\n    FormControl,\r\n    FormGroup,\r\n} from \"react-bootstrap\";\r\nimport { List, arrayMove } from \"react-movable\";\r\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport \"./EditModule.css\";\r\n\r\nimport { EditForm } from \"./DropPin\";\r\n\r\n// @classdesc Used to make the Edit Module view.\r\nexport default class EditModule extends Component {\r\n    // Creates a new EditModule\r\n    // @param {Object} props\r\n    // @class\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            module_info: {\r\n                _id: \"\",\r\n                title: \"\",\r\n                owner_email: \"\",\r\n                owner_id: \"\",\r\n                owner_name: \"\",\r\n                description: \"\",\r\n                pins: [],\r\n                shared_with: [],\r\n                public: false,\r\n            },\r\n            email: \"\",\r\n            shared_with: [],\r\n            pins: [],\r\n            idx: -1,\r\n            ind: -1,\r\n            modal: null,\r\n            modal2: null,\r\n            copied: false,\r\n            link: \"\",\r\n        };\r\n\r\n        this.fetch_userinfo = this.fetch_userinfo.bind(this);\r\n\r\n        this.show_modal = this.show_modal.bind(this);\r\n        this.show_modal2 = this.show_modal2.bind(this);\r\n        this.hide_modal = this.hide_modal.bind(this);\r\n        this.hide_modal2 = this.hide_modal2.bind(this);\r\n        this.delete_pin_modal = this.delete_pin_modal.bind(this);\r\n        this.share_modal = this.share_modal.bind(this);\r\n        this.list_shared = this.list_shared.bind(this);\r\n        this.add_email = this.add_email.bind(this);\r\n        this.delete_email = this.delete_email.bind(this);\r\n        this.delete_email_modal = this.delete_email_modal.bind(this);\r\n        this.copy_clipboard = this.copy_clipboard.bind(this);\r\n\r\n        this.save_pin = this.save_pin.bind(this);\r\n        this.delete_pin = this.delete_pin.bind(this);\r\n        this.list_pins = this.list_pins.bind(this);\r\n        this.module_form = this.module_form.bind(this);\r\n        this.save_pin_order = this.save_pin_order.bind(this);\r\n        this.save_module = this.save_module.bind(this);\r\n\r\n        const appId = \"capstonear_app-xkqng\";\r\n        this.client = Stitch.hasAppClient(appId)\r\n            ? Stitch.getAppClient(appId)\r\n            : Stitch.initializeDefaultAppClient(appId);\r\n        const mongodb = this.client.getServiceClient(\r\n            RemoteMongoClient.factory,\r\n            \"mongodb-atlas\"\r\n        );\r\n        this.db = mongodb.db(\"APP\");\r\n\r\n        this.fetch_userinfo();\r\n    }\r\n\r\n    // Gets the module ID from the routing parameter and uses it to get the\r\n    // associated module and pins for that module.\r\n    // @return {Promise} Query to set state.module_info and state.pins\r\n    async fetch_userinfo() {\r\n        const query = {\r\n            _id: ObjectId(this.props.match.params.id),\r\n        };\r\n\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .findOne(query)\r\n            .then((res) => {\r\n                console.log(\"Module: \", res);\r\n                this.setState({ module_info: res });\r\n\r\n                // Pipeline to ensure that the order of the pins stays the same after the query\r\n                const pipeline = [\r\n                    { $match: { _id: { $in: res.pins } } },\r\n                    {\r\n                        $addFields: {\r\n                            __order: { $indexOfArray: [res.pins, \"$_id\"] },\r\n                        },\r\n                    },\r\n                    { $sort: { __order: 1 } },\r\n                ];\r\n\r\n                this.db\r\n                    .collection(\"PINS\")\r\n                    .aggregate(pipeline)\r\n                    .toArray()\r\n                    .then((res) => {\r\n                        console.log(\"Pins: \", res);\r\n                        this.setState({ pins: res });\r\n                    });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // copies textarea to clipboard and sets copy state\r\n    copy_clipboard() {\r\n        const e = this.textArea;\r\n        e.select();\r\n        document.execCommand(\"copy\");\r\n        this.setState({ copy: true });\r\n    }\r\n\r\n    // Sets state.modal to true\r\n    show_modal(id) {\r\n        this.setState({ modal: id });\r\n    }\r\n\r\n    // Sets state.modal2 to true\r\n    show_modal2(id) {\r\n        this.setState({ modal2: id });\r\n    }\r\n\r\n    // Sets state.modal to false\r\n    hide_modal() {\r\n        this.setState({ modal: null });\r\n    }\r\n\r\n    // Sets state.modal2 to false\r\n    hide_modal2() {\r\n        this.setState({ modal2: null });\r\n    }\r\n\r\n    // @return {JSX.Element} Modal to confirm deletion\r\n    delete_pin_modal() {\r\n        var modal_message;\r\n        if (this.state.idx < 0) modal_message = <p>Nothing to delete</p>;\r\n        else\r\n            modal_message = (\r\n                <p>\r\n                    Are you sure you want to delete{\" \"}\r\n                    <b>{this.state.pins[this.state.idx].title}</b>?\r\n                </p>\r\n            );\r\n\r\n        return (\r\n            <Modal\r\n                // size=\"sm\"\r\n                show={this.state.modal === \"delete\"}\r\n                onHide={(e) => {\r\n                    this.hide_modal();\r\n                }}\r\n                style={{\r\n                    marginTop: \"50px\",\r\n                }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm Deletion</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{modal_message}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            if (this.state.idx > -1)\r\n                                this.delete_pin(this.state.idx);\r\n                            this.hide_modal();\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.hide_modal();\r\n                        }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    // @return {JSX.Element} Modal to confirm deletion of email\r\n    delete_email_modal() {\r\n        var modal_message;\r\n        if (this.state.ind < 0) modal_message = <p>Nothing to delete</p>;\r\n        else\r\n            modal_message = (\r\n                <p>\r\n                    Are you sure you want to delete{\" \"}\r\n                    <b>{this.state.module_info.shared_with[this.state.ind]}</b>?\r\n                </p>\r\n            );\r\n\r\n        return (\r\n            <Modal\r\n                // size=\"sm\"\r\n                show={this.state.modal2 === \"delete_email\"}\r\n                onHide={(e) => {\r\n                    this.hide_modal2();\r\n                }}\r\n                style={{\r\n                    marginTop: \"50px\",\r\n                }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm Deletion</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{modal_message}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={(e) => {\r\n                            if (this.state.ind > -1)\r\n                                this.delete_email(this.state.ind);\r\n                            this.hide_modal2();\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.hide_modal2();\r\n                        }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    // This function adds a email to MODULES.shared_with and avoids duplicates\r\n    add_email() {\r\n        const query = { _id: this.state.module_info._id };\r\n        const update = {\r\n            $addToSet: { shared_with: this.state.email },\r\n        };\r\n        const options = { upsert: false, returnNewDocument: true };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .findOneAndUpdate(query, update, options)\r\n            .then((res) => {\r\n                var shared_with = res.shared_with;\r\n                this.setState({ shared_with: shared_with });\r\n                this.setState({ module_info: res });\r\n                console.log(\"Save response: \", res);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // This function will remove a email from MODULES.shared_with\r\n    // @param {number} ind - The index of the email to delete\r\n    delete_email(ind) {\r\n        const query = { _id: this.state.module_info._id };\r\n        const update = {\r\n            $pull: { shared_with: this.state.shared_with[ind] },\r\n        };\r\n        const options = { multi: false, returnNewDocument: true };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .findOneAndUpdate(query, update, options)\r\n            .then((res) => {\r\n                var shared_with = res.shared_with;\r\n                this.setState({ shared_with: shared_with, ind: -1 });\r\n                this.setState({ module_info: res });\r\n                console.log(\"Save response: \", res);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // Creates the list of emails in MODULES.shared_with\r\n    // @return {JSX.Element} The list of emails.\r\n    list_shared() {\r\n        return this.state.module_info.shared_with.map((module_info, ind) => {\r\n            return (\r\n                <div key={ind}>\r\n                    <Row form>\r\n                        <Col xs=\"8\">\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    plaintext\r\n                                    readOnly\r\n                                    type=\"text\"\r\n                                    value={\r\n                                        this.state.module_info.shared_with[ind]\r\n                                    }\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                variant=\"danger\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.setState({ ind: ind });\r\n                                    this.show_modal2(\"delete_email\");\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    {this.delete_email_modal()}\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    // Modal to display MODULE.shared_with emails to allow adding and deleting\r\n    share_modal() {\r\n        return (\r\n            <Modal\r\n                sz=\"lg\"\r\n                show={this.state.modal === \"share\"}\r\n                onHide={(event) => {\r\n                    this.hide_modal();\r\n                }}\r\n                style={{\r\n                    maxHeight: \"100vh\",\r\n                    marginTop: \"50px\",\r\n                }}\r\n            >\r\n                <Modal.Header closeButton>Shared With</Modal.Header>\r\n                <Modal.Body>\r\n                    <div\r\n                        style={{\r\n                            maxHeight: \"calc(100vh - 450px)\",\r\n                            overflowY: \"auto\",\r\n                            overflowX: \"hidden\",\r\n                        }}\r\n                    >\r\n                        {this.list_shared()}\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer\r\n                    style={{\r\n                        maxHeight: \"calc(100vh - 450px)\",\r\n                        overflowY: \"auto\",\r\n                        overflowX: \"hidden\",\r\n                    }}\r\n                >\r\n                    <Form\r\n                        style={{\r\n                            position: \"relative\",\r\n                            margin: \"auto\",\r\n                        }}\r\n                    >\r\n                        <Form.Group>\r\n                            <FormControl\r\n                                id=\"email\"\r\n                                type=\"email\"\r\n                                value={this.state.email}\r\n                                onChange={(e) => {\r\n                                    var email = this.state.email;\r\n                                    email = e.target.value;\r\n                                    this.setState({ email: email });\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                size=\"lg\"\r\n                                block\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    if (this.state.email !== \"\")\r\n                                        this.add_email();\r\n                                }}\r\n                            >\r\n                                Add\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                size=\"lg\"\r\n                                block\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.hide_modal();\r\n                                }}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                            <Form.Group\r\n                                style={{\r\n                                    marginTop: \"15px\",\r\n                                }}\r\n                            >\r\n                                <textarea\r\n                                    ref={(textarea) =>\r\n                                        (this.textArea = textarea)\r\n                                    }\r\n                                    plaintext\r\n                                    readOnly\r\n                                    value={this.state.link}\r\n                                    placeholder=\"Sharing This Module Requires They Be Set To Public!\"\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                        height: \"80px\",\r\n                                    }}\r\n                                />\r\n                                <Button\r\n                                    variant=\"secondary\"\r\n                                    size=\"sm\"\r\n                                    block\r\n                                    onClick={(event) => {\r\n                                        event.preventDefault();\r\n                                        this.setState({\r\n                                            link:\r\n                                                window.location.origin +\r\n                                                \"/ar-app/#/module/\" +\r\n                                                this.state.module_info._id,\r\n                                        });\r\n                                        this.copy_clipboard();\r\n                                    }}\r\n                                >\r\n                                    Copy Link\r\n                                </Button>\r\n                                {this.state.copy ? (\r\n                                    <div style={{ color: \"green\" }}>\r\n                                        Copied to clipboard!\r\n                                    </div>\r\n                                ) : null}\r\n                            </Form.Group>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    // @return {JSX.Element} Form to fill out module title, description, and\r\n    // public/private status\r\n    module_form() {\r\n        return (\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                        type=\"title\"\r\n                        id=\"title\"\r\n                        value={this.state.module_info.title}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.title = e.target.value;\r\n                            this.setState({ module_info: module_info });\r\n                        }}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"5\"\r\n                        id=\"description\"\r\n                        value={this.state.module_info.description}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.description = e.target.value;\r\n                            this.setState({ module_info: module_info });\r\n                        }}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        marginBottom: \"0\",\r\n                    }}\r\n                >\r\n                    <Form.Check\r\n                        inline\r\n                        type=\"radio\"\r\n                        label=\"Public\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"true\"\r\n                        checked={this.state.module_info.public}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.public = true;\r\n                            this.setState({\r\n                                module_info: module_info,\r\n                            });\r\n                        }}\r\n                    />\r\n                    <Form.Check\r\n                        inline\r\n                        type=\"radio\"\r\n                        label=\"Private\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"false\"\r\n                        checked={!this.state.module_info.public}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.public = false;\r\n                            this.setState({\r\n                                module_info: module_info,\r\n                            });\r\n                        }}\r\n                    />\r\n                </Form.Group>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    // Creates the list of pins based on state.pins. Uses the react-movable\r\n    // library to make the list of pins draggable.\r\n    // @return {JSX.Element} The list of pins.\r\n    list_pins() {\r\n        return (\r\n            <List\r\n                values={this.state.pins}\r\n                onChange={({ oldIndex, newIndex }) => {\r\n                    var pins = this.state.pins;\r\n                    pins = arrayMove(pins, oldIndex, newIndex);\r\n                    this.setState({ pins: pins });\r\n                }}\r\n                renderList={({ children, props }) => (\r\n                    <ol\r\n                        {...props}\r\n                        style={{\r\n                            display: \"grid\",\r\n                            justifyContent: \"center\",\r\n                            paddingLeft: \"0px\",\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </ol>\r\n                )}\r\n                renderItem={({ index, props }) => (\r\n                    <li {...props}>\r\n                        <Row style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\r\n                            <Col\r\n                                xs=\"4\"\r\n                                style={{\r\n                                    marginTop: \"auto\",\r\n                                    marginBottom: \"auto\",\r\n                                }}\r\n                            >\r\n                                {this.state.pins[index].title}\r\n                            </Col>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"link\"\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        this.setState({ idx: index });\r\n                                        this.show_modal(\"edit_pin_\" + index);\r\n                                    }}\r\n                                >\r\n                                    Edit\r\n                                </Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"danger\"\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        this.setState({ idx: index });\r\n                                        this.show_modal(\"delete\");\r\n                                    }}\r\n                                >\r\n                                    Delete\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <EditForm\r\n                            pin={this.state.pins[index]}\r\n                            show={this.state.modal === \"edit_pin_\" + index}\r\n                            save={(pin) => {\r\n                                this.save_pin(pin);\r\n                            }}\r\n                            cancel={() => this.hide_modal()}\r\n                        />\r\n                    </li>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n\r\n    save_pin(pin) {\r\n        const query = { _id: pin._id };\r\n        const update = {\r\n            $set: pin,\r\n        };\r\n        // update a pin on the database\r\n        this.db\r\n            .collection(\"PINS\")\r\n            .findOneAndUpdate(query, update)\r\n            .then((res) => {\r\n                console.log(\"Pin update response: \", res);\r\n\r\n                // Update pin list\r\n                var pins = this.state.pins;\r\n                pins[this.state.idx] = pin;\r\n                this.setState({ pins: pins });\r\n                this.hide_modal();\r\n            });\r\n    }\r\n\r\n    // This function will remove a pin from the DB and state.pins\r\n    // @param {number} idx - The index of the pin to delete\r\n    delete_pin(idx) {\r\n        const query = { _id: this.state.pins[idx]._id };\r\n        this.db\r\n            .collection(\"PINS\")\r\n            .deleteOne(query)\r\n            .then((res) => {\r\n                console.log(\"Delete response: \", res);\r\n\r\n                // Update pin list\r\n                var pins = this.state.pins;\r\n                pins.splice(idx, 1);\r\n                this.setState({ pins: pins, idx: -1 });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // Converts state.pins to a list of ObjectIDs, then updates\r\n    // state.module_info.pins based on the new list\r\n    save_pin_order() {\r\n        var module = this.state.module_info;\r\n        const pin_ids = this.state.pins.map((pin) => {\r\n            return pin._id;\r\n        });\r\n        module.pins = pin_ids;\r\n        this.setState({ module_info: module });\r\n    }\r\n\r\n    // Saves the module to the DB\r\n    save_module() {\r\n        this.save_pin_order();\r\n        const query = { _id: this.state.module_info._id };\r\n        const update = {\r\n            $set: this.state.module_info,\r\n        };\r\n        const options = { upsert: false };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .updateOne(query, update, options)\r\n            .then((res) => {\r\n                console.log(\"Save response: \", res);\r\n\r\n                // Go back to Manage Module view\r\n                window.location.assign(\"#/modules/edit/\");\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // @return {JSX.Element} The EditModule componenet\r\n    render() {\r\n        return (\r\n            <Container\r\n                style={{\r\n                    marginTop: \"10px\",\r\n                    maxWidth: \"540px\",\r\n                    height:\"100vh\",\r\n\r\n                }}\r\n            >\r\n                <Form style={{ height: \"100%\" }}>\r\n                    <Tabs\r\n                        defaultActiveKey=\"Module Info\"\r\n                        transition={false}\r\n                        style={{\r\n                            textAlign: \"center\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Tab eventKey=\"Module Info\" title=\"Module Info\">\r\n                            {this.module_form()}\r\n                                <Form.Group>\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    size=\"lg\"\r\n                                    block\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        var id = this.state.module_info._id;\r\n                                        window.location.assign(\r\n                                            \"#/module/\" + id + \"/pins/edit\"\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    Pin Map\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"secondary\"\r\n                                    size=\"lg\"\r\n                                    block\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        this.save_module();\r\n                                    }}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            size=\"lg\"\r\n                            block\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                this.show_modal(\"share\");\r\n                            }}\r\n                        >\r\n                            Share\r\n                        </Button>\r\n                    </Form.Group>\r\n                        </Tab>\r\n                        <Tab\r\n                            eventKey=\"Pins\"\r\n                            title=\"Pins\"\r\n                            style={{ height: \"100%\" }}\r\n                        >\r\n                            {this.list_pins()}\r\n                        </Tab>\r\n                    </Tabs>\r\n\r\n                    <Form.Group>\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            size=\"lg\"\r\n                            block\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                var id = this.state.module_info._id;\r\n                                window.location.assign(\r\n                                    \"#/module/\" + id + \"/pins/edit\"\r\n                                );\r\n                            }}\r\n                        >\r\n                            Pin Map\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"secondary\"\r\n                            size=\"lg\"\r\n                            block\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                this.save_module();\r\n                            }}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            size=\"lg\"\r\n                            block\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                this.show_modal(\"share\");\r\n                            }}\r\n                        >\r\n                            Share\r\n                        </Button>\r\n                    </Form.Group>\r\n\r\n                </Form>\r\n                {this.delete_pin_modal()}\r\n                {this.share_modal()}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Tab, Tabs, CardDeck, Form, Button } from \"react-bootstrap\";\r\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport { waitForElementToBeRemoved } from \"@testing-library/react\";\r\n//import {AwsServiceClient, AwsRequest} from 'mongodb-stitch-browser-services-aws'\r\n\r\nexport default class ViewModules extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modules: [],\r\n            my_modules: [],\r\n            shared_modules: [],\r\n            img1: \"\",\r\n            stitch_res: [],\r\n            user: {\r\n                _id: '',\r\n                user_id: '',\r\n                accessed_links: [],\r\n            },\r\n            accessed_modules: [],\r\n        };\r\n        \r\n\r\n        //refs\r\n        this.goto_module_id = React.createRef();\r\n\r\n        this.add_module_cards = this.add_module_cards.bind(this);\r\n        this.fetch_modules = this.fetch_modules.bind(this);\r\n        this.goto_module = this.goto_module.bind(this);\r\n\r\n        const appId = \"capstonear_app-xkqng\";\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId);\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n            );\r\n            //select the db in our mongdb atlas cluster\r\n            this.db = mongodb.db(\"APP\");\r\n        } else {\r\n            this.client = Stitch.initializeAppClient(appId);\r\n            //console.log(\"client init\")\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetch_modules();\r\n\r\n        console.log(this.state);\r\n    }\r\n\r\n    async fetch_modules() {\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find({\r\n                owner_id: this.client.auth.authInfo.userId,\r\n            })\r\n            .asArray()\r\n            .then((my_modules) => {\r\n                this.setState({\r\n                    my_modules: my_modules,\r\n                    modules: {\r\n                        0: my_modules,\r\n                        1: this.state.shared_modules,\r\n                        2: this.state.accessed_modules,\r\n                    },\r\n                });\r\n\r\n                console.log(this.state.my_modules);\r\n            });\r\n\r\n        //fetch shared modules\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find({\r\n                shared_with: this.client.auth.authInfo.userProfile.data.email,\r\n            })\r\n            .asArray()\r\n            .then((shared_modules) => {\r\n                this.setState({\r\n                    shared_modules: shared_modules,\r\n                    modules: {\r\n                        0: this.state.my_modules,\r\n                        1: shared_modules,\r\n                        2: this.state.accessed_modules,\r\n                    },\r\n                });\r\n                console.log(shared_modules);\r\n            });\r\n        console.log(this.state.modules);\r\n\r\n        // fetch user collection, create new if not found\r\n        const query = {\r\n            user_id: this.client.auth.authInfo.userId,\r\n        };\r\n        const update = {\r\n            $setOnInsert: {accessed_links: [],}\r\n        };\r\n        const options = {\r\n            returnNewDocument: true,\r\n            upsert: true,\r\n        };\r\n        await this.db\r\n            .collection(\"USERS\")\r\n            .findOneAndUpdate(query, update, options)\r\n            .then((res) => {\r\n                console.log(\"User: \", res);\r\n                this.setState({ user: res });\r\n            })\r\n            .catch(console.error);\r\n\r\n        // fetch accessed links and set accessed modules\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find({\r\n                shared_with: { $ne: this.client.auth.authInfo.userProfile.data.email},\r\n                _id: { $in: [...this.state.user.accessed_links]},\r\n                public: true,\r\n            })\r\n            .asArray()\r\n            .then((accessed_modules) => {\r\n                this.setState({\r\n                    accessed_modules: accessed_modules,\r\n                    modules: {\r\n                        0: this.state.my_modules,\r\n                        1: this.state.shared_modules,\r\n                        2: accessed_modules,\r\n                    },\r\n                });\r\n                console.log(\"Accessed: \",accessed_modules);\r\n            });\r\n        console.log(this.state.accessed_modules);\r\n    }\r\n\r\n    goto_module(id) {\r\n        window.location.assign(\"#/module/\" + id);\r\n    }\r\n\r\n    add_module_cards(type) {\r\n        \r\n        if (this.state.modules.length === 0) return;\r\n\r\n        const mds = this.state.modules[type].map(function (module, idx) {\r\n            \r\n            return (\r\n                <div className=\"col-md-6 col-lg-4 \" key={idx}>\r\n                    <Card\r\n                        className=\"h-100\"\r\n                        style={{\r\n                            display: \"fixed\",\r\n\r\n                            Width: \"25rem\",\r\n                            margin: \"0.25rem\",\r\n                            justifyContent: \"center\",\r\n                            textAlign: \"center\",\r\n                        }}\r\n                    >\r\n                        <Card.Body>\r\n                            <Card.Img\r\n                                variant=\"top\"\r\n                                src={\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + module.pins[0] + \".jpeg?versionid=latest&date=\" + Date.now()}\r\n                                onError={(e)=>{e.target.onerror = null; e.target.src=\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/ar.png\"}}\r\n                            \r\n                            />\r\n                            <Card.Title>{module.title}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">\r\n                                by {module.owner_name} ({module.owner_email})\r\n                            </Card.Subtitle>\r\n                            <Card.Text>{module.description}</Card.Text>\r\n                            <div\r\n                                className=\"btn-toolbar\"\r\n                                style={{\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                            >\r\n                                <div className=\"btn-group mr-1\">\r\n                                    <button\r\n                                        className=\"btn btn-primary\"\r\n                                        onClick={() =>\r\n                                            window.location.assign(\r\n                                                \"#/module/\" + module._id\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        View Details\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div className=\"btn-group mr-1\">\r\n                                    <button className=\"btn btn-primary\"\r\n                                        onClick={() =>\r\n                                            window.location.assign(\r\n                                                \"#/module/\" + module._id+\"/pins\"\r\n                                        )\r\n                                    }>\r\n                                        Start Module\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        });\r\n        return (\r\n            <div\r\n                style={{\r\n                    top: \"50px\",\r\n                    bottom: \"0px\",\r\n                    position: \"relative\",\r\n                }}\r\n                className=\"container\"\r\n            >\r\n                <CardDeck\r\n                    style={{\r\n                        top: \"50px\",\r\n                    }}\r\n                >\r\n                    {mds}\r\n                </CardDeck>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: \"0px\",\r\n                    bottom: \"0px\",\r\n                    width: \"100%\",\r\n                    overflowY: \"scroll\",\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        top: \"10px\",\r\n                        bottom: '0px',\r\n                        position: \"relative\",\r\n                        height: \"100vh\",\r\n                        marginLeft: \"auto\",\r\n                        marginRight: \"auto\",\r\n                    }}\r\n                >\r\n                    <Tabs\r\n                        defaultActiveKey=\"My Modules\"\r\n                        transition={false}\r\n                        style={{\r\n                            textAlign: \"center\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Tab eventKey=\"My Modules\" title=\"My Modules\">\r\n                            {this.add_module_cards(0)}\r\n                        </Tab>\r\n\r\n                        <Tab eventKey=\"Shared Modules\" title=\"Shared with me\">\r\n                            <div>\r\n                                {this.add_module_cards(1)}\r\n                            </div>\r\n                            <div>\r\n                                {this.add_module_cards(2)}\r\n                            </div>\r\n                        </Tab>\r\n\r\n                        <Tab eventKey=\"Go To\" title=\"Go To\">\r\n                            <Form>\r\n                                <Form.Group controlId=\"formModuleId\">\r\n                                    <Form.Label>Module ID:</Form.Label>\r\n                                    <Form.Control\r\n                                        required\r\n                                        type=\"string\"\r\n                                        placeholder=\"Enter module id\"\r\n                                        ref={this.goto_module_id}\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    onClick={() => {\r\n                                        window.location.assign(\r\n                                            \"#/module/\" +\r\n                                                this.goto_module_id.current\r\n                                                    .value\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    View Module\r\n                                </Button>\r\n                            </Form>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\r\n\r\nexport default class ManageModules extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modules: [],\r\n            modal: false,\r\n            idx: -1,\r\n        };\r\n\r\n        this.fetch_userinfo = this.fetch_userinfo.bind(this);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.modal_message = this.modal_message.bind(this);\r\n        this.list_modules = this.list_modules.bind(this);\r\n        this.delete_module = this.delete_module.bind(this);\r\n        this.add_module = this.add_module.bind(this);\r\n        this.save_modules = this.save_modules.bind(this);\r\n\r\n        // Setting up DB with Stitch\r\n        const appId = \"capstonear_app-xkqng\";\r\n        this.client = Stitch.hasAppClient(appId)\r\n            ? Stitch.getAppClient(appId)\r\n            : Stitch.initializeDefaultAppClient(appId);\r\n        const mongodb = this.client.getServiceClient(\r\n            RemoteMongoClient.factory,\r\n            \"mongodb-atlas\"\r\n        );\r\n        this.db = mongodb.db(\"APP\");\r\n\r\n        this.fetch_userinfo();\r\n    }\r\n\r\n    async fetch_userinfo() {\r\n        const query = {\r\n            owner_id: this.client.auth.authInfo.userId,\r\n        };\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find(query)\r\n            .toArray()\r\n            .then((res) => {\r\n                console.log(\"Modules loaded: \", res);\r\n\r\n                this.setState({ modules: res });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    toggle() {\r\n        var modal = !this.state.modal;\r\n        this.setState({ modal: modal });\r\n    }\r\n\r\n    modal_message() {\r\n        if (this.state.idx < 0) return <p>Nothing to delete</p>;\r\n        else\r\n            return (\r\n                <p>\r\n                    Are you sure you want to delete{\" \"}\r\n                    <b>{this.state.modules[this.state.idx].title}</b>?\r\n                </p>\r\n            );\r\n    }\r\n\r\n    list_modules() {\r\n        return this.state.modules.map((module, idx) => {\r\n            return (\r\n                <div key={idx} className=\"pt-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 offset-sm-2 col-sm-4\">\r\n                            <input\r\n                                type=\"text\"\r\n                                value={this.state.modules[idx].title}\r\n                                onChange={(event) => {\r\n                                    event.preventDefault();\r\n\r\n                                    var modules = [...this.state.modules];\r\n                                    modules[idx].title = event.target.value;\r\n                                    this.setState({ modules });\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6 col-sm-4\">\r\n                            <button\r\n                                className=\"btn btn-link float-right\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    var id = this.state.modules[idx]._id;\r\n                                    window.location.assign(\r\n                                        \"#/module/\" + id + \"/edit\"\r\n                                    );\r\n                                }}\r\n                            >\r\n                                Edit\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger float-right\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.setState({ idx: idx });\r\n                                    this.toggle();\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    delete_module(idx) {\r\n        const query = { _id: this.state.modules[idx]._id };\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .deleteOne(query)\r\n            .then((res) => {\r\n                console.log(\"Delete response: \", res);\r\n\r\n                // Update module list\r\n                var modules = [...this.state.modules];\r\n                modules.splice(idx, 1);\r\n                this.setState({ modules: modules, idx: -1 });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    add_module() {\r\n        const query = {\r\n            title: \"title\",\r\n            owner_id: this.client.auth.authInfo.userId,\r\n            owner_name: this.client.auth.authInfo.userProfile.name,\r\n            owner_email: this.client.auth.authInfo.userProfile.email,\r\n            description: \"\",\r\n            pins: [],\r\n            shared_with: [],\r\n            public: false,\r\n        };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .insertOne(query)\r\n            .then((res) => {\r\n                console.log(\"Add response: \", res);\r\n\r\n                // Navigate to Edit Module view\r\n                var id = res.insertedId;\r\n                window.location.assign(\"#/module/\" + id + \"/edit\");\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    save_modules() {\r\n        Promise.all(\r\n            this.state.modules.map((module) => {\r\n                const query = { _id: module._id };\r\n                const update = {\r\n                    $set: {\r\n                        title: module.title,\r\n                    },\r\n                };\r\n                const options = { upsert: false };\r\n\r\n                return this.db\r\n                    .collection(\"MODULES\")\r\n                    .updateOne(query, update, options);\r\n            })\r\n        )\r\n            .then((res) => {\r\n                console.log(\"Save response: \", res);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form\r\n                    style={{ height: \"100%\" }}\r\n                    onSubmit={(event) => {\r\n                        event.preventDefault();\r\n                        this.save_modules();\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            height: \"70vh\",\r\n                            overflowY: \"scroll\",\r\n                            overflowX: \"hidden\"\r\n                        }}\r\n                    >\r\n                        {this.list_modules()}\r\n                    </div>\r\n\r\n                    <div style={{ marginTop: \"10px\" }}>\r\n                        <button\r\n                            className=\"btn btn-primary btn-lg btn-block\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                this.add_module();\r\n                            }}\r\n                        >\r\n                            Add Module\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-secondary btn-lg btn-block\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                this.save_modules();\r\n                                window.location.assign(\"#/\");\r\n                            }}\r\n                        >\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <Modal\r\n                    show={this.state.modal}\r\n                    toggle={(event) => {\r\n                        event.preventDefault();\r\n                        this.toggle();\r\n                    }}\r\n                    style={{\r\n                        marginTop: \"50px\",\r\n                    }}\r\n                >\r\n                    <Modal.Header\r\n                        toggle={(event) => {\r\n                            event.preventDefault();\r\n                            this.toggle();\r\n                        }}\r\n                    >\r\n                        Confirm Deletion\r\n                    </Modal.Header>\r\n                    <Modal.Body>{this.modal_message()}</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                if (this.state.idx > -1)\r\n                                    this.delete_module(this.state.idx);\r\n                                this.toggle();\r\n                            }}\r\n                        >\r\n                            Delete\r\n                        </button>{\" \"}\r\n                        <button\r\n                            className=\"btn btn-secondary\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                this.toggle();\r\n                            }}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Map, Marker, Popup, TileLayer, Polyline } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L from 'leaflet'\r\nimport { Stitch, RemoteMongoClient, GoogleRedirectCredential } from \"mongodb-stitch-browser-sdk\"\r\nimport { ObjectId } from 'mongodb'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowAltCircleRight, faArrowAltCircleLeft, faMapMarkerAlt, faStreetView } from '@fortawesome/free-solid-svg-icons'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\n\r\nvar myIcon = new L.divIcon({\r\n  className: 'my-div-icon',\r\n  html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png\"/>'\r\n})\r\n\r\nconst floatStyle = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"40px\",\r\n  backgroundColor: \"#0C9\",\r\n  color: \"#FFF\",\r\n  borderRadius: \"50px\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500,\r\n};\r\nconst nextButtonStyle = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"120px\",\r\n  backgroundColor: \"#74E4E9\",\r\n  color: \"#000000\",\r\n  borderRadius: \"40px\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500,\r\n};\r\nconst previousButtonStyle = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"240px\",\r\n  backgroundColor: \"#74E4E9\",\r\n  color: \"#000000\",\r\n  borderRadius: \"40px\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500,\r\n};\r\nconst currentButtonStyle = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"180px\",\r\n  backgroundColor: \"#0C9\",\r\n  color: \"#FFF\",\r\n  borderRadius: \"50px\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500,\r\n};\r\n\r\nclass ViewPinOnMap extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      currentLocation: { lat: 45.51, lng: -122.68 },\r\n      zoom: 13,\r\n      userLocation: [],\r\n      userLocationFound: false,\r\n      username: \"\",\r\n      useremail: \"\",\r\n      userID: \"\",\r\n      stitch_res: [],\r\n      pin: [],\r\n      pins_line: [],\r\n      pins_array: [],\r\n      current_pin_index: 0,\r\n    }\r\n    this.getUserPosition = this.getUserPosition.bind(this)\r\n    this.drawpins = this.drawpins.bind(this)\r\n    this.drawlines = this.drawlines.bind(this)\r\n    this.openGoogle = this.openGoogle.bind(this)\r\n    this.centerMap = this.centerMap.bind(this)\r\n    this.nextPin = this.nextPin.bind(this)\r\n    this.previousPin = this.previousPin.bind(this)\r\n    this.currentPin = this.currentPin.bind(this)\r\n    this.bounds = undefined;\r\n\r\n    const appId = \"capstonear_app-xkqng\"\r\n    this.client = Stitch.hasAppClient(appId)\r\n      ? Stitch.getAppClient(appId)\r\n      : Stitch.initializeDefaultAppClient(appId)\r\n    const mongodb = this.client.getServiceClient(\r\n      RemoteMongoClient.factory,\r\n      \"mongodb-atlas\"\r\n    );\r\n    this.db = mongodb.db(\"APP\");\r\n  }\r\n\r\n\r\n  getUserPosition() {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.setState({ userLocation: [position.coords.latitude, position.coords.longitude], userLocationFound: true, currentLocation: [position.coords.latitude, position.coords.longitude] })\r\n\r\n      //console.log(this.state.userLocation)\r\n    })\r\n\r\n  }\r\n\r\n  boundingRect(coords) {\r\n    return coords\r\n      .reduce((acc, curr) => {\r\n        const [lat, lng] = curr;\r\n        acc[0][0] = lat < acc[0][0] ? lat : acc[0][0];\r\n        acc[0][1] = lng < acc[0][1] ? lng : acc[0][1];\r\n        acc[1][0] = lat > acc[1][0] ? lat : acc[1][0];\r\n        acc[1][1] = lng > acc[1][1] ? lng : acc[1][1];\r\n        return acc;\r\n      }, [[90, 180], [-90, -180]]);\r\n  }\r\n\r\n  AddPaddingToRect(rect, percent = 0.10) {\r\n    const [latMin, lngMin] = rect[0];\r\n    const [latMax, lngMax] = rect[1];\r\n    const lngPad = (lngMax - lngMin) * percent;\r\n    const latPad = (latMax - latMin) * percent;\r\n    return [\r\n      [latMin - latPad, lngMin - lngPad],\r\n      [latMax + latPad, lngMax + lngPad]\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserPosition()\r\n    this.drawpins()\r\n\r\n    this.interval = setInterval(this.getUserPosition, 10000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n\r\n  async drawpins() {\r\n    if (!this.client.auth.isLoggedIn) {\r\n      return\r\n    }\r\n    const query = { _id: ObjectId(this.props.match.params.id) };\r\n    await this.db.collection(\"MODULES\").findOne(query)\r\n      .then((stitch_res) => {\r\n        this.setState({ stitch_res })\r\n        const pipeline = [\r\n          { $match: { _id: { $in: stitch_res.pins } } },\r\n          {\r\n            $addFields: {\r\n              __order: { $indexOfArray: [stitch_res.pins, \"$_id\"] },\r\n            },\r\n          },\r\n          { $sort: { __order: 1 } },\r\n        ];\r\n        this.db.collection(\"PINS\").aggregate(pipeline)\r\n          .toArray()\r\n          .then((res) => {\r\n            this.bounds = this.AddPaddingToRect(\r\n              this.boundingRect([...res.map(elem => elem.coords), this.state.currentLocation]));\r\n            this.setState({ pins_array: res })\r\n          });\r\n\r\n      }\r\n      )\r\n  }\r\n  drawlines() {\r\n\r\n    if (this.state.pins_line.length > 0) {\r\n      return (\r\n        <Polyline positions={this.state.pins_line} color={'red'}>\r\n        </Polyline>\r\n      )\r\n    }\r\n    return\r\n  }\r\n  openGoogle(coords) {\r\n    var url = \"http://maps.google.com?q=\" + coords[0] + \",\" + coords[1]\r\n    var win = window.open(url, '_blank');\r\n    return\r\n  }\r\n  centerMap(obj, coords) {\r\n    this.getUserPosition();\r\n\r\n    const map = this.refs.map.leafletElement\r\n    map.doubleClickZoom.disable();\r\n    setTimeout(function () {\r\n      map.doubleClickZoom.enable();\r\n    }, 1000);\r\n    map.setView(coords, 13)\r\n    const pin = this.refs.userloc.leafletElement\r\n    setTimeout(function(){\r\n      pin.openPopup()\r\n    },400)\r\n  }\r\n  nextPin() {\r\n    if(this.state.pins_array.length>0)\r\n    {\r\n      const map = this.refs.map.leafletElement\r\n      map.doubleClickZoom.disable();\r\n      setTimeout(function () {\r\n        map.doubleClickZoom.enable();\r\n      }, 1000);\r\n      var temp = this.state.current_pin_index + 1\r\n      if (temp >= this.state.pins_array.length - 1) {\r\n        temp = this.state.pins_array.length - 1\r\n      }\r\n      map.setView(this.state.pins_array[temp].coords)\r\n      const pin = this.refs[temp].leafletElement\r\n      setTimeout(function(){\r\n        pin.openPopup()\r\n      },400)\r\n      this.setState({ current_pin_index: temp })\r\n    }\r\n  }\r\n  previousPin() {\r\n    if(this.state.pins_array.length>0)\r\n    {\r\n      const map = this.refs.map.leafletElement\r\n      map.doubleClickZoom.disable();\r\n      setTimeout(function () {\r\n        map.doubleClickZoom.enable();\r\n      }, 1000);\r\n      var temp = this.state.current_pin_index - 1\r\n      if (temp <= 0) {\r\n        temp = 0\r\n      }\r\n      map.setView(this.state.pins_array[temp].coords)\r\n      const pin = this.refs[temp].leafletElement\r\n      setTimeout(function(){\r\n        pin.openPopup()\r\n      },400)\r\n      this.setState({ current_pin_index: temp })\r\n    }\r\n  }\r\n\r\n  currentPin() {\r\n    if(this.state.pins_array.length>0)\r\n    {\r\n      const map = this.refs.map.leafletElement\r\n      map.doubleClickZoom.disable();\r\n      setTimeout(function () {\r\n        map.doubleClickZoom.enable();\r\n      }, 1000);\r\n      map.setView(this.state.pins_array[this.state.current_pin_index].coords)\r\n      const pin = this.refs[this.state.current_pin_index].leafletElement\r\n      setTimeout(function(){\r\n        pin.openPopup()\r\n      },400)\r\n    }\r\n  }\r\n  render() {\r\n    const userLocation = this.state.userLocationFound ? (\r\n      <Marker ref='userloc' position={this.state.userLocation} icon={myIcon} >\r\n        <Popup>You are here</Popup>\r\n      </Marker>\r\n    ) : null\r\n\r\n    return (\r\n      <div>\r\n        <Map ref='map' center={this.state.currentLocation} zoom={13} maxZoom={18}>\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n          />\r\n          {userLocation}\r\n\r\n          {this.state.pins_array.map((info, idx) => {\r\n            var marker_icon;\r\n            if (idx == this.state.current_pin_index) {\r\n              marker_icon = new L.divIcon({\r\n                className: 'my-div-icon',\r\n                html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-yellow.png\"/>'\r\n              })\r\n            }\r\n            else {\r\n              marker_icon = new L.divIcon({\r\n                className: 'my-div-icon',\r\n                html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png\"/>'\r\n              })\r\n            }\r\n            return <Marker\r\n              key={idx} position={info.coords}\r\n              icon={marker_icon}\r\n              ref={idx}  >\r\n              <Popup >\r\n                <h1>{info.title}</h1>\r\n                <p>{info.description}</p>\r\n                <p>{info.hint}</p>\r\n                <p>{info.destination}</p>\r\n                <img style={{\r\n                  height: '100px',\r\n                  width: '150px'\r\n                }} src={\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + info._id.toString() + \".jpeg?versionid=latest&date=\" + Date.now()}\r\n                  onError={(e)=>{e.target.onerror = null; e.target.src=\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/ar.png\"}}\r\n                ></img>\r\n                \r\n                <button onClick={() => this.openGoogle(info.coords)} >Open Google Map</button>\r\n              </Popup>\r\n            </Marker>\r\n\r\n          })}\r\n          <button style={floatStyle} onClick={() => this.centerMap(this, this.state.currentLocation)} >\r\n            <div><FontAwesomeIcon icon={faStreetView} size=\"3x\" /></div>\r\n          </button>\r\n          <ButtonGroup>\r\n            <button style={nextButtonStyle} onClick={() => this.nextPin()}  >\r\n              <div><FontAwesomeIcon icon={faArrowAltCircleRight} size=\"3x\" /></div>\r\n            </button>\r\n            <button style={previousButtonStyle} onClick={() => this.previousPin()} >\r\n              <div><FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"3x\" /></div>\r\n            </button>\r\n            <button style={currentButtonStyle} onClick={() => this.currentPin()} >\r\n              <div><FontAwesomeIcon icon={faMapMarkerAlt} size=\"3x\" /></div>\r\n            </button>\r\n          </ButtonGroup>\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewPinOnMap;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport MapView from \"./components/MapView.js\";\r\nimport Menu from \"./components/Menu/Menu.js\";\r\nimport { Stitch } from \"mongodb-stitch-browser-sdk\";\r\nimport Login from \"./components/Login\";\r\nimport DropPin from \"./components/DropPin\";\r\nimport NavMenu from \"./components/Menu/NavMenu\";\r\nimport Module from \"./components/Module\";\r\nimport EditModule from \"./components/EditModule\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport ViewModules from \"./components/ViewModules\";\r\nimport ManageModules from \"./components/ManageModules\";\r\nimport ViewPinOnMap from \"./components/ViewPinOnMap\";\r\n\r\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const appId = \"capstonear_app-xkqng\";\r\n        this.client = Stitch.hasAppClient(appId)\r\n            ? Stitch.getAppClient(appId)\r\n            : Stitch.initializeDefaultAppClient(appId);\r\n\r\n        if (this.client.auth.hasRedirectResult()) {\r\n            console.log(\"has results\");\r\n\r\n            this.client.auth.handleRedirectResult().then((user) => {\r\n                window.location.assign(\"/\");\r\n            });\r\n        } else {\r\n            //window.location.replace('#/login')\r\n        }\r\n        this.state = {\r\n            isLoggedIn: false,\r\n        };\r\n\r\n        //refs\r\n\r\n        this.center_container = React.createRef();\r\n\r\n        this.NavMenu = this.NavMenu.bind(this);\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    handleStitchClient() {\r\n        this.setState({\r\n            stitchClient: this.client,\r\n            userProfile: this.client.auth.userProfile,\r\n            isLoggedIn: true,\r\n        });\r\n    }\r\n\r\n    Home = () => {\r\n        if (this.client.auth.isLoggedIn) {\r\n            return (\r\n                <div>\r\n                    <MapView />\r\n                </div>\r\n            );\r\n        } else {\r\n            return <Login />;\r\n        }\r\n    };\r\n\r\n    NavMenu = () => {\r\n        if (this.client.auth.isLoggedIn) {\r\n            return <NavMenu center_container={this.center_container} />;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter basename=\"/\">\r\n                <div>\r\n                    <Navbar\r\n                        className=\"navbar bg-dark navbar-dark\"\r\n                        style={{\r\n                            position: \"fixed\",\r\n                            width: \"100%\",\r\n                            height: \"50px\",\r\n                            zIndex: 1500,\r\n                        }}\r\n                    >\r\n                        <Navbar.Brand href=\"#/\">Context AR</Navbar.Brand>\r\n                    </Navbar>\r\n                    {this.NavMenu()}\r\n                </div>\r\n\r\n                <div\r\n                    ref={this.center_container}\r\n                    className=\"center_container\"\r\n                    style={{\r\n                        position: \"fixed\",\r\n                        top: \"50px\",\r\n                        bottom: \"0\",\r\n                        width: \"100%\",\r\n                        height: \"calc(100% - 50px)\",\r\n                    }}\r\n                >\r\n                    <Switch>\r\n                        <Route exact path=\"/menu\" component={Menu} />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/modules/edit\"\r\n                            component={ManageModules}\r\n                        />\r\n                        <Route exact path=\"/modules\" component={ViewModules} />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/module/:id/pins/edit\"\r\n                            component={DropPin}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/module/:id/pins\"\r\n                            component={ViewPinOnMap}\r\n                        />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/module/:id/edit\"\r\n                            component={EditModule}\r\n                        />\r\n                        <Route path=\"/module/:id\" component={Module} />\r\n\r\n                        <Route exact path=\"/\">\r\n                            {this.Home}\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}