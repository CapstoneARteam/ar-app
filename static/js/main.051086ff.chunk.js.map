{"version":3,"sources":["../node_modules/require_optional sync","components/DropPin.js","components/MapView.js","components/Menu/Menu.js","components/Login.js","components/Menu/NavMenu.js","components/Module.js","components/EditModule.js","components/ViewModules.js","components/ManageModules.js","components/ViewPinOnMap.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","appId","client","Stitch","hasAppClient","getAppClient","initializeDefaultAppClient","db","getServiceClient","RemoteMongoClient","factory","globalPosition","floatStyle","position","width","height","bottom","right","backgroundColor","color","borderRadius","textAlign","boxShadow","zIndex","OpenFile","props","console","log","base64data","type","multiple","onChange","target","files","fileReader","FileReader","readAsDataURL","onloadend","setbase64data","result","HandleFileChange","style","src","EditForm","useState","title","description","hint","destination","defaultValues","setDefaultValues","centered","show","Header","Title","Body","className","htmlFor","required","defaultValue","Footer","onClick","cancel","document","getElementById","value","query","_id","objectID","update","$set","collection","findOneAndUpdate","then","PinMarker","modalShow","setModalShow","key","lat","lng","AddpinForm","onHide","insertOne","owner_id","auth","authInfo","userId","audio","video","coords","res","basestring","replace","fileBuffer","Buffer","binaryImageData","BSON","Binary","Uint8Array","aws","AwsServiceClient","args","ACL","Bucket","ContentType","Key","ContentEncoding","request","AwsRequest","Builder","withService","withAction","withRegion","withArgs","execute","build","catch","err","HandleUpload","insertedId","toString","setMarkers","markers","pins","setModule","upsert","error","DropPin","setPosition","canPlacePin","setCanPlacePin","owner_email","owner_name","shared_array","public","useEffect","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","ObjectId","match","params","findOne","pipeline","$match","$in","$addFields","__order","$indexOfArray","$sort","aggregate","toArray","map","pin","center","zoom","latlng","left","window","history","back","fontSize","url","attribution","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapView","state","currentLocation","userLocation","userLocationFound","getUserPosition","bind","setState","this","Marker","Popup","Map","maxZoom","TileLayer","Component","Menu","username","useremail","userID","stitch_res","menuOpen","open","login","logout","addamodule","listmymodules","mongodb","isLoggedIn","userProfile","data","first_name","email","userImg","picture","credential","GoogleRedirectCredential","loginWithRedirect","location","reload","name","temp_module_name","owner","find","asArray","StyledMenu","setOpen","center_container","top","alt","maxHeigh","maxWidth","listStyleType","paddingLeft","current","opacity","href","fontColor","styled","nav","Login","hasRedirectResult","handleRedirectResult","user","assign","class","margin","StyledBurger","button","Burger","NavMenu","React","Module","fileToBase64","filename","filepath","Promise","file","File","reader","onload","event","current_position","module_info","base64img","fetch_userinfo","initializeAppClient","undefined","length","Container","EditModule","modal","idx","show_modal","hide_modal","modal_component","delete_pin","list_pins","module_form","save_pin_order","save_module","modal_message","Modal","preventDefault","marginTop","closeButton","Button","variant","Form","Group","Label","Control","as","rows","display","justifyContent","marginBottom","Check","inline","label","checked","values","oldIndex","newIndex","arrayMove","renderList","children","renderItem","index","Row","Col","xs","deleteOne","splice","pin_ids","updateOne","Tabs","defaultActiveKey","transition","Tab","eventKey","size","block","ViewModules","modules","my_modules","shared_modules","img1","goto_module_id","createRef","add_module_cards","fetch_modules","goto_module","0","1","shared_with","mds","Card","Width","Img","Subtitle","Text","CardDeck","overflowY","marginLeft","marginRight","controlId","placeholder","ref","ManageModules","toggle","list_modules","delete_module","add_module","save_modules","form","FormGroup","Input","all","overflow","onSubmit","maxHeight","overflowX","isOpen","ModalHeader","ModalBody","ModalFooter","iconSize","iconAnchor","popupAnchor","shadowSize","myIcon","divIcon","html","ViewPinOnMap","pins_line","pins_array","drawpins","drawlines","openGoogle","Polyline","positions","icon","info","desc","App","Home","stitchClient","basename","Navbar","Brand","exact","path","component","Boolean","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.051086ff.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 171;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport {Stitch,RemoteMongoClient,BSON} from \"mongodb-stitch-browser-sdk\"\r\nimport {AwsServiceClient, AwsRequest } from 'mongodb-stitch-browser-services-aws'\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { ObjectId } from \"mongodb\";\r\n\r\nconst appId = \"capstonear_app-xkqng\";\r\nconst client = Stitch.hasAppClient(appId)\r\n    ? Stitch.getAppClient(appId)\r\n    : Stitch.initializeDefaultAppClient(appId);\r\nconst mongodb = client.getServiceClient(\r\n    RemoteMongoClient.factory,\r\n    \"mongodb-atlas\"\r\n);\r\nconst db = mongodb.db(\"APP\");\r\n\r\n//image data\r\nvar base64data = 'default'\r\n\r\nvar globalPosition = {};\r\n\r\nconst floatStyle = {\r\n    position: \"fixed\",\r\n    width: \"60px\",\r\n    height: \"60px\",\r\n    bottom: \"40px\",\r\n    right: \"40px\",\r\n    backgroundColor: \"#0C9\",\r\n    color: \"#FFF\",\r\n    borderRadius: \"50px\",\r\n    textAlign: \"center\",\r\n    boxShadow: \"2px 2px 3px #999\",\r\n    zIndex: 1500,\r\n};\r\n\r\n\r\n\r\n\r\nconst HandleFileChange = (props, e) => {\r\n    console.log(e.target.files)\r\n    console.log(e.target.files[0])\r\n    let fileReader = new FileReader();\r\n    fileReader.readAsDataURL(e.target.files[0])\r\n    fileReader.onloadend = (e) => {\r\n        props.setbase64data(fileReader.result)\r\n        console.log(props)\r\n    }\r\n    \r\n}\r\n\r\nconst HandleUpload = (base64data, id) =>{\r\n    console.log(base64data)\r\n    console.log(id)\r\n    // console.log(window.context)\r\n    // Convert the base64 encoded image string to a BSON Binary object\r\n    var basestring = base64data.replace(/^data:image\\/\\w+;base64,/, '');\r\n    var fileBuffer = new Buffer(basestring, 'base64');\r\n    const binaryImageData = new BSON.Binary(new Uint8Array(fileBuffer), 0)\r\n\r\n    const aws = client.getServiceClient(AwsServiceClient.factory, \"capstoneusercontent\");\r\n    // These are the arguments specifically for the s3 service PutObject function\r\n    const args = {\r\n        ACL: 'public-read',\r\n        Bucket: \"capstoneusercontent\",\r\n        ContentType: \"image/jpeg\",\r\n        Key: id + '.jpeg',\r\n        ContentEncoding: 'base64',\r\n        Body: binaryImageData,\r\n        // or Body could be a BSON object\r\n    };\r\n\r\n    const request = new AwsRequest.Builder()\r\n    .withService(\"s3\")\r\n    .withAction(\"PutObject\")\r\n    .withRegion(\"us-west-2\") // this is optional\r\n    .withArgs(args); // depending on the service and action, this may be optional as well\r\n\r\n    console.log(request)\r\n\r\n    aws.execute(request.build())\r\n    .then(result => {\r\n        console.log(result)\r\n    }).catch(err => {\r\n        console.log(err)\r\n    });\r\n    \r\n}\r\n\r\nconst OpenFile = (props) =>{\r\n    console.log(\"open file\")\r\n   \r\n    console.log(props.base64data)\r\n    return(\r\n        <div>\r\n            <input type=\"file\" multiple=\"single\"  onChange={(e) => HandleFileChange(props, e)}></input>  \r\n            <img style={{\r\n                    height: '200px',\r\n                    width : '300px'\r\n                }} src={props.base64data}></img>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\nconst EditForm = (props) => {\r\n    const [defaultValues, setDefaultValues] = useState({\r\n        title: props.title,\r\n        description: props.description,\r\n        hint: props.hint,\r\n        destination: props.destination,\r\n    });\r\n    return (\r\n        <Modal {...props} centered show={props.show} style={{ zIndex: \"1600\" }}>\r\n            <Modal.Header>\r\n                <Modal.Title>Edit a Pin</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <label className=\"d-block\" htmlFor=\"title\">\r\n                    Title\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"w-100\"\r\n                    id=\"title\"\r\n                    required\r\n                    defaultValue={defaultValues.title}\r\n                />\r\n                <label className=\"d-block\" htmlFor=\"description\">\r\n                    Description\r\n                </label>\r\n                <textarea\r\n                    className=\"w-100\"\r\n                    id=\"description\"\r\n                    defaultValue={defaultValues.description}\r\n                    required\r\n                />\r\n                <label className=\"d-block\" htmlFor=\"hint\">\r\n                    Hint\r\n                </label>\r\n                <textarea\r\n                    className=\"w-100\"\r\n                    id=\"hint\"\r\n                    defaultValue={defaultValues.hint}\r\n                    required\r\n                />\r\n                <label className=\"d-block\" htmlFor=\"destination\">\r\n                    Destination\r\n                </label>\r\n                <textarea\r\n                    className=\"w-100\"\r\n                    id=\"destination\"\r\n                    defaultValue={defaultValues.destination}\r\n                    required\r\n                />\r\n\r\n                <img style={{\r\n                    height: '200px',\r\n                    width : '300px'\r\n                }} src={\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + props.id + \".jpeg\"}></img>\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button className=\"btn btn-secondary\" onClick={props.cancel}>\r\n                    Cancel\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => {\r\n                        const title =\r\n                            document.getElementById(\"title\").value || \"\";\r\n                        const hint =\r\n                            document.getElementById(\"hint\").value || \"\";\r\n                        const description =\r\n                            document.getElementById(\"description\").value || \"\";\r\n                        const destination =\r\n                            document.getElementById(\"destination\").value || \"\";\r\n                        const query = { _id: props.objectID };\r\n                        const update = {\r\n                            $set: {\r\n                                title: title,\r\n                                description: description,\r\n                                hint: hint,\r\n                                destination: destination,\r\n                            },\r\n                        };\r\n                        // update a pin on the database\r\n                        db.collection(\"PINS\")\r\n                            .findOneAndUpdate(query, update)\r\n                            .then((objectID) => {\r\n                                setDefaultValues({\r\n                                    title: title,\r\n                                    description: description,\r\n                                    hint: hint,\r\n                                    destination: destination\r\n                                });\r\n                                props.cancel();\r\n                            });\r\n                    }}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst PinMarker = (props) => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n    return (\r\n        <Marker\r\n            key={globalPosition}\r\n            position={[props.lat, props.lng]}\r\n            onClick={() => {\r\n                setModalShow(!modalShow);\r\n            }}\r\n        >\r\n            <EditForm\r\n                id={props.id}\r\n                description={props.description}\r\n                hint={props.hint}\r\n                destination={props.destination}\r\n                title={props.title}\r\n                objectID={props.objectID}\r\n                lng={props.lng}\r\n                lat={props.lat}\r\n                show={modalShow}\r\n                cancel={() => setModalShow(false)}\r\n            />\r\n        </Marker>\r\n    );\r\n};\r\n\r\nconst AddpinForm = (props) => {\r\n\r\n    return (\r\n        <Modal {...props} centered style={{ zIndex: \"1600\" }}>\r\n            <Modal.Header>\r\n                <Modal.Title>Add a Pin</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <label className=\"d-block\" htmlFor=\"title\">\r\n                    Title\r\n                </label>\r\n                <input type=\"text\" className=\"w-100\" id=\"title\" required />\r\n                <label className=\"d-block\" htmlFor=\"description\">\r\n                    Description\r\n                </label>\r\n                <textarea className=\"w-100\" id=\"description\" required />\r\n                <label className=\"d-block\" htmlFor=\"hint\">\r\n                    Hint\r\n                </label>\r\n                <textarea className=\"w-100\" id=\"hint\" required />\r\n                <label className=\"d-block\" htmlFor=\"destination\">\r\n                    Destination\r\n                </label>\r\n                <textarea className=\"w-100\" id=\"destination\" required />\r\n\r\n                <label className=\"d-block\" htmlFor=\"pinImage\">\r\n                    Image\r\n                </label>\r\n                <OpenFile base64data={props.base64data} setbase64data={props.setbase64data}></OpenFile>\r\n                \r\n\r\n\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button className=\"btn btn-secondary\" onClick={props.onHide}>\r\n                    Cancel\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => {\r\n                        const title =\r\n                            document.getElementById(\"title\").value || \"\";\r\n                        const hint =\r\n                            document.getElementById(\"hint\").value || \"\";\r\n                        const description =\r\n                            document.getElementById(\"description\").value || \"\";\r\n                        const destination =\r\n                            document.getElementById(\"destination\").value || \"\";\r\n                        const { lng, lat } = globalPosition;\r\n                        // insert a new pin on the database\r\n                        db.collection(\"PINS\")\r\n                            .insertOne({\r\n                                title: title,\r\n                                owner_id: client.auth.authInfo.userId,\r\n                                description: description,\r\n                                hint: hint,\r\n                                destination: destination,\r\n                                audio: \"\",\r\n                                video: \"\",\r\n                                coords: [lat, lng],\r\n                            })\r\n                            .then((res) => {\r\n                                //console.log(res.insertedId.id)\r\n\r\n                                //upload image\r\n                                HandleUpload(props.base64data, res.insertedId.toString())\r\n\r\n                                // add the new pin to the map on success of adding the pin to\r\n                                // to the database\r\n                                props.setMarkers([\r\n                                    ...props.markers,\r\n                                    <PinMarker\r\n                                        id={res.insertedId.toString()}\r\n                                        description={description}\r\n                                        hint={hint}\r\n                                        destination={destination}\r\n                                        title={title}\r\n                                        objectID={res.insertedId}\r\n                                        lng={lng}\r\n                                        lat={lat}\r\n                                    />,\r\n                                ]);\r\n\r\n                                var module = props.module;\r\n                                module.pins = [...module.pins, res.insertedId];\r\n                                props.setModule(module);\r\n\r\n                                const query = { _id: module._id };\r\n                                const update = {\r\n                                    $set: {\r\n                                        pins: module.pins,\r\n                                    },\r\n                                };\r\n                                const options = { upsert: false };\r\n                                db.collection(\"MODULES\")\r\n                                    .findOneAndUpdate(query, update, options)\r\n                                    .then((res) => {\r\n                                    })\r\n                                    .catch(console.error);\r\n                            });\r\n                        props.onHide();\r\n                    }}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst DropPin = (props) => {\r\n    const [position, setPosition] = useState([45, 45]);\r\n    const [markers, setMarkers] = useState([]);\r\n    const [canPlacePin, setCanPlacePin] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [base64data, setbase64data] = useState(\"default 64\");\r\n    const [module, setModule] = useState({\r\n        _id: \"\",\r\n        title: \"\",\r\n        owner_email: \"\",\r\n        owner_id: \"\",\r\n        owner_name: \"\",\r\n        description: \"\",\r\n        pins: [],\r\n        shared_array: [],\r\n        public: false,\r\n    });\r\n   \r\n\r\n    // Getting the users current location\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((pos) => {\r\n            const { latitude, longitude } = pos.coords;\r\n            setPosition([latitude, longitude]);\r\n        });\r\n    }, []);\r\n\r\n    // Getting the module and pins for the module\r\n    useEffect(() => {\r\n        const query = {\r\n            _id: ObjectId(props.match.params.id),\r\n        };\r\n        db.collection(\"MODULES\")\r\n            .findOne(query)\r\n            .then((res) => {\r\n                setModule(res);\r\n\r\n                // Pipeline to ensure that the order of the pins stays the same after the query\r\n                const pipeline = [\r\n                    { $match: { _id: { $in: res.pins } } },\r\n                    {\r\n                        $addFields: {\r\n                            __order: { $indexOfArray: [res.pins, \"$_id\"] },\r\n                        },\r\n                    },\r\n                    { $sort: { __order: 1 } },\r\n                ];\r\n\r\n                db.collection(\"PINS\")\r\n                    .aggregate(pipeline)\r\n                    .toArray()\r\n                    .then((res) => {\r\n                        setMarkers(\r\n                            res.map((pin) => {\r\n                                return (\r\n                                    <PinMarker\r\n                                        id={pin._id.toString()}\r\n                                        description={pin.description}\r\n                                        hint={pin.hint}\r\n                                        destination={pin.destination}\r\n                                        title={pin.title}\r\n                                        objectID={pin._id}\r\n                                        lng={pin.coords[1]}\r\n                                        lat={pin.coords[0]}\r\n                                    />\r\n                                );\r\n                            })\r\n                        );\r\n                    });\r\n            })\r\n            .catch(console.error);\r\n    }, [props.match.params.id]);\r\n\r\n    return (\r\n        <Map\r\n            center={position}\r\n            zoom={13}\r\n            onClick={(e) => {\r\n                if (canPlacePin) {\r\n                    globalPosition = e.latlng;\r\n                    setModalShow(true);\r\n                    setCanPlacePin(!canPlacePin);\r\n                }\r\n            }}\r\n        >\r\n            <AddpinForm\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                setMarkers={setMarkers}\r\n                markers={markers}\r\n                setModule={setModule}\r\n                module={module}\r\n                \r\n                setbase64data={setbase64data}\r\n                base64data={base64data}\r\n            />\r\n            <button\r\n                style={{\r\n                    zIndex: 1500,\r\n                    position: \"fixed\",\r\n                    bottom: \"10px\",\r\n                    left: \"10px\",\r\n                    textAlign: \"center\",\r\n                }}\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                    window.history.back();\r\n                }}\r\n            >Save</button>\r\n            <button\r\n                style={floatStyle}\r\n                onClick={() => setCanPlacePin(!canPlacePin)}\r\n            >\r\n                <div style={{ fontSize: \"40px\" }}>+</div>\r\n            </button>\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            <Marker position={position}>\r\n                <Popup>Your location</Popup>\r\n            </Marker>\r\n            {markers}\r\n        </Map>\r\n    );\r\n};\r\n\r\nexport default DropPin;\r\n","import React, {Component} from 'react'\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L from 'leaflet'\r\n\r\n\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\n\r\n\r\nclass MapView extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state ={\r\n      currentLocation: {lat: 45.51, lng:-122.68},\r\n      zoom: 13,\r\n      userLocation:[],\r\n      userLocationFound: false,\r\n    }\r\n  this.getUserPosition = this.getUserPosition.bind(this)\r\n  }\r\n  \r\n\r\n  getUserPosition(){\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\r\n      \r\n      console.log(this.state)\r\n      \r\n    })\r\n  \r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getUserPosition()\r\n\r\n    \r\n  }\r\n\r\n  render(){\r\n    const userLocation = this.state.userLocationFound ? (\r\n      <Marker position={this.state.userLocation}>\r\n        <Popup >Your location</Popup>\r\n      </Marker>\r\n    ) : null\r\n\r\n    return (\r\n      <div id='leaflet-container'>\r\n      <Map center={this.state.currentLocation} zoom={13} maxZoom={18} >\r\n        <TileLayer\r\n          \r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n        />\r\n        {userLocation}     \r\n      </Map>\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default MapView;","import React, { Component } from \"react\";\r\nimport {\r\n    Stitch,\r\n    RemoteMongoClient,\r\n    GoogleRedirectCredential,\r\n} from \"mongodb-stitch-browser-sdk\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport styled from \"styled-components\";\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            useremail: \"\",\r\n            userID: \"\",\r\n            stitch_res: [],\r\n            menuOpen: this.props.open,\r\n        };\r\n\r\n        //bind functions\r\n        this.login = this.login.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.addamodule = this.addamodule.bind(this);\r\n        this.listmymodules = this.listmymodules.bind(this);\r\n        console.log(props);\r\n        const appId = \"capstonear_app-xkqng\";\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId);\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n            );\r\n            //select the db in our mongdb atlas cluster\r\n            this.db = mongodb.db(\"APP\");\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        //init mongodb stitch\r\n\r\n        if (\r\n            this.client.auth.isLoggedIn &&\r\n            this.client.auth.authInfo.userProfile\r\n        ) {\r\n            this.setState({\r\n                username: this.client.auth.authInfo.userProfile.data.first_name,\r\n                useremail: this.client.auth.authInfo.userProfile.data.email,\r\n                userID: this.client.auth.authInfo.userId,\r\n                userImg: this.client.auth.authInfo.userProfile.data.picture,\r\n            });\r\n\r\n            console.log(this.client.auth.authInfo.userProfile.data);\r\n        }\r\n    }\r\n\r\n    //login button handler\r\n    async login() {\r\n        //login using google redirect\r\n        const credential = new GoogleRedirectCredential();\r\n        this.client.auth.loginWithRedirect(credential);\r\n        console.log(this.state);\r\n    }\r\n\r\n    async logout() {\r\n        await this.client.auth.logout();\r\n        this.setState({\r\n            username: \"\",\r\n            useremail: \"\",\r\n            userID: \"\",\r\n        });\r\n        window.location.reload();\r\n    }\r\n\r\n    addamodule() {\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .insertOne({\r\n                owner_id: this.state.userID,\r\n                name: this.state.temp_module_name,\r\n                owner: this.state.useremail,\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    listmymodules() {\r\n        if (!this.client.auth.isLoggedIn) {\r\n            return;\r\n        }\r\n        this.db\r\n            .collection(\"PINS\")\r\n            .find({ _id: ObjectId(\"5ebed1bc5992681f357d7948\") })\r\n            .asArray()\r\n            .then((stitch_res) => {\r\n                this.setState({ stitch_res });\r\n                console.log(this.state.stitch_res[0]);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <StyledMenu\r\n                open={this.props.open}\r\n                setOpen={this.props.setOpen}\r\n                center_container={this.props.center_container}\r\n                style={{}}\r\n            >\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        top: \"2rem\",\r\n                    }}\r\n                >\r\n                    <img\r\n                        src={this.state.userImg}\r\n                        alt=\"test\"\r\n                        style={{\r\n                            maxHeigh: \"80px\",\r\n                            maxWidth: \"80px\",\r\n                            borderRadius: \"50%\",\r\n                            top: \"1rem\",\r\n                        }}\r\n                    ></img>\r\n\r\n                    <p\r\n                        style={{\r\n                            fontSize: \"1.5rem\",\r\n                            top: \"4rem\",\r\n                            color: \"white\",\r\n                            zIndex: 1002,\r\n                        }}\r\n                    >\r\n                        {\" \"}\r\n                        Welcome, <br /> {this.state.username}{\" \"}\r\n                    </p>\r\n                </div>\r\n\r\n                <ul\r\n                    style={{ listStyleType: \"none\", paddingLeft: 0 }}\r\n                    onClick={() => {\r\n                        this.props.center_container.center_container.current.style.opacity = 1;\r\n                        this.props.setOpen(!this.props.open);\r\n                    }}\r\n                >\r\n                    <li>\r\n                        <a href=\"#/\">Home</a>\r\n                    </li>\r\n                    <br />\r\n                    <li>\r\n                        <a href=\"#/modules\">My Modules</a>\r\n                    </li>\r\n                    <br />\r\n                    <li>\r\n                        <a href=\"#/modules/edit\">Manage Modules</a>\r\n                    </li>\r\n                    <br />\r\n                </ul>\r\n\r\n                <a\r\n                    href=\"#/logout\"\r\n                    onClick={this.logout}\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        fontSize: \"1rem\",\r\n                        fontColor: \"#00000\",\r\n                        bottom: \"10rem\",\r\n                    }}\r\n                >\r\n                    Log Out\r\n                </a>\r\n            </StyledMenu>\r\n        );\r\n    }\r\n}\r\n\r\n// menu style sheet\r\n// tutorial from https://css-tricks.com/hamburger-menu-with-a-side-of-react-hooks-and-styled-components/ with modified styles\r\nconst StyledMenu = styled.nav`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    background: #343a40;\r\n    transform: ${({ open }) =>\r\n        open ? \"translateX(-100)\" : \"translateX(100%)\"};\r\n    height: 100vh;\r\n    text-align: left;\r\n    padding: 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    transition: transform 0.3s ease-in-out;\r\n    z-index: 1501;\r\n\r\n    @media (max-width: 150px) {\r\n        width: 100%;\r\n    }\r\n\r\n    a {\r\n        font-size: 1.5rem;\r\n        text-transform: uppercase;\r\n        padding: 2rem 0;\r\n        font-weight: Light;\r\n        letter-spacing: 0.5rem;\r\n        color: #FFFFF;\r\n        text-decoration: none;\r\n        transition: color 0.3s linear;\r\n\r\n        @media (max-width: 150px) {\r\n            font-size: 1rem;\r\n            text-align: center;\r\n        }\r\n\r\n        &:hover {\r\n            color: #343078;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Menu;\r\n","import React, {Component} from 'react'\r\nimport './Login.css'\r\nimport {Stitch, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\r\n\r\nexport default class Login extends Component{\r\n    constructor(){\r\n        super()\r\n        const appId = \"capstonear_app-xkqng\"\r\n        this.client = Stitch.getAppClient(appId)\r\n        this.login = this.login.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n      if (this.client.auth.hasRedirectResult()) {\r\n        console.log(\"has results\")\r\n  \r\n        this.client.auth.handleRedirectResult().then(user => {\r\n          this.setState(\r\n            {\r\n              username: this.client.auth.authInfo.userProfile.data.name,\r\n              useremail: this.client.auth.authInfo.userProfile.data.email,\r\n              userID: this.client.auth.authInfo.userId,\r\n  \r\n            }\r\n          )\r\n          window.location.assign('#/')\r\n        }\r\n        )\r\n      }\r\n        \r\n       \r\n    }\r\n\r\n\r\n    async login(){\r\n          \r\n          //login using google redirect\r\n          const credential = new GoogleRedirectCredential();\r\n          await this.client.auth.loginWithRedirect(credential);\r\n          console.log(this.state)\r\n          \r\n        \r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      \r\n          <div class=\"row justify-content-center\" style={{\r\n            position: \"fixed\",\r\n            margin: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0,\r\n            height: \"50px\"\r\n          }}>\r\n              <button class=\"btn btn-primary\"onClick={this.login}>Login with Google</button>\r\n          </div>\r\n      \r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Menu from './Menu'\r\n\r\n\r\nconst StyledBurger = styled.button`\r\n  position: fixed;\r\n  top: 10px;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 1502;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.25rem;\r\n    background: ${({ open }) => open ? '#FFFFFF' : '#FFFFFF'};\r\n    border-radius: 10px;\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => open ? '0' : '1'};\r\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\r\n    }\r\n  }\r\n`\r\n\r\nconst Burger = ({ open, setOpen, center_container }) => {\r\n  console.log(center_container.center_container.current)\r\n  return (\r\n    <StyledBurger open={open} onClick={() => {\r\n      setOpen(!open)\r\n      if(!open)\r\n        center_container.center_container.current.style.opacity = .5 \r\n      else\r\n        center_container.center_container.current.style.opacity = 1\r\n    }}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </StyledBurger>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst NavMenu = (center_container) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n        <div>\r\n        <Burger open={open} setOpen={setOpen} center_container={center_container} />\r\n        <Menu open={open} setOpen={setOpen} center_container={center_container}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavMenu","import React, { Component} from 'react'\r\n\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\r\nimport {Container} from 'react-bootstrap'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport {Stitch,RemoteMongoClient,BSON} from \"mongodb-stitch-browser-sdk\"\r\nimport {AwsServiceClient, AwsRequest } from 'mongodb-stitch-browser-services-aws'\r\nimport {ObjectId} from 'mongodb'\r\n//const BSON = require('bson');\r\n\r\nexport default class Module extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            current_position:[],\r\n            module_info: {\r\n                name:'',\r\n                owner_email: '',\r\n                owner_id: '',\r\n                owner_name: '',\r\n                description: '',\r\n            },\r\n            base64img:''\r\n        }\r\n\r\n        this.getUserPosition = this.getUserPosition.bind(this)\r\n        this.fetch_userinfo = this.fetch_userinfo.bind(this)\r\n      \r\n        const appId = \"capstonear_app-xkqng\"\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId)\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n              );\r\n              //select the db in our mongdb atlas cluster\r\n              this.db = mongodb.db(\"APP\");\r\n            console.log(\"client\")\r\n        }\r\n        else{\r\n            this.client = Stitch.initializeAppClient(appId)\r\n            console.log(\"client init\")\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.getUserPosition()\r\n        this.fetch_userinfo()\r\n        const appId = \"capstonear_app-xkqng\"\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId)\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n              );\r\n              //select the db in our mongdb atlas cluster\r\n              this.db = mongodb.db(\"APP\");\r\n            console.log(\"client\")\r\n        }\r\n        else{\r\n            this.client = Stitch.initializeAppClient(appId)\r\n            console.log(\"client init\")\r\n        }\r\n    }\r\n\r\n    async fetch_userinfo(){\r\n        await this.db.collection(\"MODULES\").find({\r\n            _id: ObjectId(this.props.match.params.id)\r\n        })\r\n        .asArray()\r\n        .then((module_info) => {\r\n            if(module_info === undefined || module_info.length === 0)\r\n            {\r\n                console.log(module_info)\r\n                return\r\n            }\r\n            this.setState({module_info: module_info[0]}\r\n            )\r\n          console.log(module_info)\r\n        }\r\n        )\r\n        .catch((err) => {this.setState({error: err})\r\n         console.log(err)\r\n        }\r\n        )\r\n       \r\n    }\r\n\r\n    getUserPosition(){\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n          this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\r\n          \r\n          console.log(this.state)\r\n          \r\n        })\r\n    }\r\n\r\n    renderMap(){\r\n        const userLocation = this.state.userLocationFound ? (\r\n            <Marker position={this.state.userLocation}>\r\n              <Popup >Your location</Popup>\r\n            </Marker>\r\n          ) : null\r\n\r\n        return (\r\n        <div id='leaflet-container'>\r\n        <Map center={this.state.currentLocation} zoom={13} maxZoom={18} >\r\n            <TileLayer\r\n            \r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n            />\r\n            {userLocation}     \r\n        </Map>\r\n        </div>\r\n        )   \r\n    }\r\n\r\n\r\n    fileToBase64 = (filename, filepath) => {\r\n        return new Promise(resolve => {\r\n          var file = new File([filename], filepath);\r\n          var reader = new FileReader();\r\n          // Read file content on file loaded event\r\n          reader.onload = function(event) {\r\n            resolve(event.target.result);\r\n          };\r\n          \r\n          // Convert data to base64 \r\n          reader.readAsDataURL(file);\r\n        });\r\n      };\r\n\r\n\r\n    render(){\r\n      \r\n        return(\r\n            <Container>\r\n                title: \r\n                <br />\r\n                {this.state.module_info.title}\r\n                <br />\r\n                <br />\r\n\r\n                owner_email: \r\n                <br />\r\n                {this.state.module_info.owner_email}\r\n                <br />\r\n                <br />\r\n\r\n                owner_name: \r\n                <br />\r\n                {this.state.module_info.owner_name}\r\n                <br />\r\n                <br />\r\n\r\n                owner_id: \r\n                <br />\r\n                {this.state.module_info.owner_id}\r\n                <br />\r\n                <br />\r\n\r\n                description: \r\n                <br />\r\n                {this.state.module_info.description}\r\n                <br />\r\n                <br />\r\n              \r\n             \r\n        \r\n\r\n                <button className='btn btn-primary' \r\n                        onClick={() =>\r\n                            window.location.assign(\r\n                                \"#/module/\" + this.state.module_info._id+\"/pins\"\r\n                        )}\r\n                        >start module</button>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Button,\r\n    Tabs,\r\n    Tab,\r\n    Modal,\r\n} from \"react-bootstrap\";\r\nimport { List, arrayMove } from \"react-movable\";\r\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport \"./EditModule.css\";\r\n\r\n// @classdesc Used to make the Edit Module view.\r\nexport default class EditModule extends Component {\r\n    // Creates a new EditModule\r\n    // @param {Object} props\r\n    // @class\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            module_info: {\r\n                _id: \"\",\r\n                title: \"\",\r\n                owner_email: \"\",\r\n                owner_id: \"\",\r\n                owner_name: \"\",\r\n                description: \"\",\r\n                pins: [],\r\n                shared_array: [],\r\n                public: false,\r\n            },\r\n            pins: [],\r\n            modal: false,\r\n            idx: -1,\r\n        };\r\n\r\n        this.fetch_userinfo = this.fetch_userinfo.bind(this);\r\n\r\n        this.show_modal = this.show_modal.bind(this);\r\n        this.hide_modal = this.hide_modal.bind(this);\r\n        this.modal_component = this.modal_component.bind(this);\r\n\r\n        this.delete_pin = this.delete_pin.bind(this);\r\n        this.list_pins = this.list_pins.bind(this);\r\n        this.module_form = this.module_form.bind(this);\r\n        this.save_pin_order = this.save_pin_order.bind(this);\r\n        this.save_module = this.save_module.bind(this);\r\n\r\n        const appId = \"capstonear_app-xkqng\";\r\n        this.client = Stitch.hasAppClient(appId)\r\n            ? Stitch.getAppClient(appId)\r\n            : Stitch.initializeDefaultAppClient(appId);\r\n        const mongodb = this.client.getServiceClient(\r\n            RemoteMongoClient.factory,\r\n            \"mongodb-atlas\"\r\n        );\r\n        this.db = mongodb.db(\"APP\");\r\n\r\n        this.fetch_userinfo();\r\n    }\r\n\r\n    // Gets the module ID from the routing parameter and uses it to get the\r\n    // associated module and pins for that module.\r\n    // @return {Promise} Query to set state.module_info and state.pins\r\n    async fetch_userinfo() {\r\n        const query = {\r\n            _id: ObjectId(this.props.match.params.id),\r\n        };\r\n\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .findOne(query)\r\n            .then((res) => {\r\n                console.log(\"Module: \", res);\r\n                this.setState({ module_info: res });\r\n\r\n                // Pipeline to ensure that the order of the pins stays the same after the query\r\n                const pipeline = [\r\n                    { $match: { _id: { $in: res.pins } } },\r\n                    {\r\n                        $addFields: {\r\n                            __order: { $indexOfArray: [res.pins, \"$_id\"] },\r\n                        },\r\n                    },\r\n                    { $sort: { __order: 1 } },\r\n                ];\r\n\r\n                this.db\r\n                    .collection(\"PINS\")\r\n                    .aggregate(pipeline)\r\n                    .toArray()\r\n                    .then((res) => {\r\n                        console.log(\"Pins: \", res);\r\n                        this.setState({ pins: res });\r\n                    });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // Sets state.modal to true\r\n    show_modal() {\r\n        this.setState({ modal: true });\r\n    }\r\n\r\n    // Sets state.modal to false\r\n    hide_modal() {\r\n        this.setState({ modal: false });\r\n    }\r\n\r\n    // @return {JSX.Element} Modal to confirm deletion\r\n    modal_component() {\r\n        var modal_message;\r\n        if (this.state.idx < 0) modal_message = <p>Nothing to delete</p>;\r\n        else\r\n            modal_message = (\r\n                <p>\r\n                    Are you sure you want to delete{\" \"}\r\n                    <b>{this.state.pins[this.state.idx].title}</b>?\r\n                </p>\r\n            );\r\n\r\n        return (\r\n            <Modal\r\n                // size=\"sm\"\r\n                show={this.state.modal}\r\n                onHide={(e) => {\r\n                    e.preventDefault();\r\n                    this.hide_modal();\r\n                }}\r\n                style={{\r\n                    marginTop: \"50px\",\r\n                }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm Deletion</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{modal_message}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            if (this.state.idx > -1)\r\n                                this.delete_pin(this.state.idx);\r\n                            this.hide_modal();\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.hide_modal();\r\n                        }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    // @return {JSX.Element} Form to fill out module title, description, and\r\n    // public/private status\r\n    module_form() {\r\n        return (\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                        type=\"title\"\r\n                        id=\"title\"\r\n                        value={this.state.module_info.title}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.title = e.target.value;\r\n                            this.setState({ module_info: module_info });\r\n                        }}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"5\"\r\n                        id=\"description\"\r\n                        value={this.state.module_info.description}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.description = e.target.value;\r\n                            this.setState({ module_info: module_info });\r\n                        }}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        marginBottom: \"0\",\r\n                    }}\r\n                >\r\n                    <Form.Check\r\n                        inline\r\n                        type=\"radio\"\r\n                        label=\"Public\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"true\"\r\n                        checked={this.state.module_info.public}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.public = true;\r\n                            this.setState({\r\n                                module_info: module_info,\r\n                            });\r\n                        }}\r\n                    />\r\n                    <Form.Check\r\n                        inline\r\n                        type=\"radio\"\r\n                        label=\"Private\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"false\"\r\n                        checked={!this.state.module_info.public}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.public = false;\r\n                            this.setState({\r\n                                module_info: module_info,\r\n                            });\r\n                        }}\r\n                    />\r\n                </Form.Group>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    // Creates the list of pins based on state.pins. Uses the react-movable\r\n    // library to make the list of pins draggable.\r\n    // @return {JSX.Element} The list of pins.\r\n    list_pins() {\r\n        return (\r\n            <List\r\n                values={this.state.pins}\r\n                onChange={({ oldIndex, newIndex }) => {\r\n                    var pins = this.state.pins;\r\n                    pins = arrayMove(pins, oldIndex, newIndex);\r\n                    this.setState({ pins: pins });\r\n                }}\r\n                renderList={({ children, props }) => (\r\n                    <ol\r\n                        {...props}\r\n                        style={{\r\n                            display: \"grid\",\r\n                            justifyContent: \"center\",\r\n                            paddingLeft: \"0px\",\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </ol>\r\n                )}\r\n                renderItem={({ index, props }) => (\r\n                    <li {...props}>\r\n                        <Row style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\r\n                            <Col\r\n                                xs=\"4\"\r\n                                style={{\r\n                                    marginTop: \"auto\",\r\n                                    marginBottom: \"auto\",\r\n                                }}\r\n                            >\r\n                                {this.state.pins[index].title}\r\n                            </Col>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"link\"\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        // TODO: Link to Edit Pin modal\r\n                                    }}\r\n                                >\r\n                                    Edit\r\n                                </Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"danger\"\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        this.setState({ idx: index });\r\n                                        this.show_modal();\r\n                                    }}\r\n                                >\r\n                                    Delete\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </li>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n\r\n    // This function will remove a pin from the DB and state.pins\r\n    // @param {number} idx - The index of the pin to delete\r\n    delete_pin(idx) {\r\n        const query = { _id: this.state.pins[idx]._id };\r\n        this.db\r\n            .collection(\"PINS\")\r\n            .deleteOne(query)\r\n            .then((res) => {\r\n                console.log(\"Delete response: \", res);\r\n\r\n                // Update pin list\r\n                var pins = this.state.pins;\r\n                pins.splice(idx, 1);\r\n                this.setState({ pins: pins, idx: -1 });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // Converts state.pins to a list of ObjectIDs, then updates\r\n    // state.module_info.pins based on the new list\r\n    save_pin_order() {\r\n        var module = this.state.module_info;\r\n        const pin_ids = this.state.pins.map((pin) => {\r\n            return pin._id;\r\n        });\r\n        module.pins = pin_ids;\r\n        this.setState({ module_info: module });\r\n    }\r\n\r\n    // Saves the module to the DB\r\n    save_module() {\r\n        this.save_pin_order();\r\n        const query = { _id: this.state.module_info._id };\r\n        const update = {\r\n            $set: this.state.module_info,\r\n        };\r\n        const options = { upsert: false };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .updateOne(query, update, options)\r\n            .then((res) => {\r\n                console.log(\"Save response: \", res);\r\n\r\n                // Go back to Manage Module view\r\n                window.location.assign(\"#/modules/edit/\");\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // @return {JSX.Element} The EditModule componenet\r\n    render() {\r\n        return (\r\n            <Container\r\n                style={{\r\n                    marginTop: \"10px\",\r\n                    maxWidth: \"540px\",\r\n                    height: \"100%\",\r\n                }}\r\n            >\r\n                <Form style={{ height: \"100%\" }}>\r\n                    <Tabs\r\n                        defaultActiveKey=\"Module Info\"\r\n                        transition={false}\r\n                        style={{\r\n                            textAlign: \"center\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Tab eventKey=\"Module Info\" title=\"Module Info\">\r\n                            {this.module_form()}\r\n                        </Tab>\r\n                        <Tab\r\n                            eventKey=\"Pins\"\r\n                            title=\"Pins\"\r\n                            style={{ height: \"100%\" }}\r\n                        >\r\n                            {this.list_pins()}\r\n                        </Tab>\r\n                    </Tabs>\r\n                    <Form.Group>\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            size=\"lg\"\r\n                            block\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                var id = this.state.module_info._id;\r\n                                window.location.assign(\r\n                                    \"#/module/\" + id + \"/pins/edit\"\r\n                                );\r\n                            }}\r\n                        >\r\n                            Pin Map\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"secondary\"\r\n                            size=\"lg\"\r\n                            block\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                this.save_module();\r\n                            }}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Button variant=\"primary\">Share</Button>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                {this.modal_component()}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Tab, Tabs, CardDeck, Form, Button } from \"react-bootstrap\";\r\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\r\n//import {AwsServiceClient, AwsRequest} from 'mongodb-stitch-browser-services-aws'\r\n\r\nexport default class ViewModules extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modules: [],\r\n            my_modules: [],\r\n            shared_modules: [],\r\n            img1: \"\",\r\n            stitch_res: [],\r\n        };\r\n\r\n        //refs\r\n        this.goto_module_id = React.createRef();\r\n\r\n        this.add_module_cards = this.add_module_cards.bind(this);\r\n        this.fetch_modules = this.fetch_modules.bind(this);\r\n        this.goto_module = this.goto_module.bind(this);\r\n\r\n        const appId = \"capstonear_app-xkqng\";\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId);\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n            );\r\n            //select the db in our mongdb atlas cluster\r\n            this.db = mongodb.db(\"APP\");\r\n        } else {\r\n            this.client = Stitch.initializeAppClient(appId);\r\n            //console.log(\"client init\")\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetch_modules();\r\n\r\n        console.log(this.state);\r\n    }\r\n\r\n    async fetch_modules() {\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find({\r\n                owner_id: this.client.auth.authInfo.userId,\r\n            })\r\n            .asArray()\r\n            .then((my_modules) => {\r\n                this.setState({\r\n                    my_modules: my_modules,\r\n                    modules: {\r\n                        0: my_modules,\r\n                        1: this.state.shared_modules,\r\n                    },\r\n                });\r\n\r\n                console.log(this.state.my_modules);\r\n            });\r\n\r\n        //fetch shared modules\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find({\r\n                shared_with: this.client.auth.authInfo.userProfile.data.email,\r\n            })\r\n            .asArray()\r\n            .then((shared_modules) => {\r\n                this.setState({\r\n                    shared_modules: shared_modules,\r\n                    modules: {\r\n                        0: this.state.my_modules,\r\n                        1: shared_modules,\r\n                    },\r\n                });\r\n                console.log(shared_modules);\r\n            });\r\n        console.log(this.state.modules);\r\n    }\r\n\r\n    goto_module(id) {\r\n        window.location.assign(\"#/module/\" + id);\r\n    }\r\n\r\n    add_module_cards(type) {\r\n        if (this.state.modules.length === 0) return;\r\n\r\n        const mds = this.state.modules[type].map(function (module, idx) {\r\n            return (\r\n                <div className=\"col-md-6 col-lg-4 \" key={idx}>\r\n                    <Card\r\n                        className=\"h-100\"\r\n                        style={{\r\n                            display: \"fixed\",\r\n\r\n                            Width: \"25rem\",\r\n                            margin: \"0.25rem\",\r\n                            justifyContent: \"center\",\r\n                            textAlign: \"center\",\r\n                        }}\r\n                    >\r\n                        <Card.Body>\r\n                            <Card.Img\r\n                                variant=\"top\"\r\n                                src=\"https://capstoneusercontent.s3.amazonaws.com/ar.png\"\r\n                            />\r\n                            <Card.Title>{module.title}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">\r\n                                by {module.owner_name} ({module.owner_email})\r\n                            </Card.Subtitle>\r\n                            <Card.Text>{module.description}</Card.Text>\r\n                            <div\r\n                                className=\"btn-toolbar\"\r\n                                style={{\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                            >\r\n                                <div className=\"btn-group mr-1\">\r\n                                    <button\r\n                                        className=\"btn btn-primary\"\r\n                                        onClick={() =>\r\n                                            window.location.assign(\r\n                                                \"#/module/\" + module._id\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        View Details\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div className=\"btn-group mr-1\">\r\n                                    <button className=\"btn btn-primary\"\r\n                                        onClick={() =>\r\n                                            window.location.assign(\r\n                                                \"#/module/\" + module._id+\"/pins\"\r\n                                        )\r\n                                    }>\r\n                                        Start Module\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        });\r\n        return (\r\n            <div\r\n                style={{\r\n                    top: \"50px\",\r\n                    bottom: \"0px\",\r\n                    position: \"relative\",\r\n                }}\r\n                className=\"container\"\r\n            >\r\n                <CardDeck\r\n                    style={{\r\n                        top: \"50px\",\r\n                    }}\r\n                >\r\n                    {mds}\r\n                </CardDeck>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: \"0px\",\r\n                    bottom: \"0px\",\r\n                    width: \"100%\",\r\n                    overflowY: \"scroll\",\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        top: \"10px\",\r\n                        bottom: '0px',\r\n                        position: \"relative\",\r\n                        height: \"100vh\",\r\n                        marginLeft: \"auto\",\r\n                        marginRight: \"auto\",\r\n                    }}\r\n                >\r\n                    <Tabs\r\n                        defaultActiveKey=\"My Modules\"\r\n                        transition={false}\r\n                        style={{\r\n                            textAlign: \"center\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Tab eventKey=\"My Modules\" title=\"My Modules\">\r\n                            {this.add_module_cards(0)}\r\n                        </Tab>\r\n\r\n                        <Tab eventKey=\"Shared Modules\" title=\"Shared with me\">\r\n                            {this.add_module_cards(1)}\r\n                        </Tab>\r\n\r\n                        <Tab eventKey=\"Go To\" title=\"Go To\">\r\n                            <Form>\r\n                                <Form.Group controlId=\"formModuleId\">\r\n                                    <Form.Label>Module ID:</Form.Label>\r\n                                    <Form.Control\r\n                                        required\r\n                                        type=\"string\"\r\n                                        placeholder=\"Enter module id\"\r\n                                        ref={this.goto_module_id}\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    onClick={() => {\r\n                                        window.location.assign(\r\n                                            \"#/module/\" +\r\n                                                this.goto_module_id.current\r\n                                                    .value\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    View Module\r\n                                </Button>\r\n                            </Form>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n} from \"reactstrap\";\r\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\r\n\r\nexport default class ManageModules extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modules: [],\r\n            modal: false,\r\n            idx: -1,\r\n        };\r\n\r\n        this.fetch_userinfo = this.fetch_userinfo.bind(this);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.modal_message = this.modal_message.bind(this);\r\n        this.list_modules = this.list_modules.bind(this);\r\n        this.delete_module = this.delete_module.bind(this);\r\n        this.add_module = this.add_module.bind(this);\r\n        this.save_modules = this.save_modules.bind(this);\r\n\r\n        // Setting up DB with Stitch\r\n        const appId = \"capstonear_app-xkqng\";\r\n        this.client = Stitch.hasAppClient(appId)\r\n            ? Stitch.getAppClient(appId)\r\n            : Stitch.initializeDefaultAppClient(appId);\r\n        const mongodb = this.client.getServiceClient(\r\n            RemoteMongoClient.factory,\r\n            \"mongodb-atlas\"\r\n        );\r\n        this.db = mongodb.db(\"APP\");\r\n\r\n        this.fetch_userinfo();\r\n    }\r\n\r\n    async fetch_userinfo() {\r\n        const query = {\r\n            owner_id: this.client.auth.authInfo.userId,\r\n        };\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find(query)\r\n            .toArray()\r\n            .then((res) => {\r\n                console.log(\"Modules loaded: \", res);\r\n\r\n                this.setState({ modules: res });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    toggle() {\r\n        var modal = !this.state.modal;\r\n        this.setState({ modal: modal });\r\n    }\r\n\r\n    modal_message() {\r\n        if (this.state.idx < 0) return <p>Nothing to delete</p>;\r\n        else\r\n            return (\r\n                <p>\r\n                    Are you sure you want to delete{\" \"}\r\n                    <b>{this.state.modules[this.state.idx].title}</b>?\r\n                </p>\r\n            );\r\n    }\r\n\r\n    list_modules() {\r\n        return this.state.modules.map((module, idx) => {\r\n            return (\r\n                <div key={idx}>\r\n                    <Row form>\r\n                        <Col xs=\"6\">\r\n                            <FormGroup>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    value={this.state.modules[idx].title}\r\n                                    onChange={(event) => {\r\n                                        event.preventDefault();\r\n\r\n                                        var modules = [...this.state.modules];\r\n                                        modules[idx].title = event.target.value;\r\n                                        this.setState({ modules });\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                color=\"link\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    var id = this.state.modules[idx]._id;\r\n                                    window.location.assign(\r\n                                        \"#/module/\" + id + \"/edit\"\r\n                                    );\r\n                                }}\r\n                            >\r\n                                Edit\r\n                            </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                color=\"danger\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.setState({ idx: idx });\r\n                                    this.toggle();\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    delete_module(idx) {\r\n        const query = { _id: this.state.modules[idx]._id };\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .deleteOne(query)\r\n            .then((res) => {\r\n                console.log(\"Delete response: \", res);\r\n\r\n                // Update module list\r\n                var modules = [...this.state.modules];\r\n                modules.splice(idx, 1);\r\n                this.setState({ modules: modules, idx: -1 });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    add_module() {\r\n        const query = {\r\n            title: \"title\",\r\n            owner_id: this.client.auth.authInfo.userId,\r\n            owner_name: this.client.auth.authInfo.userProfile.name,\r\n            owner_email: this.client.auth.authInfo.userProfile.email,\r\n            description: \"\",\r\n            pins: [],\r\n            shared_with: [],\r\n            public: false,\r\n        };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .insertOne(query)\r\n            .then((res) => {\r\n                console.log(\"Add response: \", res);\r\n\r\n                // Navigate to Edit Module view\r\n                var id = res.insertedId;\r\n                window.location.assign(\"#/module/\" + id + \"/edit\");\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    save_modules() {\r\n        Promise.all(\r\n            this.state.modules.map((module) => {\r\n                const query = { _id: module._id };\r\n                const update = {\r\n                    $set: {\r\n                        title: module.title,\r\n                    },\r\n                };\r\n                const options = { upsert: false };\r\n\r\n                return this.db\r\n                    .collection(\"MODULES\")\r\n                    .updateOne(query, update, options);\r\n            })\r\n        )\r\n            .then((res) => {\r\n                console.log(\"Save response: \", res);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    top: \"10px\",\r\n                    position: \"relative\",\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\",\r\n                    height: \"100%\",\r\n                    overflow: \"hidden\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n                className=\"container\"\r\n            >\r\n                <div\r\n                    style={{\r\n                        height: \"100%\",\r\n                        overflow: \"hidden\",\r\n                    }}\r\n                >\r\n                    <Form\r\n                        style={{ height: \"100%\" }}\r\n                        onSubmit={(event) => {\r\n                            event.preventDefault();\r\n                            this.save_modules();\r\n                        }}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                maxHeight: \"60%\",\r\n                                overflowY: \"scroll\",\r\n                                overflowX: \"hidden\",\r\n                            }}\r\n                        >\r\n                            {this.list_modules()}\r\n                        </div>\r\n\r\n                        <div style={{ marginTop: \"10px\" }}>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                size=\"lg\"\r\n                                block\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.add_module();\r\n                                }}\r\n                            >\r\n                                Add Module\r\n                            </Button>\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                size=\"lg\"\r\n                                block\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.save_modules();\r\n                                    window.location.assign(\"#/\");\r\n                                }}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                    <Modal\r\n                        isOpen={this.state.modal}\r\n                        toggle={(event) => {\r\n                            event.preventDefault();\r\n                            this.toggle();\r\n                        }}\r\n                        style={{\r\n                            marginTop: \"50px\",\r\n                        }}\r\n                    >\r\n                        <ModalHeader\r\n                            toggle={(event) => {\r\n                                event.preventDefault();\r\n                                this.toggle();\r\n                            }}\r\n                        >\r\n                            Confirm Deletion\r\n                        </ModalHeader>\r\n                        <ModalBody>{this.modal_message()}</ModalBody>\r\n                        <ModalFooter>\r\n                            <Button\r\n                                color=\"danger\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    if (this.state.idx > -1)\r\n                                        this.delete_module(this.state.idx);\r\n                                    this.toggle();\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </Button>{\" \"}\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.toggle();\r\n                                }}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport { Map, Marker, Popup, TileLayer,Polyline } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L from 'leaflet'\r\nimport {Stitch, RemoteMongoClient, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\r\nimport { ObjectId } from 'mongodb'\r\n\r\n\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\n\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nconst Style = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"40px\",\r\n  backgroundColor: \"#0C9\",\r\n  color: \"#FFF\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500\r\n}\r\nvar greenIcon = new L.Icon({\r\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  shadowSize: [41, 41]\r\n});\r\n\r\nvar myIcon = new L.divIcon({\r\n  className: 'my-div-icon',\r\n  html: '<span  class=\"my-div-span\">YOU ARE HERE </span>'+\r\n        '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png\"/>'\r\n})\r\n\r\nclass ViewPinOnMap extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state ={\r\n      currentLocation: {lat: 45.51, lng:-122.68},\r\n      zoom: 13,\r\n      userLocation:[],\r\n      userLocationFound: false,\r\n      username:\"\",\r\n      useremail:\"\",\r\n      userID:\"\",\r\n      stitch_res:[],\r\n      pin:[],\r\n      pins_line:[],\r\n      pins_array:[],\r\n    }\r\n  this.getUserPosition = this.getUserPosition.bind(this)\r\n  this.drawpins = this.drawpins.bind(this)\r\n  this.drawlines = this.drawlines.bind(this)\r\n  this.openGoogle = this.openGoogle.bind(this)\r\n\r\n  const appId = \"capstonear_app-xkqng\"\r\n  this.client = Stitch.hasAppClient(appId)\r\n  ? Stitch.getAppClient(appId)\r\n  : Stitch.initializeDefaultAppClient(appId)\r\n  const mongodb = this.client.getServiceClient(\r\n  RemoteMongoClient.factory,\r\n  \"mongodb-atlas\"\r\n  );\r\n  this.db = mongodb.db(\"APP\"); \r\n  }\r\n  \r\n\r\n  getUserPosition(){\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\r\n      \r\n      //console.log(this.state)\r\n      \r\n    })\r\n  \r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getUserPosition()\r\n    this.drawpins()\r\n  }\r\n \r\n  async drawpins() {\r\n    if(!this.client.auth.isLoggedIn){\r\n        return\r\n    }\r\n    const query ={_id: ObjectId(this.props.match.params.id) };\r\n    await this.db.collection(\"MODULES\").findOne(query)\r\n    .then((stitch_res) => {this.setState({stitch_res})\r\n      console.log(this.state.stitch_res)\r\n      var temp_array =[]\r\n      const pipeline = [\r\n        { $match: { _id: { $in: stitch_res.pins } } },\r\n        {\r\n            $addFields: {\r\n                __order: { $indexOfArray: [stitch_res.pins, \"$_id\"] },\r\n            },\r\n        },\r\n        { $sort: { __order: 1 } },\r\n    ];\r\n    this.db.collection(\"PINS\").aggregate(pipeline)\r\n    .toArray()\r\n    .then((res) => {\r\n        console.log(\"Pins: \", res);\r\n        this.setState ({ pins_array: res} )\r\n\r\n    });      \r\n       \r\n    }\r\n    )\r\n  }\r\n  drawlines(){\r\n   \r\n    if(this.state.pins_line.length>0)\r\n    {\r\n      return (\r\n        <Polyline positions={this.state.pins_line} color ={'red'}>\r\n      </Polyline>\r\n      )\r\n    }\r\n    return\r\n  } \r\n  openGoogle(coords)\r\n  {\r\n    var url= \"http://maps.google.com?q=\"+coords[0]+\",\"+coords[1]\r\n    var win = window.open(url, '_blank');\r\n    return\r\n  }\r\n  render(){\r\n    const userLocation = this.state.userLocationFound ? (\r\n      <Marker  position={this.state.userLocation}  icon= {myIcon} >\r\n        <Popup>Your location</Popup>\r\n      </Marker>\r\n    ) : null\r\n   \r\n    return (\r\n      <div>\r\n      <Map center={this.state.currentLocation} zoom={13} maxZoom={18} >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n        />\r\n        {userLocation}\r\n         \r\n        {this.state.pins_array.map((info,idx) => {\r\n            return <Marker \r\n                           key = {idx} position={info.coords} \r\n                           icon= {new L.divIcon({\r\n                                                  className: 'my-div-icon',\r\n                                                  html: '<span style={Style} class=\"my-div-span\">'+(idx+1)+'</span>'+\r\n                                                        '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png\"/>'\r\n                                                })} >\r\n                        <Popup>\r\n                              <h1>{info.desc}</h1>\r\n                              <p>{info.description}</p>\r\n                              <p>{info.hint}</p>\r\n                              <p>{info.destination}</p>\r\n                              <img style={{\r\n                                  height: '100px',\r\n                                  width : '150px'\r\n                              }} src={\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + info._id.toString() + \".jpeg\"}></img>\r\n                              <button onClick={()=>this.openGoogle(info.coords)} >Open Google Map</button>\r\n                        </Popup>\r\n                    </Marker>\r\n          })}\r\n      </Map>\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default ViewPinOnMap;\r\n\r\n//this.db.collection(\"PINS\").find({_id: ObjectId(\"5ebed1bc5992681f357d7948\")} )\r\n//this.db.collection(\"PINS\").find({owner_id: this.client.auth.authInfo.userId} )\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport MapView from \"./components/MapView.js\";\r\nimport Menu from \"./components/Menu/Menu.js\";\r\nimport { Stitch } from \"mongodb-stitch-browser-sdk\";\r\nimport Login from \"./components/Login\";\r\nimport DropPin from \"./components/DropPin\";\r\nimport NavMenu from \"./components/Menu/NavMenu\";\r\nimport Module from \"./components/Module\";\r\nimport EditModule from \"./components/EditModule\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport ViewModules from \"./components/ViewModules\";\r\nimport ManageModules from \"./components/ManageModules\";\r\nimport ViewPinOnMap from \"./components/ViewPinOnMap\";\r\n\r\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const appId = \"capstonear_app-xkqng\";\r\n        this.client = Stitch.hasAppClient(appId)\r\n            ? Stitch.getAppClient(appId)\r\n            : Stitch.initializeDefaultAppClient(appId);\r\n\r\n        if (this.client.auth.hasRedirectResult()) {\r\n            console.log(\"has results\");\r\n\r\n            this.client.auth.handleRedirectResult().then((user) => {\r\n                window.location.assign(\"/\");\r\n            });\r\n        } else {\r\n            //window.location.replace('#/login')\r\n        }\r\n        this.state = {\r\n            isLoggedIn: false,\r\n        };\r\n\r\n        //refs\r\n\r\n        this.center_container = React.createRef();\r\n\r\n        this.NavMenu = this.NavMenu.bind(this);\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    handleStitchClient() {\r\n        this.setState({\r\n            stitchClient: this.client,\r\n            userProfile: this.client.auth.userProfile,\r\n            isLoggedIn: true,\r\n        });\r\n    }\r\n\r\n    Home = () => {\r\n        if (this.client.auth.isLoggedIn) {\r\n            return (\r\n                <div>\r\n                    <MapView />\r\n                </div>\r\n            );\r\n        } else {\r\n            return <Login />;\r\n        }\r\n    };\r\n\r\n    NavMenu = () => {\r\n        if (this.client.auth.isLoggedIn) {\r\n            return <NavMenu center_container={this.center_container} />;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter basename=\"/\">\r\n                <div>\r\n                    <Navbar\r\n                        className=\"navbar bg-dark navbar-dark\"\r\n                        style={{\r\n                            position: \"fixed\",\r\n                            width: \"100%\",\r\n                            height: \"50px\",\r\n                            zIndex: 1500,\r\n                        }}\r\n                    >\r\n                        <Navbar.Brand href=\"#/\">Context AR</Navbar.Brand>\r\n                    </Navbar>\r\n                    {this.NavMenu()}\r\n                </div>\r\n\r\n                <div\r\n                    ref={this.center_container}\r\n                    className=\"center_container\"\r\n                    style={{\r\n                        position: \"fixed\",\r\n                        top: \"50px\",\r\n                        bottom: \"0\",\r\n                        width: \"100%\",\r\n                        height: \"calc(100% - 50px)\",\r\n                    }}\r\n                >\r\n                    <Switch>\r\n                        <Route exact path=\"/menu\" component={Menu} />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/modules/edit\"\r\n                            component={ManageModules}\r\n                        />\r\n                        <Route exact path=\"/modules\" component={ViewModules} />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/module/:id/pins/edit\"\r\n                            component={DropPin}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/module/:id/pins\"\r\n                            component={ViewPinOnMap}\r\n                        />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/module/:id/edit\"\r\n                            component={EditModule}\r\n                        />\r\n                        <Route path=\"/module/:id\" component={Module} />\r\n\r\n                        <Route exact path=\"/\">\r\n                            {this.Home}\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}