{"version":3,"sources":["components/DropPin.js","../node_modules/require_optional sync","components/clientdb.js","components/MapView.js","components/mode.js","components/Menu/Menu.js","components/Login.js","components/Menu/NavMenu.js","components/Module.js","components/EditModule.js","components/ViewModules.js","components/ManageModules.js","components/ViewPinOnMap.js","components/completed.js","App.js","serviceWorker.js","index.js"],"names":["globalPosition","floatStyle","position","width","height","bottom","right","backgroundColor","color","borderRadius","textAlign","boxShadow","zIndex","HandleUpload","base64data","id","basestring","replace","fileBuffer","Buffer","binaryImageData","BSON","Binary","Uint8Array","aws","client","getServiceClient","AwsServiceClient","factory","args","ACL","Bucket","ContentType","Key","ContentEncoding","Body","request","AwsRequest","Builder","withService","withAction","withRegion","withArgs","execute","build","then","result","console","log","catch","err","OpenFile","props","srcurl","imgurl","type","multiple","onChange","e","fileReader","FileReader","readAsDataURL","target","files","onloadend","setbase64data","HandleFileChange","style","src","onError","onerror","EditForm","useState","pin","setPin","handleInputChange","name","value","Date","now","setimgurl","centered","show","Header","Title","Group","Label","Control","title","as","rows","description","hint","destination","Footer","variant","onClick","cancel","save","PinMarker","modalShow","setModalShow","key","coords","_id","query","update","$set","db","collection","findOneAndUpdate","objectID","toString","AddpinForm","placeholder","setPlaceHolder","categories","setCategories","useEffect","find","asArray","onSelect","JSON","parse","Toggle","Menu","map","curr","placeholders","Item","eventKey","stringify","className","htmlFor","required","placeHolder","onHide","document","getElementById","lng","lat","owner_id","auth","authInfo","userId","audio","video","insertOne","res","insertedId","setMarkers","markers","module","pins","setModule","upsert","error","DropPin","setPosition","canPlacePin","setCanPlacePin","owner_email","owner_name","shared_array","public","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","ObjectId","match","params","findOne","pipeline","$match","$in","$addFields","__order","$indexOfArray","$sort","aggregate","toArray","center","zoom","latlng","left","window","history","back","fontSize","url","attribution","webpackEmptyContext","req","Error","code","keys","resolve","exports","appId","Stitch","hasAppClient","getAppClient","initializeDefaultAppClient","RemoteMongoClient","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","myIcon","divIcon","html","searchStyle","MapView","state","currentLocation","userLocation","userLocationFound","modules","getpins","bind","getUserPosition","getDistance","toRadian","centerMap","newZip","mongodb","setState","this","origin","lon1","lat1","lon2","lat2","deltaLat","deltaLon","a","Math","pow","sin","cos","asin","sqrt","degree","PI","isLoggedIn","$ne","shared_with","userProfile","data","email","pin_array","i","length","obj","refs","leafletElement","doubleClickZoom","disable","setTimeout","enable","setView","zip_code","prompt","fetch","response","json","records","fields","geopoint","alert","Marker","icon","Popup","Map","ref","maxZoom","TileLayer","info","idx","location","assign","faStreetView","size","faSearchLocation","Component","userMode","username","useremail","userID","stitch_res","menuOpen","open","usermode","first_name","picture","$and","user_id","credential","GoogleRedirectCredential","loginWithRedirect","temp_module_name","owner","StyledMenu","setOpen","center_container","marginBottom","marginTop","userImg","alt","maxHeigh","maxWidth","top","marginLeft","listStyleType","paddingLeft","current","opacity","href","display","transition","flexDirection","transform","paddingTop","logout","reload","data-toggle","aria-pressed","autoComplete","set_usermode","styled","nav","innerHeight","Login","login","hasRedirectResult","handleRedirectResult","user","class","margin","StyledBurger","button","Burger","NavMenu","React","Module","fileToBase64","filename","filepath","Promise","file","File","reader","onload","event","current_position","module_info","base64img","accessed_links","fetch_userinfo","update_user","initializeAppClient","undefined","includes","$addToSet","Container","EditModule","ind","modal","modal2","copied","link","show_modal","show_modal2","hide_modal","hide_modal2","delete_pin_modal","share_modal","list_shared","add_email","delete_email","delete_email_modal","copy_clipboard","save_pin","delete_pin","list_pins","module_form","save_pin_order","save_module","textArea","select","execCommand","copy","modal_message","Modal","closeButton","Button","preventDefault","returnNewDocument","$pull","multi","Row","form","Col","xs","FormGroup","FormControl","plaintext","readOnly","sz","maxHeight","overflowY","overflowX","Form","block","textarea","pathname","justifyContent","Check","inline","label","checked","values","oldIndex","newIndex","arrayMove","renderList","children","renderItem","index","deleteOne","splice","pin_ids","updateOne","Tabs","defaultActiveKey","Tab","ViewModules","my_modules","shared_modules","img1","accessed_modules","module_results","goto_module_id","createRef","add_module_cards","fetch_modules","goto_module","0","1","2","$setOnInsert","options","userid","Card","Width","Img","process","Subtitle","Text","mds","module_card","CardDeck","defaultTab","my_modules_tab","query_modules","userQuery","$regex","$options","docs","forceUpdate","marginRight","onSubmit","controlId","ManageModules","toggle","list_modules","delete_module","add_module","save_modules","all","nextButtonStyle","previousButtonStyle","currentButtonStyle","ViewPinOnMap","pins_line","pins_array","current_pin_index","finish_modal","bounds","search","split","shareUrl","host","drawpins","interval","setInterval","clearInterval","userloc","openPopup","temp","toggle_modal","FacebookShareButton","FacebookIcon","RedditShareButton","RedditIcon","TwitterShareButton","TwitterIcon","EmailShareButton","EmailIcon","go_home","marker_icon","len","openGoogle","ButtonGroup","nextPin","faArrowAltCircleRight","previousPin","faArrowAltCircleLeft","currentPin","faMapMarkerAlt","imgSrc","Completed","setUsername","useParams","App","Home","cleanUrl","join","stitchClient","basename","Navbar","Brand","exact","path","component","Boolean","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.255bea59.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { BSON } from \"mongodb-stitch-browser-sdk\"\r\nimport { AwsServiceClient, AwsRequest } from 'mongodb-stitch-browser-services-aws'\r\nimport { Button, Form, Modal, Dropdown } from \"react-bootstrap\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport { client, db } from \"./clientdb\"\r\nvar base64data = 'default'\r\n\r\n\r\nvar globalPosition = {};\r\n\r\nconst floatStyle = {\r\n    position: \"fixed\",\r\n    width: \"60px\",\r\n    height: \"60px\",\r\n    bottom: \"40px\",\r\n    right: \"40px\",\r\n    backgroundColor: \"#0C9\",\r\n    color: \"#FFF\",\r\n    borderRadius: \"50px\",\r\n    textAlign: \"center\",\r\n    boxShadow: \"2px 2px 3px #999\",\r\n    zIndex: 1500,\r\n};\r\n\r\nvar HandleFileChange = (props, e) => {\r\n    let fileReader = new FileReader();\r\n    fileReader.readAsDataURL(e.target.files[0])\r\n    fileReader.onloadend = (e) => {\r\n        props.setbase64data(e.target.result)\r\n        return e.target.result\r\n    }\r\n}\r\n\r\nconst HandleUpload = (base64data, id) => {\r\n    // Convert the base64 encoded image string to a BSON Binary object\r\n    var basestring = base64data.replace(/^data:image\\/\\w+;base64,/, '');\r\n    var fileBuffer = new Buffer(basestring, 'base64');\r\n    const binaryImageData = new BSON.Binary(new Uint8Array(fileBuffer), 0)\r\n\r\n    const aws = client.getServiceClient(AwsServiceClient.factory, \"capstoneusercontent\");\r\n    // These are the arguments specifically for the s3 service PutObject function\r\n    const args = {\r\n        ACL: 'public-read',\r\n        Bucket: \"capstoneusercontent\",\r\n        ContentType: \"image/jpeg\",\r\n        Key: id + '.jpeg',\r\n        ContentEncoding: 'base64',\r\n        Body: binaryImageData,\r\n        // or Body could be a BSON object\r\n    };\r\n\r\n    const request = new AwsRequest.Builder()\r\n        .withService(\"s3\")\r\n        .withAction(\"PutObject\")\r\n        .withRegion(\"us-west-2\") // this is optional\r\n        .withArgs(args); // depending on the service and action, this may be optional as well\r\n    aws.execute(request.build())\r\n        .then(result => {\r\n            console.log(result)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n}\r\n\r\nconst OpenFile = (props) => {\r\n    console.log(\"open file\")\r\n\r\n    console.log(props.base64data)\r\n    var srcurl = ''\r\n    if(props.base64data === 'default'){\r\n        srcurl = props.imgurl\r\n    }\r\n    else{\r\n        srcurl = props.base64data\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"file\" multiple=\"single\" onChange={(e) => {\r\n                HandleFileChange(props, e)\r\n            }}></input>\r\n            <img style={{\r\n                height: '200px',\r\n                width : '300px'\r\n                    }} \r\n                src={srcurl}\r\n                onError={(e)=>{e.target.onerror = null; e.target.src='https://capstoneusercontent.s3-us-west-2.amazonaws.com/default.png'}}></img>\r\n              \r\n        </div>\r\n    )\r\n}\r\n\r\nexport const EditForm = (props) => {\r\n    const [pin, setPin] = useState(props.pin);\r\n    const handleInputChange = (e) => {\r\n        setPin({ ...pin, [e.target.name]: e.target.value });\r\n    };\r\n    const [imgurl, setimgurl] = useState(\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + props.id + \".jpeg?versionid=latest&date=\" + Date.now());\r\n\r\n\r\n    return (\r\n        <Modal {...props} centered show={props.show} style={{ zIndex: \"1600\" }}>\r\n            <Modal.Header>\r\n                <Modal.Title>Edit a Pin</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control\r\n                            type=\"title\"\r\n                            id=\"title\"\r\n                            name=\"title\"\r\n                            value={pin.title}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows=\"2\"\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            value={pin.description}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Hint</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows=\"2\"\r\n                            id=\"hint\"\r\n                            name=\"hint\"\r\n                            value={pin.hint}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Destination</Form.Label>\r\n                        <Form.Control\r\n                            id=\"destination\"\r\n                            name=\"destination\"\r\n                            value={pin.destination}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <OpenFile base64data={props.base64data} setbase64data={props.setbase64data} imgurl={imgurl} setimgurl={setimgurl}></OpenFile>\r\n                        <img style={{\r\n                            height: '200px',\r\n                            width: '300px'\r\n                        }} src={imgurl}></img>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={\r\n                    () =>{\r\n                        props.cancel()\r\n                        props.setbase64data('default')\r\n                    }\r\n                    }>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    variant=\"primary\"\r\n                    onClick={() => {\r\n                        /*\r\n                  \r\n                                          const title =\r\n                                              document.getElementById(\"title\").value || \"\";\r\n                                          const hint =\r\n                                              document.getElementById(\"hint\").value || \"\";\r\n                                          const description =\r\n                                              document.getElementById(\"description\").value || \"\";\r\n                                          const destination =\r\n                                              document.getElementById(\"destination\").value || \"\";\r\n                                          const query = { _id: props.objectID };\r\n                                          const update = {\r\n                                              $set: {\r\n                                                  title: title,\r\n                                                  description: description,\r\n                                                  hint: hint,\r\n                                                  destination: destination,\r\n                                              },\r\n                                          };\r\n                                          // update a pin on the database\r\n                                          db.collection(\"PINS\")\r\n                                              .findOneAndUpdate(query, update)\r\n                                              .then((objectID) => {\r\n                                                  console.log(objectID._id.toString())\r\n                                                  console.log(base64data)\r\n                                                  if(base64data === \"default\")\r\n                                                  {}\r\n                                                  else{\r\n                                                      //upload image\r\n                                                      HandleUpload(base64data, objectID._id.toString())\r\n                  \r\n                                                  }\r\n                                                  \r\n                                                  setDefaultValues({\r\n                                                      title: title,\r\n                                                      description: description,\r\n                                                      hint: hint,\r\n                                                      destination: destination\r\n                                                  });\r\n                                                  setimgurl(\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + props.id + \".jpeg?versionid=latest&date=\" + Date.now())\r\n                                                  props.cancel();\r\n                                              });\r\n                  */\r\n                        props.save(pin);\r\n                    }}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst PinMarker = (props) => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [base64data, setbase64data] = useState(\"default\");\r\n\r\n    return (\r\n        <Marker\r\n            key={globalPosition}\r\n            position={props.pin.coords}\r\n            onClick={() => {\r\n                setModalShow(!modalShow);\r\n            }}\r\n        >\r\n            <EditForm\r\n                pin={props.pin}\r\n                id={props.pin._id}\r\n                show={modalShow}\r\n                save={(pin) => {\r\n                    const query = { _id: pin._id };\r\n                    const update = {\r\n                        $set: pin,\r\n                    };\r\n                    // update a pin on the database\r\n                    db.collection(\"PINS\")\r\n                        .findOneAndUpdate(query, update)\r\n                        .then((objectID) => {\r\n                            if (base64data === \"default\") { }\r\n                            else {\r\n                                //upload image\r\n                                HandleUpload(base64data, objectID._id.toString())\r\n                                setbase64data(\"default\")\r\n\r\n                            }\r\n                            setModalShow(false);\r\n\r\n                        });\r\n                }}\r\n                cancel={() => setModalShow(false)}\r\n                setbase64data={setbase64data}\r\n                base64data={base64data}\r\n            />\r\n        </Marker>\r\n    );\r\n};\r\n\r\nconst AddpinForm = (props) => {\r\n    const [placeholder, setPlaceHolder] = useState({\r\n        hint: \"\",\r\n        description: \"\"\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n    useEffect(() => {\r\n        db.collection(\"CATEGORIES\")\r\n            .find({})\r\n            .asArray()\r\n            .then(setCategories);\r\n    }, []);\r\n\r\n    return (\r\n        <Modal {...props} centered style={{ zIndex: \"1600\" }}>\r\n            <Modal.Header>\r\n                <Modal.Title>Add a Pin</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Group>\r\n                    <Form.Label>Category</Form.Label>\r\n                    <Dropdown\r\n                        onSelect={(e) => {\r\n                            setPlaceHolder(JSON.parse(e));\r\n                        }}\r\n                    >\r\n                        <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                            Dropdown Button\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {categories.map(curr => {\r\n                                const placeholders = { description: curr.description, hint: curr.hint };\r\n                                return (<Dropdown.Item\r\n                                    eventKey={JSON.stringify(placeholders)}\r\n                                >\r\n                                    {curr.title}\r\n                                </Dropdown.Item>)\r\n                            }\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Form.Group>\r\n                <label className=\"d-block\" htmlFor=\"title\">\r\n                    Title\r\n                </label>\r\n                <input type=\"text\" className=\"w-100\" id=\"title\" required />\r\n                <label className=\"d-block\" htmlFor=\"description\">\r\n                    Description\r\n                </label>\r\n                <textarea className=\"w-100\" id=\"description\" placeHolder={placeholder.description} required />\r\n                <label className=\"d-block\" htmlFor=\"hint\">\r\n                    Hint\r\n                </label>\r\n                <textarea className=\"w-100\" id=\"hint\" placeHolder={placeholder.hint} required />\r\n                <label className=\"d-block\" htmlFor=\"destination\">\r\n                    Student Feedback\r\n                </label>\r\n                <textarea className=\"w-100\" id=\"destination\" required />\r\n                <label className=\"d-block\" htmlFor=\"pinImage\">\r\n                    Image\r\n                </label>\r\n                <OpenFile base64data={props.base64data} setbase64data={props.setbase64data}> </OpenFile>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <button className=\"btn btn-secondary\" onClick={ ()=> {\r\n                    props.onHide() \r\n                    props.setbase64data(\"default\")\r\n                }}>\r\n                    Cancel\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => {\r\n                        const title =\r\n                            document.getElementById(\"title\").value || \"\";\r\n                        const hint =\r\n                            document.getElementById(\"hint\").value || \"\";\r\n                        const description =\r\n                            document.getElementById(\"description\").value || \"\";\r\n                        const destination =\r\n                            document.getElementById(\"destination\").value || \"\";\r\n                        const { lng, lat } = globalPosition;\r\n                        // insert a new pin on the database\r\n                        const pin = {\r\n                            title: title,\r\n                            owner_id: client.auth.authInfo.userId,\r\n                            description: description,\r\n                            hint: hint,\r\n                            destination: destination,\r\n                            audio: \"\",\r\n                            video: \"\",\r\n                            coords: [lat, lng],\r\n                        };\r\n                        db.collection(\"PINS\")\r\n                            .insertOne(pin)\r\n                            .then((res) => {\r\n                                if (props.base64data === \"default\") { }\r\n                                else {\r\n                                    //upload image\r\n                                    HandleUpload(props.base64data, res.insertedId.toString())\r\n                                    props.setbase64data(\"default\")\r\n\r\n                                }\r\n                                // add the new pin to the map on success of adding the pin to\r\n                                // to the database\r\n                                props.setMarkers([\r\n                                    ...props.markers,\r\n                                    <PinMarker\r\n\r\n                                        id={res.insertedId.toString()}\r\n                                        description={description}\r\n                                        hint={hint}\r\n                                        destination={destination}\r\n                                        title={title}\r\n                                        objectID={res.insertedId}\r\n                                        lng={lng}\r\n                                        lat={lat}\r\n\r\n                                        key={res.insertedId}\r\n                                        pin={pin}\r\n\r\n                                    />,\r\n                                ]);\r\n                                var module = props.module;\r\n                                module.pins = [...module.pins, res.insertedId];\r\n                                props.setModule(module);\r\n                                const query = { _id: module._id };\r\n                                const update = {\r\n                                    $set: {\r\n                                        pins: module.pins,\r\n                                    },\r\n                                };\r\n                                const options = { upsert: false };\r\n                                db.collection(\"MODULES\")\r\n                                    .findOneAndUpdate(query, update, options)\r\n                                    .then((res) => { })\r\n                                    .catch(console.error);\r\n                            });\r\n                        props.onHide();\r\n                    }}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst DropPin = (props) => {\r\n    const [position, setPosition] = useState([45, 45]);\r\n    const [markers, setMarkers] = useState([]);\r\n    const [canPlacePin, setCanPlacePin] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [base64data, setbase64data] = useState(\"default\");\r\n    const [module, setModule] = useState({\r\n        _id: \"\",\r\n        title: \"\",\r\n        owner_email: \"\",\r\n        owner_id: \"\",\r\n        owner_name: \"\",\r\n        description: \"\",\r\n        pins: [],\r\n        shared_array: [],\r\n        public: false,\r\n    });\r\n\r\n    // Getting the users current location\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((pos) => {\r\n            const { latitude, longitude } = pos.coords;\r\n            setPosition([latitude, longitude]);\r\n        });\r\n    }, []);\r\n\r\n    // Getting the module and pins for the module\r\n    useEffect(() => {\r\n        const query = {\r\n            _id: ObjectId(props.match.params.id),\r\n        };\r\n        db.collection(\"MODULES\")\r\n            .findOne(query)\r\n            .then((res) => {\r\n                setModule(res);\r\n\r\n                // Pipeline to ensure that the order of the pins stays the same after the query\r\n                const pipeline = [\r\n                    { $match: { _id: { $in: res.pins } } },\r\n                    {\r\n                        $addFields: {\r\n                            __order: { $indexOfArray: [res.pins, \"$_id\"] },\r\n                        },\r\n                    },\r\n                    { $sort: { __order: 1 } },\r\n                ];\r\n\r\n                db.collection(\"PINS\")\r\n                    .aggregate(pipeline)\r\n                    .toArray()\r\n                    .then((res) => {\r\n                        setMarkers(\r\n                            res.map((pin) => {\r\n                                return <PinMarker\r\n                                    key={pin._id} pin={pin}\r\n                                    setbase64data={setbase64data}\r\n                                    base64data={base64data}\r\n                                />;\r\n                            })\r\n                        );\r\n                    });\r\n            })\r\n            .catch(console.error);\r\n    }, [props.match.params.id]);\r\n\r\n    return (\r\n        <Map\r\n            center={position}\r\n            zoom={13}\r\n            onClick={(e) => {\r\n                if (canPlacePin) {\r\n                    globalPosition = e.latlng;\r\n                    setModalShow(true);\r\n                    setCanPlacePin(!canPlacePin);\r\n                }\r\n            }}\r\n        >\r\n            <AddpinForm\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                setMarkers={setMarkers}\r\n                markers={markers}\r\n                setModule={setModule}\r\n                module={module}\r\n                setbase64data={setbase64data}\r\n                base64data={base64data}\r\n            />\r\n            <button\r\n                style={{\r\n                    zIndex: 1500,\r\n                    position: \"fixed\",\r\n                    bottom: \"10px\",\r\n                    left: \"10px\",\r\n                    textAlign: \"center\",\r\n                }}\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                    window.history.back();\r\n                }}\r\n            >\r\n                Save\r\n            </button>\r\n            <button\r\n                style={floatStyle}\r\n                onClick={() => setCanPlacePin(!canPlacePin)}\r\n            >\r\n                <div style={{ fontSize: \"40px\" }}>+</div>\r\n            </button>\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            <Marker position={position}>\r\n                <Popup>Your location</Popup>\r\n            </Marker>\r\n            {markers}\r\n        </Map>\r\n    );\r\n};\r\n\r\nexport default DropPin;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 233;","import { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\"\r\n\r\nconst appId = \"capstonear_app-xkqng\";\r\nexport const client = Stitch.hasAppClient(appId)\r\n    ? Stitch.getAppClient(appId)\r\n    : Stitch.initializeDefaultAppClient(appId);\r\nconst mongodb = client.getServiceClient(\r\n    RemoteMongoClient.factory,\r\n    \"mongodb-atlas\"\r\n);\r\nexport const db = mongodb.db(\"APP\");","import React, {Component} from 'react'\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L from 'leaflet'\r\nimport {Stitch, RemoteMongoClient, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\r\nimport { ObjectId } from 'mongodb'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStreetView,faSearchLocation } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nconst Style = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"40px\",\r\n  backgroundColor: \"#0C9\",\r\n  color: \"#FFF\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500\r\n}\r\nvar greenIcon = new L.Icon({\r\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  shadowSize: [41, 41]\r\n});\r\n\r\nvar myIcon = new L.divIcon({\r\n  className: 'my-div-icon',\r\n  html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png\"/>'\r\n})\r\n\r\nconst floatStyle = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"40px\",\r\n  backgroundColor: \"#0C9\",\r\n  color: \"#FFF\",\r\n  borderRadius: \"50px\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500,\r\n};\r\nconst searchStyle = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"120px\",\r\n  backgroundColor: \"purple\",\r\n  color: \"#FFF\",\r\n  borderRadius: \"50px\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500,\r\n};\r\n\r\nclass MapView extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state ={\r\n      currentLocation: {lat: 45.51, lng:-122.68},\r\n      zoom: 13,\r\n      userLocation:[],\r\n      userLocationFound: false,\r\n      modules: [],\r\n      pins: [],\r\n    }\r\n\r\n  this.getpins = this.getpins.bind(this)\r\n  this.getUserPosition = this.getUserPosition.bind(this)\r\n  this.getDistance = this.getDistance.bind(this)\r\n  this.toRadian = this.toRadian.bind(this)\r\n  this.centerMap = this.centerMap.bind(this)\r\n  this.newZip = this.newZip.bind(this)\r\n\r\n\r\n  const appId = \"capstonear_app-xkqng\"\r\n  this.client = Stitch.hasAppClient(appId)\r\n  ? Stitch.getAppClient(appId)\r\n  : Stitch.initializeDefaultAppClient(appId)\r\n  const mongodb = this.client.getServiceClient(\r\n  RemoteMongoClient.factory,\r\n  \"mongodb-atlas\"\r\n  );\r\n  this.db = mongodb.db(\"APP\"); \r\n  }\r\n  \r\n\r\n  getUserPosition(){\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\r\n      \r\n      console.log(this.state)\r\n      \r\n    })\r\n  \r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getUserPosition()\r\n    this.getpins()\r\n\r\n  }\r\n\r\n  //find distance between two points in meters. Returns true for less than meters or false if not\r\n  getDistance(origin, destination) {\r\n    var lon1 = this.toRadian(origin[1]);\r\n    var lat1 = this.toRadian(origin[0]);\r\n    var lon2 = this.toRadian(destination[1]);\r\n    var lat2 = this.toRadian(destination[0]);\r\n\r\n    var deltaLat = lat2 - lat1;\r\n    var deltaLon = lon2 - lon1;\r\n\r\n    var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\r\n    var c = 2 * Math.asin(Math.sqrt(a));\r\n    var EARTH_RADIUS = 6371;\r\n    var d = c * EARTH_RADIUS * 1000;\r\n\r\n    // 24000 meters ~ 15 miles\r\n    if(d < 35000)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  toRadian(degree) {\r\n    return degree*Math.PI/180;\r\n  }\r\n\r\n  async getpins() {\r\n    if(!this.client.auth.isLoggedIn){\r\n      return\r\n    }\r\n    await this.db.collection(\"MODULES\")\r\n      .find({\r\n        owner_id: { $ne: this.client.auth.authInfo.userId},\r\n        shared_with: { $ne: this.client.auth.authInfo.userProfile.data.email},\r\n        public: true,\r\n        pins: { $ne: []},\r\n      })\r\n      .asArray()\r\n      .then((res) => {\r\n        this.setState({modules: res})\r\n        res = res.map(curr => {\r\n          curr = curr.pins[0];\r\n          return curr;\r\n        })\r\n        this.setState({pin_array: res})\r\n        console.log(\"Pin Array: \", res);\r\n        console.log(\"Modules: \", this.state.modules);\r\n      })\r\n\r\n    await this.db\r\n      .collection(\"PINS\")\r\n      .find({\r\n        _id: { $in: [...this.state.pin_array]}\r\n      })\r\n      .toArray()\r\n      .then((res) => {\r\n        res = res.map(curr => {\r\n          curr = curr.coords;\r\n          return curr;\r\n        })\r\n        console.log(\"Pins: \", res);\r\n        this.setState({ pins: res });\r\n      });\r\n\r\n    // limits pins to only those within specific miles of userlocation\r\n    var pins = [...this.state.pins];\r\n    var modules = [...this.state.modules];\r\n    for(var i = 0; i < this.state.pins.length; i++) {\r\n      if(!this.getDistance(this.state.userLocation, this.state.pins[i])) {\r\n        if(i !== -1)\r\n          delete pins[i];\r\n          delete modules[i];\r\n      }\r\n    }\r\n    this.setState({ pins: pins });\r\n    this.setState({ modules: modules});\r\n  }\r\n\r\n  centerMap(obj,coords)\r\n  {\r\n\r\n    if(this.state.userLocation.length!=0)\r\n    {\r\n      this.getUserPosition()\r\n      const map = this.refs.map.leafletElement;\r\n      map.doubleClickZoom.disable();\r\n      setTimeout(function() {\r\n         map.doubleClickZoom.enable();\r\n      }, 1000);\r\n      map.setView(coords, 13);\r\n      \r\n     \r\n    }\r\n    else\r\n    {\r\n      var zip_code = prompt(\"Please enter your zip code\");\r\n      if (zip_code != null) {\r\n        fetch('https://public.opendatasoft.com/api/records/1.0/search/?dataset=us-zip-code-latitude-and-longitude&q='+zip_code+'&facet=state&facet=timezone&facet=dst')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({currentLocation:data.records[0].fields.geopoint,userLocation:data.records[0].fields.geopoint}));\r\n        //console.log(data.records[0].fields.geopoint))\r\n        this.getpins(); \r\n        \r\n      }\r\n    }\r\n\r\n  }\r\n  newZip()\r\n  {\r\n    //var zip_code = null;\r\n    var zip_code = prompt(\"Please enter your zip code\");\r\n      if (zip_code != null) {\r\n        fetch('https://public.opendatasoft.com/api/records/1.0/search/?dataset=us-zip-code-latitude-and-longitude&q='+zip_code+'&facet=state&facet=timezone&facet=dst')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({currentLocation:data.records[0].fields.geopoint,userLocation:data.records[0].fields.geopoint}))\r\n        .catch( (err) => {\r\n          console.log(err)\r\n          alert(\"You have entered an incorrect zipcode! Please try again!\")\r\n          }\r\n            \r\n         )\r\n        \r\n        //console.log(data.records[0].fields.geopoint))\r\n        this.getpins(); \r\n\r\n\r\n      }\r\n  }\r\n\r\n  render(){\r\n    const userLocation = this.state.userLocationFound ? (\r\n      <Marker position={this.state.userLocation} icon= {myIcon} >\r\n        <Popup >Your location</Popup>\r\n      </Marker>\r\n    ) :  (\r\n      <Marker position={this.state.currentLocation} icon= {myIcon} >\r\n        <Popup >Your location</Popup>\r\n      </Marker>\r\n    )\r\n\r\n    return (\r\n      <div id='leaflet-container'>\r\n      <Map ref='map' center={this.state.currentLocation} zoom={13} maxZoom={18} >\r\n        <TileLayer\r\n          \r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n        />\r\n        {userLocation}   \r\n        {this.state.pins.map((info,idx) => {\r\n            return <Marker \r\n              key = {idx} position={info} \r\n              icon= {new L.divIcon({\r\n                className: 'my-div-icon',\r\n                html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png\"/>' \r\n              })} >\r\n              <Popup>\r\n                <h1>{this.state.modules[idx].title}</h1>\r\n                <p>{this.state.modules[idx].description}</p>\r\n                <p>{this.state.modules[idx].owner_name}</p>\r\n                <p>{this.state.modules[idx].owner_email}</p>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() =>\r\n                  window.location.assign(\"#/module/\" + this.state.modules[idx]._id)\r\n                  }\r\n                  >View Details</button>\r\n              </Popup>\r\n            </Marker>\r\n          })}  \r\n          <button style={floatStyle} onClick={()=>this.centerMap(this,this.state.userLocation)} >\r\n            <div><FontAwesomeIcon icon={faStreetView} size=\"3x\" /></div>\r\n          </button>\r\n          <button style={searchStyle} onClick={()=>this.newZip()} >\r\n            <div><FontAwesomeIcon icon={faSearchLocation} size=\"3x\" /></div>\r\n          </button>\r\n          \r\n      </Map>\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default MapView;","export let userMode = true;\r\n\r\nexport function toggle_usermode() {\r\n    userMode = !userMode;\r\n    return userMode;\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n    Stitch,\r\n    RemoteMongoClient,\r\n    GoogleRedirectCredential,\r\n} from \"mongodb-stitch-browser-sdk\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport { db } from \"../clientdb\";\r\nimport styled from \"styled-components\";\r\nimport { userMode, toggle_usermode } from \"../mode\";\r\nimport './toggle.css';\r\n \r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            useremail: \"\",\r\n            userID: \"\",\r\n            stitch_res: [],\r\n            menuOpen: this.props.open,\r\n            usermode: userMode, //usermode  true = viewer, false = creator\r\n        };\r\n\r\n        console.log(props);\r\n        const appId = \"capstonear_app-xkqng\";\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId);\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n            );\r\n            //select the db in our mongdb atlas cluster\r\n            this.db = mongodb.db(\"APP\");\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        //init mongodb stitch\r\n\r\n        if (\r\n            this.client.auth.isLoggedIn &&\r\n            this.client.auth.authInfo.userProfile\r\n        ) {\r\n            const username = this.client.auth.authInfo.userProfile.data.first_name;\r\n            const userID = this.client.auth.authInfo.userId;\r\n            this.setState({\r\n                username,\r\n                userID,\r\n                useremail: this.client.auth.authInfo.userProfile.data.email,\r\n                userID: this.client.auth.authInfo.userId,\r\n                userImg: this.client.auth.authInfo.userProfile.data.picture,\r\n            });\r\n            db.collection(\"USERS\")\r\n                .findOne({ $and: [ { user_id: userID }, { username }] })\r\n                .then((data)=> {\r\n                    if(data) return;\r\n                    db.collection(\"USERS\")\r\n                        .findOneAndUpdate({ user_id: userID }, { $set: { username } })\r\n                })\r\n            console.log(this.client.auth.authInfo.userProfile.data);\r\n        }\r\n    }\r\n\r\n    //login button handler\r\n    async login() {\r\n        //login using google redirect\r\n        const credential = new GoogleRedirectCredential();\r\n        this.client.auth.loginWithRedirect(credential);\r\n        console.log(this.state);\r\n    }\r\n \r\n\r\n\r\n    addamodule() {\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .insertOne({\r\n                owner_id: this.state.userID,\r\n                name: this.state.temp_module_name,\r\n                owner: this.state.useremail,\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    listmymodules() {\r\n        if (!this.client.auth.isLoggedIn) {\r\n            return;\r\n        }\r\n        this.db\r\n            .collection(\"PINS\")\r\n            .find({ _id: ObjectId(\"5ebed1bc5992681f357d7948\") })\r\n            .asArray()\r\n            .then((stitch_res) => {\r\n                this.setState({ stitch_res });\r\n                console.log(this.state.stitch_res[0]);\r\n            });\r\n    }\r\n\r\n    set_usermode() {\r\n        this.setState({usermode: toggle_usermode()})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <StyledMenu\r\n                open={this.props.open}\r\n                setOpen={this.props.setOpen}\r\n                center_container={this.props.center_container}\r\n                style={{}}\r\n            >\r\n                <div style={{marginBottom: \"2rem\", marginTop: \"1rem\"}}>\r\n                    <img\r\n                        src={this.state.userImg}\r\n                        alt=\"test\"\r\n                        style={{\r\n                            maxHeigh: \"40px\",\r\n                            maxWidth: \"40px\",\r\n                            borderRadius: \"50%\",\r\n                            top: \"1rem\",\r\n                        }}\r\n                    />\r\n                    <span\r\n                        style={{\r\n                            position: \"relative\",\r\n                            top: \"5px\",\r\n                            marginLeft: \"1rem\",\r\n                            fontSize: \"1.5rem\",\r\n                            color: \"white\",\r\n                        }}\r\n                    >\r\n                        {this.state.username}\r\n                    </span>\r\n                </div>\r\n                <ul\r\n                    style={{ listStyleType: \"none\", paddingLeft: 0}}\r\n                    onClick={() => {\r\n                        this.props.center_container.center_container.current.style.opacity = 1;\r\n                        this.props.setOpen(!this.props.open);\r\n                    }}\r\n                >\r\n                    <li>\r\n                        <a href=\"#/\">Home</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href={`#/modules/${this.state.usermode ? \"student\": \"instructor\"}`}>View </a>\r\n                    </li>\r\n                    <li \r\n                        style={{\r\n                            display: \"flex\",\r\n                            transition: \"transform 0.3s ease-in-out\",\r\n                            flexDirection: \"column\",\r\n                            transform: this.state.usermode ? \"translateX(150%)\" : \"translateX(0%)\",\r\n                        }}\r\n                    >\r\n                        <a style={{ paddingTop: \"0rem\"}} href=\"#/modules/edit\">Create</a>\r\n                    </li>\r\n                    <li>\r\n                        <a\r\n                            href=\"#/logout\"\r\n                            onClick={() => {\r\n                                this.client.auth.logout()\r\n                                    .then(() => {\r\n                                        this.setState({\r\n                                            username: \"\",\r\n                                            useremail: \"\",\r\n                                            userID: \"\",\r\n                                        });\r\n                                        window.location.reload();\r\n                                    })\r\n                            }}\r\n                            style={{ fontSize: \"1rem\" }}\r\n                        >\r\n                            Log Out\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n\r\n                <div style={{ position: \"absolute\", bottom: \"1rem\" }}>\r\n                    <button type=\"button\" \r\n                        className={`btn btn-md btn-toggle ${this.state.usermode || \"active\"}`} \r\n                        data-toggle=\"button\" aria-pressed={this.state.usermode || \"true\"} \r\n                        autoComplete=\"off\"\r\n                        onClick={()=>this.set_usermode()}\r\n                    >\r\n                        <div className=\"handle\" />\r\n                    </button>\r\n                </div>\r\n            </StyledMenu>\r\n        );\r\n    }\r\n}\r\n\r\n// menu style sheet\r\n// tutorial from https://css-tricks.com/hamburger-menu-with-a-side-of-react-hooks-and-styled-components/ with modified styles\r\nconst StyledMenu = styled.nav`\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: #343a40;\r\n    transform: ${({ open }) => open ? \"translateX(-100)\" : \"translateX(100%)\"};\r\n    height: ${window.innerHeight - (window.innerHeight*.02)}px;\r\n    text-align: left;\r\n    padding: 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    transition: transform 0.3s ease-in-out;\r\n    z-index: 1501;\r\n    min-width: 300px;\r\n    @media (max-width: 150px) {\r\n        width: 100%;\r\n    }\r\n    li {\r\n        padding-top: 0.5rem;\r\n        padding-bottom: 0.5rem;\r\n    }\r\n    a {\r\n        font-size: 1.5rem;\r\n        text-transform: uppercase;\r\n        font-weight: Light;\r\n        letter-spacing: 0.5rem;\r\n        color: #FFFFF;\r\n        text-decoration: none;\r\n        transition: color 0.3s linear;\r\n        @media (max-width: 150px) {\r\n            font-size: 1rem;\r\n            text-align: center;\r\n        }\r\n        &:hover {\r\n            color: #343078;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Menu;","import React, {Component} from 'react'\r\nimport './Login.css'\r\nimport {Stitch, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\r\n\r\nexport default class Login extends Component{\r\n    constructor(){\r\n        super()\r\n        const appId = \"capstonear_app-xkqng\"\r\n        this.client = Stitch.getAppClient(appId)\r\n        this.login = this.login.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n      if (this.client.auth.hasRedirectResult()) {\r\n        console.log(\"has results\")\r\n  \r\n        this.client.auth.handleRedirectResult().then(user => {\r\n          this.setState(\r\n            {\r\n              username: this.client.auth.authInfo.userProfile.data.name,\r\n              useremail: this.client.auth.authInfo.userProfile.data.email,\r\n              userID: this.client.auth.authInfo.userId,\r\n  \r\n            }\r\n          )\r\n          window.location.assign('#/')\r\n        }\r\n        )\r\n      }\r\n        \r\n       \r\n    }\r\n\r\n\r\n    async login(){\r\n          \r\n          //login using google redirect\r\n          const credential = new GoogleRedirectCredential();\r\n          await this.client.auth.loginWithRedirect(credential);\r\n          console.log(this.state)\r\n          \r\n        \r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      \r\n          <div class=\"row justify-content-center\" style={{\r\n            position: \"fixed\",\r\n            margin: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0,\r\n            height: \"50px\"\r\n          }}>\r\n              <button class=\"btn btn-primary\"onClick={this.login}>Login with Google</button>\r\n          </div>\r\n      \r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Menu from './Menu'\r\n\r\n\r\nconst StyledBurger = styled.button`\r\n  position: fixed;\r\n  top: 10px;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 1502;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.25rem;\r\n    background: ${({ open }) => open ? '#FFFFFF' : '#FFFFFF'};\r\n    border-radius: 10px;\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => open ? '0' : '1'};\r\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\r\n    }\r\n  }\r\n`\r\n\r\nconst Burger = ({ open, setOpen, center_container }) => {\r\n  console.log(center_container.center_container.current)\r\n  return (\r\n    <StyledBurger open={open} onClick={() => {\r\n      setOpen(!open)\r\n      if(!open)\r\n        center_container.center_container.current.style.opacity = .5 \r\n      else\r\n        center_container.center_container.current.style.opacity = 1\r\n    }}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </StyledBurger>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst NavMenu = (center_container) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n        <div>\r\n        <Burger open={open} setOpen={setOpen} center_container={center_container} />\r\n        <Menu open={open} setOpen={setOpen} center_container={center_container}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavMenu","import React, { Component} from 'react'\r\n\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\r\nimport {Container} from 'react-bootstrap'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport {Stitch,RemoteMongoClient,BSON} from \"mongodb-stitch-browser-sdk\"\r\nimport {AwsServiceClient, AwsRequest } from 'mongodb-stitch-browser-services-aws'\r\nimport {ObjectId} from 'mongodb'\r\n//const BSON = require('bson');\r\n\r\nexport default class Module extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            current_position:[],\r\n            module_info: {\r\n                name:'',\r\n                owner_email: '',\r\n                owner_id: '',\r\n                owner_name: '',\r\n                description: '',\r\n            },\r\n          \r\n            base64img:'',\r\n            user: {\r\n                _id: '',\r\n                user_id: '',\r\n                accessed_links: [],\r\n            },\r\n\r\n        }\r\n\r\n        this.getUserPosition = this.getUserPosition.bind(this)\r\n        this.fetch_userinfo = this.fetch_userinfo.bind(this)\r\n\r\n        this.update_user = this.update_user.bind(this);\r\n\r\n        const appId = \"capstonear_app-xkqng\"\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId)\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n              );\r\n              //select the db in our mongdb atlas cluster\r\n              this.db = mongodb.db(\"APP\");\r\n            console.log(\"client\")\r\n        }\r\n        else{\r\n            this.client = Stitch.initializeAppClient(appId)\r\n            console.log(\"client init\")\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.getUserPosition()\r\n        this.fetch_userinfo()\r\n\r\n        const appId = \"capstonear_app-xkqng\"\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId)\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n              );\r\n              //select the db in our mongdb atlas cluster\r\n              this.db = mongodb.db(\"APP\");\r\n            console.log(\"client\")\r\n        }\r\n        else{\r\n            this.client = Stitch.initializeAppClient(appId)\r\n            console.log(\"client init\")\r\n        }\r\n    }\r\n\r\n    async fetch_userinfo(){\r\n        await this.db.collection(\"MODULES\").find({\r\n            _id: ObjectId(this.props.match.params.id)\r\n        })\r\n        .asArray()\r\n        .then((module_info) => {\r\n            if(module_info === undefined || module_info.length === 0)\r\n            {\r\n                console.log(module_info)\r\n                return\r\n            }\r\n            this.setState({module_info: module_info[0]}\r\n            )\r\n          console.log(module_info)\r\n        }\r\n        )\r\n        .catch((err) => {this.setState({error: err})\r\n         console.log(err)\r\n        }\r\n        )\r\n\r\n        const query = {\r\n            user_id: this.client.auth.authInfo.userId,\r\n        };\r\n        await this.db\r\n            .collection(\"USERS\")\r\n            .findOne(query)\r\n            .then((res) => {\r\n                console.log(\"User: \", res);\r\n\r\n                this.setState({ user: res });\r\n            })\r\n            .catch(console.error);\r\n\r\n        this.update_user();\r\n    }\r\n\r\n    getUserPosition(){\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n          this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\r\n          \r\n          console.log(this.state)\r\n          \r\n        })\r\n    }\r\n\r\n    update_user() {\r\n        if(\r\n            this.client.auth.authInfo.userId != this.state.module_info.owner_id && this.state.module_info.public == true && !this.state.module_info.shared_with.includes(this.client.auth.authInfo.userProfile.email)){\r\n            const query = {\r\n                _id: this.state.user._id,\r\n                user_id: this.client.auth.authInfo.userId,\r\n            };\r\n            const update = { $addToSet: { accessed_links: ObjectId(this.state.module_info._id) } };\r\n    \r\n            this.db\r\n                .collection(\"USERS\")\r\n                .findOneAndUpdate(query, update)\r\n                .then((res) => {\r\n                    console.log(\"Update response: \", res);\r\n                })\r\n                .catch(console.error);\r\n        }\r\n    }\r\n\r\n    renderMap(){\r\n        const userLocation = this.state.userLocationFound ? (\r\n            <Marker position={this.state.userLocation}>\r\n              <Popup >Your location</Popup>\r\n            </Marker>\r\n          ) : null\r\n\r\n        return (\r\n        <div id='leaflet-container'>\r\n        <Map center={this.state.currentLocation} zoom={13} maxZoom={18} >\r\n            <TileLayer\r\n            \r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n            />\r\n            {userLocation}     \r\n        </Map>\r\n        </div>\r\n        )   \r\n    }\r\n\r\n\r\n    fileToBase64 = (filename, filepath) => {\r\n        return new Promise(resolve => {\r\n          var file = new File([filename], filepath);\r\n          var reader = new FileReader();\r\n          // Read file content on file loaded event\r\n          reader.onload = function(event) {\r\n            resolve(event.target.result);\r\n          };\r\n          \r\n          // Convert data to base64 \r\n          reader.readAsDataURL(file);\r\n        });\r\n      };\r\n\r\n\r\n    render(){\r\n      \r\n        return(\r\n            <Container>\r\n                title: \r\n                <br />\r\n                {this.state.module_info.title}\r\n                <br />\r\n                <br />\r\n\r\n                owner_email: \r\n                <br />\r\n                {this.state.module_info.owner_email}\r\n                <br />\r\n                <br />\r\n\r\n                owner_name: \r\n                <br />\r\n                {this.state.module_info.owner_name}\r\n                <br />\r\n                <br />\r\n\r\n                owner_id: \r\n                <br />\r\n                {this.state.module_info.owner_id}\r\n                <br />\r\n                <br />\r\n\r\n                description: \r\n                <br />\r\n                {this.state.module_info.description}\r\n                <br />\r\n                <br />\r\n              \r\n             \r\n        \r\n\r\n                <button className='btn btn-primary' \r\n                        onClick={() =>\r\n                            window.location.assign(\r\n                                \"#/module/\" + this.state.module_info._id+\"/pins\"\r\n                        )}\r\n                        >start module</button>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Button,\r\n    Tabs,\r\n    Tab,\r\n    Modal,\r\n    FormControl,\r\n    FormGroup,\r\n} from \"react-bootstrap\";\r\nimport { List, arrayMove } from \"react-movable\";\r\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport \"./EditModule.css\";\r\n\r\nimport { EditForm } from \"./DropPin\";\r\n\r\n// @classdesc Used to make the Edit Module view.\r\nexport default class EditModule extends Component {\r\n    // Creates a new EditModule\r\n    // @param {Object} props\r\n    // @class\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            module_info: {\r\n                _id: \"\",\r\n                title: \"\",\r\n                owner_email: \"\",\r\n                owner_id: \"\",\r\n                owner_name: \"\",\r\n                description: \"\",\r\n                pins: [],\r\n                shared_with: [],\r\n                public: false,\r\n            },\r\n            email: \"\",\r\n            shared_with: [],\r\n            pins: [],\r\n            idx: -1,\r\n            ind: -1,\r\n            modal: null,\r\n            modal2: null,\r\n            copied: false,\r\n            link: \"\",\r\n        };\r\n\r\n        this.fetch_userinfo = this.fetch_userinfo.bind(this);\r\n\r\n        this.show_modal = this.show_modal.bind(this);\r\n        this.show_modal2 = this.show_modal2.bind(this);\r\n        this.hide_modal = this.hide_modal.bind(this);\r\n        this.hide_modal2 = this.hide_modal2.bind(this);\r\n        this.delete_pin_modal = this.delete_pin_modal.bind(this);\r\n        this.share_modal = this.share_modal.bind(this);\r\n        this.list_shared = this.list_shared.bind(this);\r\n        this.add_email = this.add_email.bind(this);\r\n        this.delete_email = this.delete_email.bind(this);\r\n        this.delete_email_modal = this.delete_email_modal.bind(this);\r\n        this.copy_clipboard = this.copy_clipboard.bind(this);\r\n\r\n        this.save_pin = this.save_pin.bind(this);\r\n        this.delete_pin = this.delete_pin.bind(this);\r\n        this.list_pins = this.list_pins.bind(this);\r\n        this.module_form = this.module_form.bind(this);\r\n        this.save_pin_order = this.save_pin_order.bind(this);\r\n        this.save_module = this.save_module.bind(this);\r\n\r\n        const appId = \"capstonear_app-xkqng\";\r\n        this.client = Stitch.hasAppClient(appId)\r\n            ? Stitch.getAppClient(appId)\r\n            : Stitch.initializeDefaultAppClient(appId);\r\n        const mongodb = this.client.getServiceClient(\r\n            RemoteMongoClient.factory,\r\n            \"mongodb-atlas\"\r\n        );\r\n        this.db = mongodb.db(\"APP\");\r\n\r\n        this.fetch_userinfo();\r\n    }\r\n\r\n    // Gets the module ID from the routing parameter and uses it to get the\r\n    // associated module and pins for that module.\r\n    // @return {Promise} Query to set state.module_info and state.pins\r\n    async fetch_userinfo() {\r\n        const query = {\r\n            _id: ObjectId(this.props.match.params.id),\r\n        };\r\n\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .findOne(query)\r\n            .then((res) => {\r\n                console.log(\"Module: \", res);\r\n                this.setState({ module_info: res });\r\n\r\n                // Pipeline to ensure that the order of the pins stays the same after the query\r\n                const pipeline = [\r\n                    { $match: { _id: { $in: res.pins } } },\r\n                    {\r\n                        $addFields: {\r\n                            __order: { $indexOfArray: [res.pins, \"$_id\"] },\r\n                        },\r\n                    },\r\n                    { $sort: { __order: 1 } },\r\n                ];\r\n\r\n                this.db\r\n                    .collection(\"PINS\")\r\n                    .aggregate(pipeline)\r\n                    .toArray()\r\n                    .then((res) => {\r\n                        console.log(\"Pins: \", res);\r\n                        this.setState({ pins: res });\r\n                    });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // copies textarea to clipboard and sets copy state\r\n    copy_clipboard() {\r\n        const e = this.textArea;\r\n        e.select();\r\n        document.execCommand(\"copy\");\r\n        this.setState({ copy: true });\r\n    }\r\n\r\n    // Sets state.modal to true\r\n    show_modal(id) {\r\n        this.setState({ modal: id });\r\n    }\r\n\r\n    // Sets state.modal2 to true\r\n    show_modal2(id) {\r\n        this.setState({ modal2: id });\r\n    }\r\n\r\n    // Sets state.modal to false\r\n    hide_modal() {\r\n        this.setState({ modal: null });\r\n    }\r\n\r\n    // Sets state.modal2 to false\r\n    hide_modal2() {\r\n        this.setState({ modal2: null });\r\n    }\r\n\r\n    // @return {JSX.Element} Modal to confirm deletion\r\n    delete_pin_modal() {\r\n        var modal_message;\r\n        if (this.state.idx < 0) modal_message = <p>Nothing to delete</p>;\r\n        else\r\n            modal_message = (\r\n                <p>\r\n                    Are you sure you want to delete{\" \"}\r\n                    <b>{this.state.pins[this.state.idx].title}</b>?\r\n                </p>\r\n            );\r\n\r\n        return (\r\n            <Modal\r\n                // size=\"sm\"\r\n                show={this.state.modal === \"delete\"}\r\n                onHide={(e) => {\r\n                    this.hide_modal();\r\n                }}\r\n                style={{\r\n                    marginTop: \"50px\",\r\n                }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm Deletion</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{modal_message}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            if (this.state.idx > -1)\r\n                                this.delete_pin(this.state.idx);\r\n                            this.hide_modal();\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.hide_modal();\r\n                        }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    // @return {JSX.Element} Modal to confirm deletion of email\r\n    delete_email_modal() {\r\n        var modal_message;\r\n        if (this.state.ind < 0) modal_message = <p>Nothing to delete</p>;\r\n        else\r\n            modal_message = (\r\n                <p>\r\n                    Are you sure you want to delete{\" \"}\r\n                    <b>{this.state.module_info.shared_with[this.state.ind]}</b>?\r\n                </p>\r\n            );\r\n\r\n        return (\r\n            <Modal\r\n                // size=\"sm\"\r\n                show={this.state.modal2 === \"delete_email\"}\r\n                onHide={(e) => {\r\n                    this.hide_modal2();\r\n                }}\r\n                style={{\r\n                    marginTop: \"50px\",\r\n                }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm Deletion</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{modal_message}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={(e) => {\r\n                            if (this.state.ind > -1)\r\n                                this.delete_email(this.state.ind);\r\n                            this.hide_modal2();\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.hide_modal2();\r\n                        }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    // This function adds a email to MODULES.shared_with and avoids duplicates\r\n    add_email() {\r\n        const query = { _id: this.state.module_info._id };\r\n        const update = {\r\n            $addToSet: { shared_with: this.state.email },\r\n        };\r\n        const options = { upsert: false, returnNewDocument: true };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .findOneAndUpdate(query, update, options)\r\n            .then((res) => {\r\n                var shared_with = res.shared_with;\r\n                this.setState({ shared_with: shared_with });\r\n                this.setState({ module_info: res });\r\n                console.log(\"Save response: \", res);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // This function will remove a email from MODULES.shared_with\r\n    // @param {number} ind - The index of the email to delete\r\n    delete_email(ind) {\r\n        const query = { _id: this.state.module_info._id };\r\n        const update = {\r\n            $pull: { shared_with: this.state.shared_with[ind] },\r\n        };\r\n        const options = { multi: false, returnNewDocument: true };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .findOneAndUpdate(query, update, options)\r\n            .then((res) => {\r\n                var shared_with = res.shared_with;\r\n                this.setState({ shared_with: shared_with, ind: -1 });\r\n                this.setState({ module_info: res });\r\n                console.log(\"Save response: \", res);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // Creates the list of emails in MODULES.shared_with\r\n    // @return {JSX.Element} The list of emails.\r\n    list_shared() {\r\n        return this.state.module_info.shared_with.map((module_info, ind) => {\r\n            return (\r\n                <div key={ind}>\r\n                    <Row form>\r\n                        <Col xs=\"8\">\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    plaintext\r\n                                    readOnly\r\n                                    type=\"text\"\r\n                                    value={\r\n                                        this.state.module_info.shared_with[ind]\r\n                                    }\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                variant=\"danger\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.setState({ ind: ind });\r\n                                    this.show_modal2(\"delete_email\");\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    {this.delete_email_modal()}\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    // Modal to display MODULE.shared_with emails to allow adding and deleting\r\n    share_modal() {\r\n        return (\r\n            <Modal\r\n                sz=\"lg\"\r\n                show={this.state.modal === \"share\"}\r\n                onHide={(event) => {\r\n                    this.hide_modal();\r\n                }}\r\n                style={{\r\n                    maxHeight: \"100vh\",\r\n                    marginTop: \"50px\",\r\n                }}\r\n            >\r\n                <Modal.Header closeButton>Shared With</Modal.Header>\r\n                <Modal.Body>\r\n                    <div\r\n                        style={{\r\n                            maxHeight: \"calc(100vh - 450px)\",\r\n                            overflowY: \"auto\",\r\n                            overflowX: \"hidden\",\r\n                        }}\r\n                    >\r\n                        {this.list_shared()}\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer\r\n                    style={{\r\n                        maxHeight: \"calc(100vh - 450px)\",\r\n                        overflowY: \"auto\",\r\n                        overflowX: \"hidden\",\r\n                    }}\r\n                >\r\n                    <Form\r\n                        style={{\r\n                            position: \"relative\",\r\n                            margin: \"auto\",\r\n                        }}\r\n                    >\r\n                        <Form.Group>\r\n                            <FormControl\r\n                                id=\"email\"\r\n                                type=\"email\"\r\n                                value={this.state.email}\r\n                                onChange={(e) => {\r\n                                    var email = this.state.email;\r\n                                    email = e.target.value;\r\n                                    this.setState({ email: email });\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                size=\"lg\"\r\n                                block\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    if (this.state.email !== \"\")\r\n                                        this.add_email();\r\n                                }}\r\n                            >\r\n                                Add\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                size=\"lg\"\r\n                                block\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.hide_modal();\r\n                                }}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                            <Form.Group\r\n                                style={{\r\n                                    marginTop: \"15px\",\r\n                                }}\r\n                            >\r\n                                <textarea\r\n                                    ref={(textarea) =>\r\n                                        (this.textArea = textarea)\r\n                                    }\r\n                                    plaintext\r\n                                    readOnly\r\n                                    value={this.state.link}\r\n                                    placeholder=\"Sharing This Module Requires They Be Set To Public!\"\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                        height: \"80px\",\r\n                                    }}\r\n                                />\r\n                                <Button\r\n                                    variant=\"secondary\"\r\n                                    size=\"sm\"\r\n                                    block\r\n                                    onClick={(event) => {\r\n                                        event.preventDefault();\r\n                                        this.setState({\r\n                                            link:\r\n                                                window.location.origin +\r\n                                                window.location.pathname+\"/#/module/\" +\r\n                                                this.state.module_info._id,\r\n                                        });\r\n                                        this.copy_clipboard();\r\n                                    }}\r\n                                >\r\n                                    Copy Link\r\n                                </Button>\r\n                                {this.state.copy ? (\r\n                                    <div style={{ color: \"green\" }}>\r\n                                        Copied to clipboard!\r\n                                    </div>\r\n                                ) : null}\r\n                            </Form.Group>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    // @return {JSX.Element} Form to fill out module title, description, and\r\n    // public/private status\r\n    module_form() {\r\n        return (\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                        type=\"title\"\r\n                        id=\"title\"\r\n                        value={this.state.module_info.title}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.title = e.target.value;\r\n                            this.setState({ module_info: module_info });\r\n                        }}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"5\"\r\n                        id=\"description\"\r\n                        value={this.state.module_info.description}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.description = e.target.value;\r\n                            this.setState({ module_info: module_info });\r\n                        }}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        marginBottom: \"0\",\r\n                    }}\r\n                >\r\n                    <Form.Check\r\n                        inline\r\n                        type=\"radio\"\r\n                        label=\"Public\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"true\"\r\n                        checked={this.state.module_info.public}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.public = true;\r\n                            this.setState({\r\n                                module_info: module_info,\r\n                            });\r\n                        }}\r\n                    />\r\n                    <Form.Check\r\n                        inline\r\n                        type=\"radio\"\r\n                        label=\"Private\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"false\"\r\n                        checked={!this.state.module_info.public}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.public = false;\r\n                            this.setState({\r\n                                module_info: module_info,\r\n                            });\r\n                        }}\r\n                    />\r\n                </Form.Group>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    // Creates the list of pins based on state.pins. Uses the react-movable\r\n    // library to make the list of pins draggable.\r\n    // @return {JSX.Element} The list of pins.\r\n    list_pins() {\r\n        return (\r\n            <List\r\n                values={this.state.pins}\r\n                onChange={({ oldIndex, newIndex }) => {\r\n                    var pins = this.state.pins;\r\n                    pins = arrayMove(pins, oldIndex, newIndex);\r\n                    this.setState({ pins: pins });\r\n                }}\r\n                renderList={({ children, props }) => (\r\n                    <ol\r\n                        {...props}\r\n                        style={{\r\n                            display: \"grid\",\r\n                            justifyContent: \"center\",\r\n                            paddingLeft: \"0px\",\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </ol>\r\n                )}\r\n                renderItem={({ index, props }) => (\r\n                    <li {...props}>\r\n                        <Row style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\r\n                            <Col\r\n                                xs=\"4\"\r\n                                style={{\r\n                                    marginTop: \"auto\",\r\n                                    marginBottom: \"auto\",\r\n                                }}\r\n                            >\r\n                                {this.state.pins[index].title}\r\n                            </Col>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"link\"\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        this.setState({ idx: index });\r\n                                        this.show_modal(\"edit_pin_\" + index);\r\n                                    }}\r\n                                >\r\n                                    Edit\r\n                                </Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"danger\"\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        this.setState({ idx: index });\r\n                                        this.show_modal(\"delete\");\r\n                                    }}\r\n                                >\r\n                                    Delete\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <EditForm\r\n                            pin={this.state.pins[index]}\r\n                            show={this.state.modal === \"edit_pin_\" + index}\r\n                            save={(pin) => {\r\n                                this.save_pin(pin);\r\n                            }}\r\n                            cancel={() => this.hide_modal()}\r\n                        />\r\n                    </li>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n\r\n    save_pin(pin) {\r\n        const query = { _id: pin._id };\r\n        const update = {\r\n            $set: pin,\r\n        };\r\n        // update a pin on the database\r\n        this.db\r\n            .collection(\"PINS\")\r\n            .findOneAndUpdate(query, update)\r\n            .then((res) => {\r\n                console.log(\"Pin update response: \", res);\r\n\r\n                // Update pin list\r\n                var pins = this.state.pins;\r\n                pins[this.state.idx] = pin;\r\n                this.setState({ pins: pins });\r\n                this.hide_modal();\r\n            });\r\n    }\r\n\r\n    // This function will remove a pin from the DB and state.pins\r\n    // @param {number} idx - The index of the pin to delete\r\n    delete_pin(idx) {\r\n        const query = { _id: this.state.pins[idx]._id };\r\n        this.db\r\n            .collection(\"PINS\")\r\n            .deleteOne(query)\r\n            .then((res) => {\r\n                console.log(\"Delete response: \", res);\r\n\r\n                // Update pin list\r\n                var pins = this.state.pins;\r\n                pins.splice(idx, 1);\r\n                this.setState({ pins: pins, idx: -1 });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // Converts state.pins to a list of ObjectIDs, then updates\r\n    // state.module_info.pins based on the new list\r\n    save_pin_order() {\r\n        var module = this.state.module_info;\r\n        const pin_ids = this.state.pins.map((pin) => {\r\n            return pin._id;\r\n        });\r\n        module.pins = pin_ids;\r\n        this.setState({ module_info: module });\r\n    }\r\n\r\n    // Saves the module to the DB\r\n    save_module() {\r\n        this.save_pin_order();\r\n        const query = { _id: this.state.module_info._id };\r\n        const update = {\r\n            $set: this.state.module_info,\r\n        };\r\n        const options = { upsert: false };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .updateOne(query, update, options)\r\n            .then((res) => {\r\n                console.log(\"Save response: \", res);\r\n\r\n                // Go back to Manage Module view\r\n                window.location.assign(\"#/modules/edit/\");\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // @return {JSX.Element} The EditModule componenet\r\n    render() {\r\n        return (\r\n            <Container\r\n                style={{\r\n                    marginTop: \"10px\",\r\n                    maxWidth: \"540px\",\r\n                    height:\"100vh\",\r\n\r\n                }}\r\n            >\r\n                <Form style={{ height: \"100%\" }}>\r\n                    <Tabs\r\n                        defaultActiveKey=\"Module Info\"\r\n                        transition={false}\r\n                        style={{\r\n                            textAlign: \"center\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Tab eventKey=\"Module Info\" title=\"Module Info\">\r\n                            {this.module_form()}\r\n                                <Form.Group>\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    size=\"lg\"\r\n                                    block\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        var id = this.state.module_info._id;\r\n                                        window.location.assign(\r\n                                            \"#/module/\" + id + \"/pins/edit\"\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    Pin Map\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"secondary\"\r\n                                    size=\"lg\"\r\n                                    block\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        this.save_module();\r\n                                    }}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            size=\"lg\"\r\n                            block\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                this.show_modal(\"share\");\r\n                            }}\r\n                        >\r\n                            Share\r\n                        </Button>\r\n                    </Form.Group>\r\n                        </Tab>\r\n                        <Tab\r\n                            eventKey=\"Pins\"\r\n                            title=\"Pins\"\r\n                            style={{ height: \"100%\" }}\r\n                        >\r\n                            {this.list_pins()}\r\n                        </Tab>\r\n                    </Tabs>\r\n\r\n                    <Form.Group>\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            size=\"lg\"\r\n                            block\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                var id = this.state.module_info._id;\r\n                                window.location.assign(\r\n                                    \"#/module/\" + id + \"/pins/edit\"\r\n                                );\r\n                            }}\r\n                        >\r\n                            Pin Map\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"secondary\"\r\n                            size=\"lg\"\r\n                            block\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                this.save_module();\r\n                            }}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            size=\"lg\"\r\n                            block\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                this.show_modal(\"share\");\r\n                            }}\r\n                        >\r\n                            Share\r\n                        </Button>\r\n                    </Form.Group>\r\n\r\n                </Form>\r\n                {this.delete_pin_modal()}\r\n                {this.share_modal()}\r\n            </Container>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Card, Tab, Tabs, CardDeck, Form, Button } from \"react-bootstrap\";\r\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport { waitForElementToBeRemoved } from \"@testing-library/react\";\r\n//import {AwsServiceClient, AwsRequest} from 'mongodb-stitch-browser-services-aws'\r\n\r\nexport default class ViewModules extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modules: [],\r\n            my_modules: [],\r\n            shared_modules: [],\r\n            img1: \"\",\r\n            stitch_res: [],\r\n            user: {\r\n                _id: '',\r\n                user_id: '',\r\n                accessed_links: [],\r\n            },\r\n            accessed_modules: [],\r\n        };\r\n        this.module_results = null;\r\n        \r\n\r\n        //refs\r\n        this.goto_module_id = React.createRef();\r\n\r\n        this.add_module_cards = this.add_module_cards.bind(this);\r\n        this.fetch_modules = this.fetch_modules.bind(this);\r\n        this.goto_module = this.goto_module.bind(this);\r\n\r\n        const appId = \"capstonear_app-xkqng\";\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId);\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n            );\r\n            //select the db in our mongdb atlas cluster\r\n            this.db = mongodb.db(\"APP\");\r\n        } else {\r\n            this.client = Stitch.initializeAppClient(appId);\r\n            //console.log(\"client init\")\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetch_modules();\r\n\r\n    }\r\n\r\n    async fetch_modules() {\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find({\r\n                owner_id: this.client.auth.authInfo.userId,\r\n            })\r\n            .asArray()\r\n            .then((my_modules) => {\r\n                this.setState({\r\n                    my_modules: my_modules,\r\n                    modules: {\r\n                        0: my_modules,\r\n                        1: this.state.shared_modules,\r\n                        2: this.state.accessed_modules,\r\n                    },\r\n                });\r\n\r\n                console.log(this.state.my_modules);\r\n            });\r\n\r\n        //fetch shared modules\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find({\r\n                shared_with: this.client.auth.authInfo.userProfile.data.email,\r\n            })\r\n            .asArray()\r\n            .then((shared_modules) => {\r\n                this.setState({\r\n                    shared_modules: shared_modules,\r\n                    modules: {\r\n                        0: this.state.my_modules,\r\n                        1: shared_modules,\r\n                        2: this.state.accessed_modules,\r\n                    },\r\n                });\r\n                console.log(shared_modules);\r\n            });\r\n        console.log(this.state.modules);\r\n\r\n        // fetch user collection, create new if not found\r\n        const query = {\r\n            user_id: this.client.auth.authInfo.userId,\r\n        };\r\n        const update = {\r\n            $setOnInsert: {accessed_links: [],}\r\n        };\r\n        const options = {\r\n            returnNewDocument: true,\r\n            upsert: true,\r\n        };\r\n        await this.db\r\n            .collection(\"USERS\")\r\n            .findOneAndUpdate(query, update, options)\r\n            .then((res) => {\r\n                console.log(\"User: \", res);\r\n                this.setState({ user: res });\r\n            })\r\n            .catch(console.error);\r\n\r\n        // fetch accessed links and set accessed modules\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find({\r\n                shared_with: { $ne: this.client.auth.authInfo.userProfile.data.email},\r\n                _id: { $in: [...this.state.user.accessed_links]},\r\n                public: true,\r\n            })\r\n            .asArray()\r\n            .then((accessed_modules) => {\r\n                this.setState({\r\n                    accessed_modules: accessed_modules,\r\n                    modules: {\r\n                        0: this.state.my_modules,\r\n                        1: this.state.shared_modules,\r\n                        2: accessed_modules,\r\n                    },\r\n                });\r\n                console.log(\"Accessed: \",accessed_modules);\r\n            });\r\n        console.log(this.state.accessed_modules);\r\n    }\r\n\r\n    goto_module(id) {\r\n        window.location.assign(\"#/module/\" + id);\r\n    }\r\n\r\n    module_card (module, idx) {\r\n        const userid = this.state.user.user_id; \r\n        return (\r\n            <div className=\"col-md-6 col-lg-4 \" key={idx}>\r\n                <Card\r\n                    className=\"h-100\"\r\n                    style={{\r\n                        display: \"fixed\",\r\n                        Width: \"25rem\",\r\n                        margin: \"0.25rem\",\r\n                        justifyContent: \"center\",\r\n                        textAlign: \"center\",\r\n                    }}\r\n                >\r\n                    <Card.Body>\r\n                        <Card.Img\r\n                            variant=\"top\"\r\n                            src={\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + module.pins[0] + \".jpeg?versionid=latest&date=\" + Date.now()}\r\n                            onError={(e)=>{\r\n                                e.target.onerror = null;\r\n                                e.target.src=`${process.env.PUBLIC_URL}/contextarlogo.jpg`\r\n                            }}\r\n                        />\r\n                        <Card.Title>{module.title}</Card.Title>\r\n                        <Card.Subtitle className=\"mb-2 text-muted\">\r\n                            by {module.owner_name} ({module.owner_email})\r\n                        </Card.Subtitle>\r\n                        <Card.Text>{module.description}</Card.Text>\r\n                        <div\r\n                            className=\"btn-toolbar\"\r\n                            style={{\r\n                                justifyContent: \"center\",\r\n                            }}\r\n                        >\r\n                            <div className=\"btn-group mr-1\" style={{paddingTop: \"10px\"}}>\r\n                                <button\r\n                                    className=\"btn btn-primary\"\r\n                                    onClick={() => window.location.assign(`#/module/${module._id}`)}\r\n                                >\r\n                                    View Details\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"btn-group mr-1\" style={{paddingTop: \"10px\"}}>\r\n                                <button className=\"btn btn-primary\"\r\n                                    onClick={() =>{\r\n                                        window.location.assign(`#/module/${module._id}/pins/?user=${userid}`)\r\n                                    }\r\n                                }>\r\n                                    Start Module\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    add_module_cards(type) {\r\n        if (this.state.modules.length === 0) return;\r\n        console.log(this.state.modules[type])\r\n        const mds = this.state.modules[type].map(this.module_card, this);\r\n        return (\r\n            <div\r\n                style={{\r\n                    top: \"50px\",\r\n                    bottom: \"0px\",\r\n                    position: \"relative\",\r\n                }}\r\n                className=\"container\"\r\n            >\r\n                <CardDeck\r\n                    style={{\r\n                        top: \"50px\",\r\n                    }}\r\n                >\r\n                    {mds}\r\n                </CardDeck>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const url =this.props.location.pathname\r\n        var defaultTab= null\r\n        var my_modules_tab=null\r\n        if(url==\"/modules/student\")\r\n        {\r\n            defaultTab=\"Shared Modules\"\r\n        }\r\n        else\r\n        {\r\n            defaultTab=\"My Modules\"\r\n            my_modules_tab= (<Tab eventKey=\"My Modules\" title=\"My Modules\">\r\n                                {this.add_module_cards(0)}\r\n                            </Tab>)\r\n        }\r\n\r\n        const query_modules = () => {\r\n            const userQuery = this.goto_module_id.current.value;\r\n            try {\r\n                ObjectId(userQuery);\r\n                window.location.assign(`#/module/${userQuery}`);\r\n            }\r\n            catch (err) {\r\n                this.db.collection(\"MODULES\")\r\n                    .find({ title: { $regex: userQuery, $options: \"i\" } })\r\n                    .asArray()\r\n                    .then(docs => {\r\n                        this.module_results = docs.map(this.module_card, this);\r\n                        this.forceUpdate();\r\n                    });\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: \"0px\",\r\n                    bottom: \"0px\",\r\n                    width: \"100%\",\r\n                    overflowY: \"scroll\",\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        top: \"10px\",\r\n                        bottom: '0px',\r\n                        position: \"relative\",\r\n                        height: \"100vh\",\r\n                        marginLeft: \"auto\",\r\n                        marginRight: \"auto\",\r\n                    }}\r\n                >\r\n                    <Tabs\r\n                        defaultActiveKey= {defaultTab}\r\n                        transition={false}\r\n                        style={{\r\n                            textAlign: \"center\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        {my_modules_tab}\r\n                        <Tab eventKey=\"Shared Modules\" title=\"Shared with me\">\r\n                            <div>\r\n                                {this.add_module_cards(1)}\r\n                            </div>\r\n                            <div>\r\n                                {this.add_module_cards(2)}\r\n                            </div>\r\n                        </Tab>\r\n\r\n                        <Tab eventKey=\"Go To\" title=\"Search\">\r\n                            <Form\r\n                                onSubmit={e => {\r\n                                    e.preventDefault();\r\n                                    query_modules();\r\n                                }}\r\n                            >\r\n                                <Form.Group controlId=\"formModuleId\">\r\n                                    <Form.Label>Module</Form.Label>\r\n                                    <Form.Control\r\n                                        required\r\n                                        type=\"string\"\r\n                                        placeholder=\"Enter module title or id\"\r\n                                        ref={this.goto_module_id}\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    style={{marginBottom: \"10px\"}}\r\n                                    onClick={query_modules}\r\n                                >\r\n                                    Search\r\n                                </Button>\r\n                            </Form>\r\n                            {this.module_results}\r\n                        </Tab>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\r\n\r\nexport default class ManageModules extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modules: [],\r\n            modal: false,\r\n            idx: -1,\r\n        };\r\n\r\n        this.fetch_userinfo = this.fetch_userinfo.bind(this);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.modal_message = this.modal_message.bind(this);\r\n        this.list_modules = this.list_modules.bind(this);\r\n        this.delete_module = this.delete_module.bind(this);\r\n        this.add_module = this.add_module.bind(this);\r\n        this.save_modules = this.save_modules.bind(this);\r\n\r\n        // Setting up DB with Stitch\r\n        const appId = \"capstonear_app-xkqng\";\r\n        this.client = Stitch.hasAppClient(appId)\r\n            ? Stitch.getAppClient(appId)\r\n            : Stitch.initializeDefaultAppClient(appId);\r\n        const mongodb = this.client.getServiceClient(\r\n            RemoteMongoClient.factory,\r\n            \"mongodb-atlas\"\r\n        );\r\n        this.db = mongodb.db(\"APP\");\r\n\r\n        this.fetch_userinfo();\r\n    }\r\n\r\n    async fetch_userinfo() {\r\n        const query = {\r\n            owner_id: this.client.auth.authInfo.userId,\r\n        };\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find(query)\r\n            .toArray()\r\n            .then((res) => {\r\n                console.log(\"Modules loaded: \", res);\r\n\r\n                this.setState({ modules: res });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    toggle() {\r\n        var modal = !this.state.modal;\r\n        this.setState({ modal: modal });\r\n    }\r\n\r\n    modal_message() {\r\n        if (this.state.idx < 0) return <p>Nothing to delete</p>;\r\n        else\r\n            return (\r\n                <p>\r\n                    Are you sure you want to delete{\" \"}\r\n                    <b>{this.state.modules[this.state.idx].title}</b>?\r\n                </p>\r\n            );\r\n    }\r\n\r\n    list_modules() {\r\n        return this.state.modules.map((module, idx) => {\r\n            return (\r\n                <div key={idx} className=\"pt-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 offset-sm-2 col-sm-4\">\r\n                            <input\r\n                                type=\"text\"\r\n                                value={this.state.modules[idx].title}\r\n                                onChange={(event) => {\r\n                                    event.preventDefault();\r\n\r\n                                    var modules = [...this.state.modules];\r\n                                    modules[idx].title = event.target.value;\r\n                                    this.setState({ modules });\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6 col-sm-4\">\r\n                            <button\r\n                                className=\"btn btn-link float-right\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    var id = this.state.modules[idx]._id;\r\n                                    window.location.assign(\r\n                                        \"#/module/\" + id + \"/edit\"\r\n                                    );\r\n                                }}\r\n                            >\r\n                                Edit\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger float-right\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.setState({ idx: idx });\r\n                                    this.toggle();\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    delete_module(idx) {\r\n        const query = { _id: this.state.modules[idx]._id };\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .deleteOne(query)\r\n            .then((res) => {\r\n                console.log(\"Delete response: \", res);\r\n\r\n                // Update module list\r\n                var modules = [...this.state.modules];\r\n                modules.splice(idx, 1);\r\n                this.setState({ modules: modules, idx: -1 });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    add_module() {\r\n        const query = {\r\n            title: \"title\",\r\n            owner_id: this.client.auth.authInfo.userId,\r\n            owner_name: this.client.auth.authInfo.userProfile.name,\r\n            owner_email: this.client.auth.authInfo.userProfile.email,\r\n            description: \"\",\r\n            pins: [],\r\n            shared_with: [],\r\n            public: false,\r\n        };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .insertOne(query)\r\n            .then((res) => {\r\n                console.log(\"Add response: \", res);\r\n\r\n                // Navigate to Edit Module view\r\n                var id = res.insertedId;\r\n                window.location.assign(\"#/module/\" + id + \"/edit\");\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    save_modules() {\r\n        Promise.all(\r\n            this.state.modules.map((module) => {\r\n                const query = { _id: module._id };\r\n                const update = {\r\n                    $set: {\r\n                        title: module.title,\r\n                    },\r\n                };\r\n                const options = { upsert: false };\r\n\r\n                return this.db\r\n                    .collection(\"MODULES\")\r\n                    .updateOne(query, update, options);\r\n            })\r\n        )\r\n            .then((res) => {\r\n                console.log(\"Save response: \", res);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form\r\n                    style={{ height: \"100%\" }}\r\n                    onSubmit={(event) => {\r\n                        event.preventDefault();\r\n                        this.save_modules();\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            height: \"70vh\",\r\n                            overflowY: \"scroll\",\r\n                            overflowX: \"hidden\"\r\n                        }}\r\n                    >\r\n                        {this.list_modules()}\r\n                    </div>\r\n\r\n                    <div style={{ marginTop: \"10px\" }}>\r\n                        <button\r\n                            className=\"btn btn-primary btn-lg btn-block\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                this.add_module();\r\n                            }}\r\n                        >\r\n                            Add Module\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-secondary btn-lg btn-block\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                this.save_modules();\r\n                                window.location.assign(\"#/\");\r\n                            }}\r\n                        >\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <Modal\r\n                    show={this.state.modal}\r\n                    toggle={(event) => {\r\n                        event.preventDefault();\r\n                        this.toggle();\r\n                    }}\r\n                    style={{\r\n                        marginTop: \"50px\",\r\n                    }}\r\n                >\r\n                    <Modal.Header\r\n                        toggle={(event) => {\r\n                            event.preventDefault();\r\n                            this.toggle();\r\n                        }}\r\n                    >\r\n                        Confirm Deletion\r\n                    </Modal.Header>\r\n                    <Modal.Body>{this.modal_message()}</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                if (this.state.idx > -1)\r\n                                    this.delete_module(this.state.idx);\r\n                                this.toggle();\r\n                            }}\r\n                        >\r\n                            Delete\r\n                        </button>{\" \"}\r\n                        <button\r\n                            className=\"btn btn-secondary\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                this.toggle();\r\n                            }}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Map, Marker, Popup, TileLayer, Polyline } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L from 'leaflet'\r\nimport { Stitch, RemoteMongoClient, GoogleRedirectCredential } from \"mongodb-stitch-browser-sdk\"\r\nimport { ObjectId } from 'mongodb'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowAltCircleRight, faArrowAltCircleLeft, faMapMarkerAlt, faStreetView } from '@fortawesome/free-solid-svg-icons'\r\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap'\r\nimport { userMode } from './mode'\r\nimport { \r\n  FacebookShareButton, FacebookIcon,\r\n  EmailIcon, EmailShareButton,\r\n  RedditShareButton, RedditIcon,\r\n  TwitterShareButton, TwitterIcon \r\n} from 'react-share'\r\n\r\n\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\n\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\n\r\nvar myIcon = new L.divIcon({\r\n  className: 'my-div-icon',\r\n  html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png\"/>'\r\n})\r\n\r\nconst floatStyle = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"40px\",\r\n  backgroundColor: \"#0C9\",\r\n  color: \"#FFF\",\r\n  borderRadius: \"50px\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500,\r\n};\r\nconst nextButtonStyle = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"120px\",\r\n  backgroundColor: \"#74E4E9\",\r\n  color: \"#000000\",\r\n  borderRadius: \"40px\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500,\r\n};\r\nconst previousButtonStyle = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"240px\",\r\n  backgroundColor: \"#74E4E9\",\r\n  color: \"#000000\",\r\n  borderRadius: \"40px\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500,\r\n};\r\nconst currentButtonStyle = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"180px\",\r\n  backgroundColor: \"#0C9\",\r\n  color: \"#FFF\",\r\n  borderRadius: \"50px\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500,\r\n};\r\n\r\nclass ViewPinOnMap extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      currentLocation: { lat: 45.51, lng: -122.68 },\r\n      zoom: 13,\r\n      userLocation: [],\r\n      userLocationFound: false,\r\n      username: \"\",\r\n      useremail: \"\",\r\n      userID: \"\",\r\n      stitch_res: {},\r\n      pin: [],\r\n      pins_line: [],\r\n      pins_array: [],\r\n      current_pin_index: 0,\r\n      finish_modal: false,\r\n    }\r\n\r\n\r\n    this.bounds = undefined;\r\n    this.userID = this.props.location.search.split(\"user=\")[1];\r\n    this.shareUrl = `${window.location.host}${window.location.pathname}#/completed/${this.props.match.params.id}/${this.userID}`;\r\n    console.log(\"the share url\", this.shareUrl);\r\n\r\n    const appId = \"capstonear_app-xkqng\"\r\n    this.client = Stitch.hasAppClient(appId)\r\n      ? Stitch.getAppClient(appId)\r\n      : Stitch.initializeDefaultAppClient(appId)\r\n    const mongodb = this.client.getServiceClient(\r\n      RemoteMongoClient.factory,\r\n      \"mongodb-atlas\"\r\n    );\r\n    this.db = mongodb.db(\"APP\");\r\n  }\r\n\r\n\r\n  getUserPosition() {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.setState({ userLocation: [position.coords.latitude, position.coords.longitude], userLocationFound: true, currentLocation: [position.coords.latitude, position.coords.longitude] })\r\n\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserPosition()\r\n    this.drawpins()\r\n\r\n    this.interval = setInterval(() => this.getUserPosition(), 10000);\r\n   \r\n\r\n  }\r\n  componentWillUnmount() {\r\n    // Clear the interval right before component unmount\r\n    clearInterval(this.interval);\r\n}\r\n  /**\r\n   * Retrieve pins from database using Module ID\r\n   */\r\n\r\n  async drawpins() {\r\n    if (!this.client.auth.isLoggedIn) {\r\n      return\r\n    }\r\n    const query = { _id: ObjectId(this.props.match.params.id) };\r\n    await this.db.collection(\"MODULES\").findOne(query)\r\n      .then((stitch_res) => {\r\n        this.setState({ stitch_res })\r\n        const pipeline = [\r\n          { $match: { _id: { $in: stitch_res.pins } } },\r\n          {\r\n            $addFields: {\r\n              __order: { $indexOfArray: [stitch_res.pins, \"$_id\"] },\r\n            },\r\n          },\r\n          { $sort: { __order: 1 } },\r\n        ];\r\n        this.db.collection(\"PINS\").aggregate(pipeline)\r\n          .toArray()\r\n          .then((res) => {\r\n            this.setState({ pins_array: res })\r\n          });\r\n\r\n      }\r\n      )\r\n  }\r\n \r\n  /**\r\n   * Open google map to that coords\r\n   * @param  {} coords\r\n   */\r\n  openGoogle(coords) {\r\n    var url = \"http://maps.google.com?q=\" + coords[0] + \",\" + coords[1]\r\n    var win = window.open(url, '_blank');\r\n    return\r\n  }\r\n\r\n  \r\n  /**\r\n   * Set map view to the user current location\r\n   * @param  {} coords\r\n   */\r\n  centerMap( coords) {\r\n\r\n    if(this.state.userLocation.length!=0)\r\n    {\r\n      const map = this.refs.map.leafletElement\r\n      map.doubleClickZoom.disable();\r\n      setTimeout(function () {\r\n        map.doubleClickZoom.enable();\r\n      }, 1000);\r\n      map.setView(coords, 13)\r\n      const pin = this.refs.userloc.leafletElement\r\n      setTimeout(function(){\r\n        pin.openPopup()\r\n      },400)\r\n    }\r\n    else\r\n    {\r\n      var zip_code = prompt(\"Please enter your zip code\");\r\n      if (zip_code != null) {\r\n        fetch('https://public.opendatasoft.com/api/records/1.0/search/?dataset=us-zip-code-latitude-and-longitude&q='+zip_code+'&facet=state&facet=timezone&facet=dst')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({currentLocation:data.records[0].fields.geopoint,userLocation:data.records[0].fields.geopoint}));\r\n        //console.log(data.records[0].fields.geopoint))\r\n      }\r\n    }\r\n\r\n  }\r\n  /**\r\n   * Set map view to the next pin in the pin array\r\n   */\r\n  nextPin() {\r\n    if(this.state.pins_array.length>0)\r\n    {\r\n      const map = this.refs.map.leafletElement\r\n      map.doubleClickZoom.disable();\r\n      setTimeout(function () {\r\n        map.doubleClickZoom.enable();\r\n      }, 1000);\r\n      var temp = this.state.current_pin_index + 1\r\n      if (temp >= this.state.pins_array.length - 1) {\r\n        temp = this.state.pins_array.length - 1\r\n      }\r\n      map.setView(this.state.pins_array[temp].coords)\r\n      const pin = this.refs[temp].leafletElement\r\n      setTimeout(function(){\r\n        pin.openPopup()\r\n      },400)\r\n      this.setState({ current_pin_index: temp })\r\n  \r\n  }\r\n}\r\n  /**\r\n   * Set map view to the previous pin in the pin array\r\n   */\r\n  previousPin() {\r\n\r\n    if(this.state.pins_array.length>0)\r\n    {\r\n      const map = this.refs.map.leafletElement\r\n      map.doubleClickZoom.disable();\r\n      setTimeout(function () {\r\n        map.doubleClickZoom.enable();\r\n      }, 1000);\r\n      var temp = this.state.current_pin_index - 1\r\n      if (temp <= 0) {\r\n        temp = 0\r\n      }\r\n      map.setView(this.state.pins_array[temp].coords)\r\n      const pin = this.refs[temp].leafletElement\r\n      setTimeout(function(){\r\n        pin.openPopup()\r\n      },400)\r\n      this.setState({ current_pin_index: temp })\r\n  }\r\n}\r\n\r\n  /**\r\n   * Set map view to the current pin in the pin array\r\n   */\r\n  currentPin() {\r\n    if(this.state.pins_array.length>0)\r\n    {\r\n      const map = this.refs.map.leafletElement\r\n      map.doubleClickZoom.disable();\r\n      setTimeout(function () {\r\n        map.doubleClickZoom.enable();\r\n      }, 1000);\r\n      map.setView(this.state.pins_array[this.state.current_pin_index].coords)\r\n      const pin = this.refs[this.state.current_pin_index].leafletElement\r\n      setTimeout(function(){\r\n        pin.openPopup()\r\n      },400)\r\n    }\r\n  }\r\n\r\n  toggle_modal() {\r\n    var finish_modal = !this.state.finish_modal\r\n    this.setState({finish_modal: finish_modal})\r\n  }\r\n  go_home(){\r\n    if(userMode== true)\r\n    {\r\n      window.location.assign(\r\n        \"#/modules/student\");\r\n    }\r\n    else\r\n    {\r\n      window.location.assign(\r\n        \"#/modules/instructor\");\r\n    }\r\n  }\r\n  finish_modal() {\r\n    return (\r\n      <Modal\r\n        show={this.state.finish_modal}\r\n        onHide={() => this.toggle_modal()}\r\n        style={{\r\n          marginTop: \"50px\",\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Finish Module</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p className=\"text-center\">\r\n            You finished {this.state.stitch_res.title}\r\n          </p>\r\n          <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\"\r\n          }}>\r\n            <FacebookShareButton url={this.shareUrl}>\r\n              <FacebookIcon />\r\n            </FacebookShareButton>\r\n            <RedditShareButton url={this.shareUrl}>\r\n              <RedditIcon/>\r\n            </RedditShareButton>\r\n            <TwitterShareButton url={this.shareUrl}>\r\n              <TwitterIcon/>\r\n            </TwitterShareButton>\r\n            <EmailShareButton url={this.shareUrl}>\r\n              <EmailIcon />\r\n            </EmailShareButton>\r\n          </div>\r\n          <Form style={{\r\n            position: \"relative\",\r\n            margin: \"auto\",\r\n          }}\r\n          >\r\n            <Form.Group>\r\n              {/* <Button block onClick ={() => FacebookShareButton()}>Share</Button> */}\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Button block>Scan QR</Button>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Button block onClick={() => this.go_home()}>End Module</Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => this.toggle_modal()}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>)\r\n  }\r\n  render() {\r\n    const userLocation = this.state.userLocationFound ? (\r\n      <Marker ref='userloc' position={this.state.userLocation} icon={myIcon} >\r\n        <Popup>You are here</Popup>\r\n      </Marker>\r\n    ) : null\r\n\r\n    return (\r\n      <div>\r\n        <Map ref='map' center={this.state.currentLocation} zoom={13} maxZoom={18}>\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n          />\r\n          {userLocation}\r\n          {this.state.pins_array.map((info, idx) => {\r\n            const len = this.state.pins_array.length;\r\n            var marker_icon;\r\n            if (idx == this.state.current_pin_index) {\r\n              marker_icon = new L.divIcon({\r\n                className: 'my-div-icon',\r\n                html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-yellow.png\"/>'\r\n              })\r\n            }\r\n            else {\r\n              marker_icon = new L.divIcon({\r\n                className: 'my-div-icon',\r\n                html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png\"/>'\r\n              })\r\n            }\r\n            return <Marker\r\n              key={idx} position={info.coords}\r\n              icon={marker_icon}\r\n              ref={idx}  >\r\n              <Popup >\r\n                <h1>{info.title}</h1>\r\n                <p>{info.description}</p>\r\n                <p>{info.hint}</p>\r\n                <p>{info.destination}</p>\r\n                <img style={{\r\n                  height: 'auto',\r\n                  width: '100%'\r\n                }} src={\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + info._id.toString() + \".jpeg?versionid=latest&date=\" + Date.now()}  \r\n                \r\n                  onError={(e) => {\r\n                    e.target.onerror = null;\r\n                    e.target.src = `${process.env.PUBLIC_URL}/contextarlogo.jpg`\r\n                  }}\r\n                ></img>\r\n                <Form style={{ paddingTop: \"10px\" }}>\r\n                  {\r\n                    (() => {\r\n                      if (idx === len - 1)\r\n                        return (\r\n                          <Form.Group>\r\n                            <Button onClick={() => this.toggle_modal()} block>\r\n                              Finish Module\r\n                            </Button>\r\n                          </Form.Group>)\r\n                    })()\r\n                  }\r\n                  <Form.Group>\r\n                    <Button onClick={() => this.openGoogle(info.coords)} variant=\"secondary\" block>\r\n                      Open Google Map\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Popup>\r\n            </Marker>\r\n\r\n          })}\r\n          <button style={floatStyle} onClick={() => this.centerMap( this.state.currentLocation)} >\r\n            <div><FontAwesomeIcon icon={faStreetView} size=\"3x\" /></div>\r\n          </button>\r\n          <ButtonGroup>\r\n            <button style={nextButtonStyle} onClick={() => this.nextPin()}  >\r\n              <div><FontAwesomeIcon icon={faArrowAltCircleRight} size=\"3x\" /></div>\r\n            </button>\r\n            <button style={previousButtonStyle} onClick={() => this.previousPin()} >\r\n              <div><FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"3x\" /></div>\r\n            </button>\r\n            <button style={currentButtonStyle} onClick={() => this.currentPin()} >\r\n              <div><FontAwesomeIcon icon={faMapMarkerAlt} size=\"3x\" /></div>\r\n            </button>\r\n          </ButtonGroup>\r\n        </Map>\r\n        {this.finish_modal()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewPinOnMap;","import React, { useState, useEffect } from \"react\";\r\nimport { db } from \"./clientdb\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ObjectId } from \"mongodb\";\r\n\r\nconst imgSrc = pin => `https://capstoneusercontent.s3-us-west-2.amazonaws.com/${pin}.jpeg?versionid=latest`;\r\n\r\nconst Completed = props => {\r\n    const [ pin, setPin ] = useState();\r\n    const [ username, setUsername ] = useState(\"User\");\r\n    const { module, userid } = useParams();\r\n    useEffect(() => {\r\n        db.collection(\"MODULES\")\r\n            .findOne({ _id: ObjectId(module) })\r\n            .then(data => setPin(data.pins[0]))\r\n        db.collection(\"USERS\")\r\n            .findOne({ user_id: userid })\r\n            .then(data => setUsername(data?.username || username))\r\n    }\r\n    , []);\r\n    return (\r\n        <div \r\n            className=\"container\"\r\n            style={{\r\n                display: \"block\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                textAlign: \"center\"\r\n            }}\r\n        >\r\n            <h1> {`${username} has completed this module`} </h1>\r\n            <img src={imgSrc(pin)} style={{ width: \"90%\" }} />\r\n        </div>\r\n    );\r\n}\r\nexport default Completed;","import React, { Component } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport MapView from \"./components/MapView.js\";\r\nimport Menu from \"./components/Menu/Menu.js\";\r\nimport { Stitch } from \"mongodb-stitch-browser-sdk\";\r\nimport Login from \"./components/Login\";\r\nimport DropPin from \"./components/DropPin\";\r\nimport NavMenu from \"./components/Menu/NavMenu\";\r\nimport Module from \"./components/Module\";\r\nimport EditModule from \"./components/EditModule\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport ViewModules from \"./components/ViewModules\";\r\nimport ManageModules from \"./components/ManageModules\";\r\nimport ViewPinOnMap from \"./components/ViewPinOnMap\";\r\nimport Completed from \"./components/completed\";\r\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const appId = \"capstonear_app-xkqng\";\r\n        this.client = Stitch.hasAppClient(appId)\r\n            ? Stitch.getAppClient(appId)\r\n            : Stitch.initializeDefaultAppClient(appId);\r\n        const url = window.location.href;\r\n        const cleanUrl = url.split(/\\?fbclid=.*#/).join(\"#\");\r\n        if (this.client.auth.hasRedirectResult()) {\r\n            if (cleanUrl !== url)\r\n                window.location.assign(cleanUrl);\r\n            this.client.auth.handleRedirectResult().then((user) => {\r\n                window.location.assign(\"/\");\r\n            });\r\n        }\r\n        if (cleanUrl !== url)\r\n            window.location.assign(cleanUrl);\r\n        this.state = {\r\n            isLoggedIn: false,\r\n        };\r\n\r\n        //refs\r\n\r\n        this.center_container = React.createRef();\r\n\r\n        this.NavMenu = this.NavMenu.bind(this);\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    handleStitchClient() {\r\n        this.setState({\r\n            stitchClient: this.client,\r\n            userProfile: this.client.auth.userProfile,\r\n            isLoggedIn: true,\r\n        });\r\n    }\r\n\r\n    Home = () => {\r\n        if (this.client.auth.isLoggedIn) {\r\n            return (\r\n                <div>\r\n                    <MapView />\r\n                </div>\r\n            );\r\n        } else {\r\n            return <Login />;\r\n        }\r\n    };\r\n\r\n    NavMenu = () => {\r\n        if (this.client.auth.isLoggedIn) {\r\n            return <NavMenu center_container={this.center_container} />;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter basename=\"/\">\r\n                <div>\r\n                    <Navbar\r\n                        className=\"navbar bg-dark navbar-dark\"\r\n                        style={{\r\n                            position: \"fixed\",\r\n                            width: \"100%\",\r\n                            height: \"50px\",\r\n                            zIndex: 1500,\r\n                        }}\r\n                    >\r\n                        <Navbar.Brand href=\"#/\">Context AR</Navbar.Brand>\r\n                    </Navbar>\r\n                    {this.NavMenu()}\r\n                </div>\r\n\r\n                <div\r\n                    ref={this.center_container}\r\n                    className=\"center_container\"\r\n                    style={{\r\n                        position: \"fixed\",\r\n                        top: \"50px\",\r\n                        bottom: \"0\",\r\n                        width: \"100%\",\r\n                        height: \"calc(100% - 50px)\",\r\n                    }}\r\n                >\r\n                    <Switch>\r\n                        <Route exact path=\"/menu\" component={Menu} />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/modules/edit\"\r\n                            component={ManageModules}\r\n                        />\r\n                        <Route exact path=\"/modules/student\" component={ViewModules} />\r\n                        <Route exact path=\"/modules/instructor\" component={ViewModules} />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/module/:id/pins/edit\"\r\n                            component={DropPin}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/module/:id/pins\"\r\n                            component={ViewPinOnMap}\r\n                        />\r\n    \r\n                        <Route path=\"/completed/:module/:userid\">\r\n                            <Completed/>\r\n                        </Route>\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/module/:id/edit\"\r\n                            component={EditModule}\r\n                        />\r\n                        <Route path=\"/module/:id\" component={Module} />\r\n\r\n                        <Route exact path=\"/\">\r\n                            {this.Home}\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}