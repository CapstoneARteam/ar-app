{"version":3,"sources":["../node_modules/require_optional sync","components/MapView.js","components/Menu/Menu.js","components/Login.js","components/DropPin.js","components/Menu/NavMenu.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapView","props","state","currentLocation","lat","lng","zoom","userLocation","userLocationFound","getUserPosition","bind","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","console","log","this","Marker","Popup","Map","center","maxZoom","TileLayer","url","attribution","Component","Menu","username","useremail","userID","stitch_res","menuOpen","open","login","logout","addamodule","listmymodules","appId","Stitch","hasAppClient","client","getAppClient","mongodb","getServiceClient","RemoteMongoClient","factory","db","auth","isLoggedIn","authInfo","userProfile","data","first_name","email","userId","userImg","picture","credential","GoogleRedirectCredential","loginWithRedirect","window","location","reload","collection","insertOne","name","temp_module_name","owner","catch","error","find","_id","ObjectId","asArray","then","StyledMenu","setOpen","src","style","maxHeigh","maxWidth","top","fontSize","color","zIndex","listStyleType","paddingLeft","href","onClick","bottom","fontColor","styled","nav","withRouter","Login","hasRedirectResult","handleRedirectResult","user","replace","class","margin","left","right","height","floatStyle","width","backgroundColor","borderRadius","textAlign","boxShadow","DropPin","useState","setPosition","markers","setMarkers","canPlacePin","setCanPlacePin","useEffect","pos","latlng","StyledBurger","button","Burger","NavMenu","React","App","Home","className","initializeDefaultAppClient","stitchClient","basename","exact","path","component","Create_Modules","View_Modules","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a722acf9.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 156;","import React, {Component} from 'react'\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L from 'leaflet'\r\n\r\n\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\n\r\n\r\nclass MapView extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state ={\r\n      currentLocation: {lat: 45.51, lng:-122.68},\r\n      zoom: 13,\r\n      userLocation:[],\r\n      userLocationFound: false,\r\n    }\r\n  this.getUserPosition = this.getUserPosition.bind(this)\r\n  }\r\n  \r\n\r\n  getUserPosition(){\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\r\n      \r\n      console.log(this.state)\r\n      \r\n    })\r\n  \r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getUserPosition()\r\n\r\n    \r\n  }\r\n\r\n  render(){\r\n    const userLocation = this.state.userLocationFound ? (\r\n      <Marker position={this.state.userLocation}>\r\n        <Popup >Your location</Popup>\r\n      </Marker>\r\n    ) : null\r\n\r\n    return (\r\n      <Map center={this.state.currentLocation} zoom={13} maxZoom={18} >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n        />\r\n        {userLocation}     \r\n      </Map>\r\n    );\r\n    }\r\n}\r\n\r\nexport default MapView;","import React, {Component} from 'react'\r\nimport {Stitch, RemoteMongoClient, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\r\nimport { ObjectId } from 'mongodb'\r\nimport styled from 'styled-components'\r\nimport { withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass Menu extends Component{\r\n  constructor(props){\r\n      super(props)\r\n      this.state ={\r\n        username:\"\",\r\n        useremail:\"\",\r\n        userID:\"\",\r\n        stitch_res:[],\r\n        menuOpen: this.props.open,\r\n      }\r\n\r\n      //bind functions\r\n      this.login = this.login.bind(this)\r\n      this.logout = this.logout.bind(this)\r\n      this.addamodule = this.addamodule.bind(this)\r\n      this.listmymodules = this.listmymodules.bind(this)\r\n      console.log(props)\r\n  }\r\n\r\n  async componentDidMount(){\r\n    //init mongodb stitch\r\n    const appId = \"capstonear_app-xkqng\"\r\n    if (Stitch.hasAppClient(appId)){\r\n      this.client = Stitch.getAppClient(appId)\r\n      const mongodb = this.client.getServiceClient(\r\n        RemoteMongoClient.factory,\r\n        \"mongodb-atlas\"\r\n      );\r\n      //select the db in our mongdb atlas cluster\r\n      this.db = mongodb.db(\"APP\");\r\n      \r\n      if (this.client.auth.isLoggedIn && this.client.auth.authInfo.userProfile) {\r\n        this.setState(\r\n          {\r\n            username: this.client.auth.authInfo.userProfile.data.first_name,\r\n            useremail: this.client.auth.authInfo.userProfile.data.email,\r\n            userID: this.client.auth.authInfo.userId,\r\n            userImg: this.client.auth.authInfo.userProfile.data.picture,\r\n          }\r\n        )\r\n        \r\n        console.log(this.client.auth.authInfo.userProfile.data)\r\n      }\r\n\r\n      console.log(this.props.open)\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  //login button handler\r\n  async login(){       \r\n      //login using google redirect\r\n      const credential = new GoogleRedirectCredential();\r\n      this.client.auth.loginWithRedirect(credential);\r\n      console.log(this.state)\r\n  }\r\n\r\n  async logout(){\r\n    await this.client.auth.logout()\r\n    this.setState({\r\n        username:\"\",\r\n        useremail:\"\",\r\n        userID:\"\"\r\n    })\r\n    window.location.reload()\r\n  }\r\n\r\n  addamodule(){\r\n    this.db.collection(\"MODULES\")\r\n    .insertOne({\r\n      userID: this.state.userID,\r\n      name: this.state.temp_module_name,\r\n      owner: this.state.useremail,\r\n    })\r\n    .catch(console.error);\r\n  }\r\n\r\n  listmymodules() {\r\n    if(!this.client.auth.isLoggedIn){\r\n        return\r\n    }\r\n    this.db.collection(\"PINS\").find({_id: ObjectId(\"5ebed1bc5992681f357d7948\")})\r\n    .asArray()\r\n    .then((stitch_res) => {this.setState({stitch_res})\r\n      console.log(this.state.stitch_res[0])\r\n    }\r\n    )\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <StyledMenu open={this.props.open} setOpen={this.props.setOpen}>\r\n        <img src={this.state.userImg} style={{\r\n          maxHeigh: '100px',\r\n          maxWidth: '100px',\r\n          position: 'fixed',\r\n          top: '4rem',\r\n        }}></img>\r\n\r\n         <p style={{\r\n          position: 'fixed',\r\n          fontSize: '2rem',\r\n          top: '12rem',\r\n          color: 'white',\r\n          zIndex: 1002,\r\n          }}> Welcome, <br /> {this.state.username} </p>\r\n\r\n\r\n        <div>\r\n          <ul style={{listStyleType: 'none', paddingLeft: 0}}>\r\n            <li><a href=\"#/\" onClick={()=> {this.props.setOpen(!this.props.open)}}>Home</a></li>\r\n            <br/>\r\n            <li><a href=\"#/droppin\" onClick={()=> {this.props.setOpen(!this.props.open)}} >Drop pin</a></li>\r\n          </ul>\r\n        </div>\r\n\r\n        <a href=\"#\" onClick={this.logout} style={{\r\n          position: 'fixed',\r\n          fontSize: '1rem',\r\n          bottom: 0,\r\n          fontColor: '#00000',\r\n        }}>Log Out </a>\r\n      </StyledMenu>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// menu style sheet\r\n// tutorial from https://css-tricks.com/hamburger-menu-with-a-side-of-react-hooks-and-styled-components/ with modified styles\r\nconst StyledMenu = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  background: #292b2c;\r\n  transform: ${({ open }) => open ? 'translateX(-100)' : 'translateX(100%)'};\r\n  height: 100vh;\r\n  text-align: left;\r\n  padding: 2rem;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  transition: transform 0.3s ease-in-out;\r\n  z-index: 1501;\r\n\r\n  @media (max-width: 150px) {\r\n      width: 100%;\r\n    }\r\n\r\n  a {\r\n    font-size: 1.5rem;\r\n    text-transform: uppercase;\r\n    padding: 2rem 0;\r\n    font-weight: Light;\r\n    letter-spacing: 0.5rem;\r\n    color: #FFFFF;\r\n    text-decoration: none;\r\n    transition: color 0.3s linear;\r\n  \r\n    \r\n    @media (max-width: 150px) {\r\n      font-size: 1rem;\r\n      text-align: center;\r\n    }\r\n\r\n    &:hover {\r\n      color: #343078;\r\n    }\r\n  }\r\n`\r\n\r\nexport default withRouter(Menu)\r\n","import React, {Component} from 'react'\r\nimport './Login.css'\r\nimport {Stitch, RemoteMongoClient, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\r\n\r\nexport default class Login extends Component{\r\n    constructor(){\r\n        super()\r\n        const appId = \"capstonear_app-xkqng\"\r\n        this.client = Stitch.getAppClient(appId)\r\n        this.login = this.login.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n      if (this.client.auth.hasRedirectResult()) {\r\n        console.log(\"has results\")\r\n  \r\n        this.client.auth.handleRedirectResult().then(user => {\r\n          this.setState(\r\n            {\r\n              username: this.client.auth.authInfo.userProfile.data.name,\r\n              useremail: this.client.auth.authInfo.userProfile.data.email,\r\n              userID: this.client.auth.authInfo.userId,\r\n  \r\n            }\r\n          )\r\n          window.location.replace('#/')\r\n        }\r\n        )\r\n      }\r\n        \r\n       \r\n    }\r\n\r\n\r\n    async login(){\r\n          \r\n          //login using google redirect\r\n          const credential = new GoogleRedirectCredential();\r\n          await this.client.auth.loginWithRedirect(credential);\r\n          console.log(this.state)\r\n          \r\n        \r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      \r\n          <div class=\"row justify-content-center\" style={{\r\n            position: \"fixed\",\r\n            margin: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0,\r\n            height: \"50px\"\r\n          }}>\r\n              <button class=\"btn btn-primary\"onClick={this.login}>Login with Google</button>\r\n          </div>\r\n      \r\n    )\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\n\r\nconst floatStyle = {\r\n    position: \"fixed\",\r\n    width: \"60px\",\r\n    height: \"60px\",\r\n    bottom: \"40px\",\r\n    right: \"40px\",\r\n    backgroundColor: \"#0C9\",\r\n    color: \"#FFF\",\r\n    borderRadius: \"50px\",\r\n    textAlign: \"center\",\r\n    boxShadow: \"2px 2px 3px #999\",\r\n    zIndex: 1500\r\n}\r\n\r\nconst DropPin = () => {\r\n    const [position, setPosition] = useState([45, 45]);\r\n    const [markers, setMarkers] = useState([]);\r\n    const [canPlacePin, setCanPlacePin] = useState(false);\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(pos => {\r\n            const { latitude, longitude } = pos.coords;\r\n            setPosition([latitude, longitude]);\r\n        })\r\n    }, []);\r\n    return (\r\n        <Map center={position} zoom={13}\r\n            onClick={e => {\r\n                if (canPlacePin) {\r\n                    setMarkers(\r\n                        [...markers,\r\n                        <Marker position={[e.latlng.lat, e.latlng.lng]}>\r\n                            <Popup>testing</Popup>\r\n                        </Marker>\r\n                        ]\r\n                    );\r\n                    setCanPlacePin(!canPlacePin);\r\n                }\r\n            }}\r\n        >\r\n            <button style={floatStyle} onClick={()=>setCanPlacePin(!canPlacePin)}>\r\n                <div style={{fontSize: \"40px\"}}>+</div>\r\n            </button>\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n            />\r\n            {markers}\r\n        </Map>\r\n    );\r\n}\r\n\r\nexport default DropPin;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Menu from './Menu'\r\nimport { is } from '@babel/types'\r\n\r\nconst StyledBurger = styled.button`\r\n  position: absolute;\r\n  top: 5%;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 1502;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.25rem;\r\n    background: ${({ open }) => open ? '#FFFFFF' : '#292b2c'};\r\n    border-radius: 10px;\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => open ? '0' : '1'};\r\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\r\n    }\r\n  }\r\n`\r\n\r\nconst Burger = ({ open, setOpen }) => {\r\n  return (\r\n    <StyledBurger open={open} onClick={() => setOpen(!open)}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </StyledBurger>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst NavMenu = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n \r\n    return (\r\n        <div>\r\n        <Burger open={open} setOpen={setOpen} />\r\n        <Menu open={open} setOpen={setOpen}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavMenu","import React, { Component } from 'react';\r\n\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport MapView from './components/MapView.js'\r\nimport Menu from './components/Menu/Menu.js'\r\nimport { Stitch , ObjectID} from 'mongodb-stitch-browser-sdk'\r\nimport Login from './components/Login'\r\nimport DropPin from './components/DropPin';\r\nimport NavMenu from './components/Menu/NavMenu'\r\n\r\n\r\nimport {\r\n  Switch,\r\n  Route,\r\n  HashRouter,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { thisExpression } from '@babel/types';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    const appId = \"capstonear_app-xkqng\"\r\n    this.client = Stitch.hasAppClient(appId)\r\n      ? Stitch.getAppClient(appId)\r\n      : Stitch.initializeDefaultAppClient(appId)\r\n      \r\n    if (this.client.auth.hasRedirectResult()) {\r\n      console.log(\"has results\")\r\n\r\n      this.client.auth.handleRedirectResult().then(user => {\r\n        window.location.reload()\r\n      }\r\n      )\r\n    }\r\n    else {\r\n\r\n      //window.location.replace('#/login')\r\n\r\n    }\r\n    this.state = {\r\n      isLoggedIn : false,\r\n    }\r\n\r\n    this.NavMenu = this.NavMenu.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  handleStitchClient(){\r\n    this.setState(\r\n      {\r\n        stitchClient : this.client,\r\n        userProfile : this.client.auth.userProfile,\r\n        isLoggedIn : true,\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  Home = () => {\r\n    if (this.client.auth.isLoggedIn) {\r\n      return (\r\n        <div className=\"App\">\r\n          <MapView />\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"Login\">\r\n          <Login />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  NavMenu = () => {\r\n    if (this.client.auth.isLoggedIn) {\r\n      return (\r\n        <NavMenu />\r\n      );\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <HashRouter basename=\"/\">\r\n\r\n        <div className=\"\">\r\n          <div>\r\n          {this.NavMenu()}\r\n          </div>\r\n\r\n          <div>\r\n          <Switch>\r\n            <Route exact path=\"/\">{this.Home}</Route>\r\n            <Route exact path=\"/menu\" component={Menu} />\r\n            <Route exact path=\"/droppin\">\r\n              <DropPin />\r\n            </Route>\r\n            <Route exact path=\"/create_module\" component={Create_Modules} />\r\n            <Route exact path=\"/view_module\" component={View_Modules} />\r\n          </Switch>\r\n          </div>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst Create_Modules = () => {\r\n  return <h2>Admin</h2>;\r\n}\r\n\r\nconst View_Modules = () => {\r\n  return <h2>Student</h2>;\r\n}\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}