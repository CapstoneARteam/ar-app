{"version":3,"sources":["../node_modules/require_optional sync","components/MapView.js","components/Menu/Menu.js","components/Login.js","components/DropPin.js","components/Menu/NavMenu.js","components/Module.js","components/EditModule.js","components/ViewModules.js","components/ManageModules.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapView","props","state","currentLocation","lat","lng","zoom","userLocation","userLocationFound","getUserPosition","bind","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","console","log","this","Marker","Popup","Map","center","maxZoom","TileLayer","url","attribution","Component","Menu","username","useremail","userID","stitch_res","menuOpen","open","login","logout","addamodule","listmymodules","appId","Stitch","hasAppClient","client","getAppClient","mongodb","getServiceClient","RemoteMongoClient","factory","db","auth","isLoggedIn","authInfo","userProfile","data","first_name","email","userId","userImg","picture","credential","GoogleRedirectCredential","loginWithRedirect","window","location","reload","collection","insertOne","owner_id","name","temp_module_name","owner","catch","error","find","_id","ObjectId","asArray","then","StyledMenu","setOpen","center_container","style","top","src","alt","maxHeigh","maxWidth","borderRadius","fontSize","color","zIndex","listStyleType","paddingLeft","onClick","current","opacity","href","fontColor","bottom","styled","nav","Login","hasRedirectResult","handleRedirectResult","user","assign","class","margin","left","right","height","initializeDefaultAppClient","globalPosition","floatStyle","width","backgroundColor","textAlign","boxShadow","AddpinForm","Modal","centered","Header","Title","Body","className","for","type","required","Footer","onHide","title","document","getElementById","value","hint","description","destination","long","setMarkers","markers","key","DropPin","useState","setPosition","canPlacePin","setCanPlacePin","modalShow","setModalShow","useEffect","pos","latlng","show","StyledBurger","button","Burger","NavMenu","React","Module","current_position","module_info","owner_email","owner_name","fetch_userinfo","initializeAppClient","match","params","undefined","length","err","Container","EditModule","selected","save_module","radiotype","pins","shared_array","public","Form","Group","Control","placeholder","as","rows","Row","Col","sm","Check","label","checked","onChange","span","offset","Button","variant","event","preventDefault","confirm","history","goBack","ViewModules","modules","my_modules","shared_modules","img1","goto_module_id","createRef","add_module_cards","fetch_modules","goto_module","0","1","shared_with","mds","map","idx","Card","display","Width","justifyContent","Img","Subtitle","Text","CardDeck","overflowY","marginLeft","marginRight","Tabs","defaultActiveKey","transition","Tab","eventKey","controlId","Label","ref","ManageModules","modal","toggle","modal_message","list_modules","load_modules","delete_module","add_module","save_modules","form","xs","FormGroup","Input","target","toArray","res","query","deleteOne","splice","push","Promise","all","update","$set","updateOne","upsert","overflow","alignItems","onSubmit","maxHeight","overflowX","marginTop","size","block","isOpen","ModalHeader","ModalBody","ModalFooter","App","Home","stitchClient","basename","Navbar","Brand","exact","path","component","Create_Modules","Boolean","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f4b64cac.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 168;","import React, {Component} from 'react'\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L from 'leaflet'\r\n\r\n\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\n\r\n\r\nclass MapView extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state ={\r\n      currentLocation: {lat: 45.51, lng:-122.68},\r\n      zoom: 13,\r\n      userLocation:[],\r\n      userLocationFound: false,\r\n    }\r\n  this.getUserPosition = this.getUserPosition.bind(this)\r\n  }\r\n  \r\n\r\n  getUserPosition(){\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\r\n      \r\n      console.log(this.state)\r\n      \r\n    })\r\n  \r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getUserPosition()\r\n\r\n    \r\n  }\r\n\r\n  render(){\r\n    const userLocation = this.state.userLocationFound ? (\r\n      <Marker position={this.state.userLocation}>\r\n        <Popup >Your location</Popup>\r\n      </Marker>\r\n    ) : null\r\n\r\n    return (\r\n      <div id='leaflet-container'>\r\n      <Map center={this.state.currentLocation} zoom={13} maxZoom={18} >\r\n        <TileLayer\r\n          \r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n        />\r\n        {userLocation}     \r\n      </Map>\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default MapView;","import React, {Component} from 'react'\r\nimport {Stitch, RemoteMongoClient, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\r\nimport { ObjectId } from 'mongodb'\r\nimport styled from 'styled-components'\r\n\r\n\r\n\r\n\r\nclass Menu extends Component{\r\n  constructor(props){\r\n      super(props)\r\n      this.state ={\r\n        username:\"\",\r\n        useremail:\"\",\r\n        userID:\"\",\r\n        stitch_res:[],\r\n        menuOpen: this.props.open,\r\n      }\r\n\r\n      //bind functions\r\n      this.login = this.login.bind(this)\r\n      this.logout = this.logout.bind(this)\r\n      this.addamodule = this.addamodule.bind(this)\r\n      this.listmymodules = this.listmymodules.bind(this)\r\n      console.log(props)\r\n      const appId = \"capstonear_app-xkqng\"\r\n      if (Stitch.hasAppClient(appId)){\r\n        this.client = Stitch.getAppClient(appId)\r\n        const mongodb = this.client.getServiceClient(\r\n          RemoteMongoClient.factory,\r\n          \"mongodb-atlas\"\r\n        );\r\n        //select the db in our mongdb atlas cluster\r\n        this.db = mongodb.db(\"APP\");\r\n      }\r\n  }\r\n\r\n  async componentDidMount(){\r\n    //init mongodb stitch\r\n  \r\n      \r\n      if (this.client.auth.isLoggedIn && this.client.auth.authInfo.userProfile) {\r\n        this.setState(\r\n          {\r\n            username: this.client.auth.authInfo.userProfile.data.first_name,\r\n            useremail: this.client.auth.authInfo.userProfile.data.email,\r\n            userID: this.client.auth.authInfo.userId,\r\n            userImg: this.client.auth.authInfo.userProfile.data.picture,\r\n          }\r\n        )\r\n        \r\n        console.log(this.client.auth.authInfo.userProfile.data)\r\n      }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  //login button handler\r\n  async login(){       \r\n      //login using google redirect\r\n      const credential = new GoogleRedirectCredential();\r\n      this.client.auth.loginWithRedirect(credential);\r\n      console.log(this.state)\r\n  }\r\n\r\n  async logout(){\r\n    await this.client.auth.logout()\r\n    this.setState({\r\n        username:\"\",\r\n        useremail:\"\",\r\n        userID:\"\"\r\n    })\r\n    window.location.reload()\r\n  }\r\n\r\n  addamodule(){\r\n    this.db.collection(\"MODULES\")\r\n    .insertOne({\r\n      owner_id: this.state.userID,\r\n      name: this.state.temp_module_name,\r\n      owner: this.state.useremail,\r\n    })\r\n    .catch(console.error);\r\n  }\r\n\r\n  listmymodules() {\r\n    if(!this.client.auth.isLoggedIn){\r\n        return\r\n    }\r\n    this.db.collection(\"PINS\").find({_id: ObjectId(\"5ebed1bc5992681f357d7948\")})\r\n    .asArray()\r\n    .then((stitch_res) => {this.setState({stitch_res})\r\n      console.log(this.state.stitch_res[0])\r\n    }\r\n    )\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <StyledMenu open={this.props.open} setOpen={this.props.setOpen} center_container={this.props.center_container} style={{\r\n        \r\n      }}>\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: '2rem',\r\n        }}>\r\n        <img src={this.state.userImg} alt=\"test\" style={{\r\n          maxHeigh: '80px',\r\n          maxWidth: '80px',\r\n          borderRadius: '50%',\r\n          top: '1rem',\r\n        }}></img>\r\n\r\n         <p style={{\r\n          fontSize: '1.5rem',\r\n          top: '4rem',\r\n          color: 'white',\r\n          zIndex: 1002,\r\n          }}> Welcome, <br /> {this.state.username} </p>\r\n        </div>\r\n        \r\n          <ul style={{listStyleType: 'none', paddingLeft: 0}} onClick={ ()=> {\r\n            this.props.center_container.center_container.current.style.opacity = 1\r\n            this.props.setOpen(!this.props.open)\r\n          }}>\r\n            <li><a href=\"#/\">Home</a></li>\r\n            <br/>\r\n            <li><a href=\"#/droppin\">Drop pin</a></li>\r\n            <br/>\r\n            <li><a href=\"#/viewmodules\">My Modules</a></li>\r\n            <br/>\r\n            <li><a href=\"#/managemodules\">Edit Modules</a></li>\r\n            <br/>\r\n            <li><a href=\"#/editmodule\">Edit Module</a></li>\r\n          </ul>\r\n        \r\n\r\n\r\n\r\n        <a href='#/logout' onClick={this.logout} style={{\r\n          position:'absolute',\r\n          fontSize: '1rem',\r\n          fontColor: '#00000',\r\n          bottom: '10rem',\r\n        }}>Log Out</a>\r\n        \r\n\r\n      </StyledMenu>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// menu style sheet\r\n// tutorial from https://css-tricks.com/hamburger-menu-with-a-side-of-react-hooks-and-styled-components/ with modified styles\r\nconst StyledMenu = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  background: #343a40;\r\n  transform: ${({ open }) => open ? 'translateX(-100)' : 'translateX(100%)'};\r\n  height: 100vh;\r\n  text-align: left;\r\n  padding: 2rem;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom:0;\r\n  transition: transform 0.3s ease-in-out;\r\n  z-index: 1501;\r\n\r\n  @media (max-width: 150px) {\r\n      width: 100%;\r\n    }\r\n\r\n  a {\r\n    font-size: 1.5rem;\r\n    text-transform: uppercase;\r\n    padding: 2rem 0;\r\n    font-weight: Light;\r\n    letter-spacing: 0.5rem;\r\n    color: #FFFFF;\r\n    text-decoration: none;\r\n    transition: color 0.3s linear;\r\n  \r\n    \r\n    @media (max-width: 150px) {\r\n      font-size: 1rem;\r\n      text-align: center;\r\n    }\r\n\r\n    &:hover {\r\n      color: #343078;\r\n    }\r\n  }\r\n`\r\n\r\nexport default Menu\r\n","import React, {Component} from 'react'\r\nimport './Login.css'\r\nimport {Stitch, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\r\n\r\nexport default class Login extends Component{\r\n    constructor(){\r\n        super()\r\n        const appId = \"capstonear_app-xkqng\"\r\n        this.client = Stitch.getAppClient(appId)\r\n        this.login = this.login.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n      if (this.client.auth.hasRedirectResult()) {\r\n        console.log(\"has results\")\r\n  \r\n        this.client.auth.handleRedirectResult().then(user => {\r\n          this.setState(\r\n            {\r\n              username: this.client.auth.authInfo.userProfile.data.name,\r\n              useremail: this.client.auth.authInfo.userProfile.data.email,\r\n              userID: this.client.auth.authInfo.userId,\r\n  \r\n            }\r\n          )\r\n          window.location.assign('#/')\r\n        }\r\n        )\r\n      }\r\n        \r\n       \r\n    }\r\n\r\n\r\n    async login(){\r\n          \r\n          //login using google redirect\r\n          const credential = new GoogleRedirectCredential();\r\n          await this.client.auth.loginWithRedirect(credential);\r\n          console.log(this.state)\r\n          \r\n        \r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      \r\n          <div class=\"row justify-content-center\" style={{\r\n            position: \"fixed\",\r\n            margin: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0,\r\n            height: \"50px\"\r\n          }}>\r\n              <button class=\"btn btn-primary\"onClick={this.login}>Login with Google</button>\r\n          </div>\r\n      \r\n    )\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport {Stitch, RemoteMongoClient} from \"mongodb-stitch-browser-sdk\"\r\nimport { Modal } from 'react-bootstrap'\r\n\r\nconst appId = \"capstonear_app-xkqng\"\r\nconst client = Stitch.hasAppClient(appId)\r\n    ? Stitch.getAppClient(appId)\r\n    : Stitch.initializeDefaultAppClient(appId)\r\nconst mongodb = client.getServiceClient(\r\n    RemoteMongoClient.factory,\r\n    \"mongodb-atlas\"\r\n);\r\nconst db = mongodb.db(\"APP\"); \r\nvar globalPosition = {};\r\n\r\nconst floatStyle = {\r\n    position: \"fixed\",\r\n    width: \"60px\",\r\n    height: \"60px\",\r\n    bottom: \"40px\",\r\n    right: \"40px\",\r\n    backgroundColor: \"#0C9\",\r\n    color: \"#FFF\",\r\n    borderRadius: \"50px\",\r\n    textAlign: \"center\",\r\n    boxShadow: \"2px 2px 3px #999\",\r\n    zIndex: 1500\r\n}\r\n\r\nconst AddpinForm = props => {\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            centered\r\n            style={{zIndex: \"1600\"}}\r\n        >\r\n            <Modal.Header>\r\n                <Modal.Title>Add a Pin</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <label className=\"d-block\" for=\"title\">Title</label>\r\n                <input type=\"text\" className=\"w-100\" id=\"title\" required/>\r\n                <label className=\"d-block\" for=\"description\">Description</label>\r\n                <textarea className=\"w-100\" id=\"description\" required/>\r\n                <label className=\"d-block\" for=\"hint\">Hint</label>\r\n                <textarea className=\"w-100\" id=\"hint\" required/>\r\n                <label className=\"d-block\" for=\"destination\">Destination</label>\r\n                <textarea className=\"w-100\" id=\"destination\" required/>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button className=\"btn btn-secondary\" onClick={props.onHide}>\r\n                    Cancel\r\n                </button>\r\n                <button className=\"btn btn-primary\" onClick={() => {\r\n                    const title = document.getElementById(\"title\").value || \"\";\r\n                    const hint = document.getElementById(\"hint\").value || \"\";\r\n                    const description = document.getElementById(\"description\").value || \"\";\r\n                    const destination = document.getElementById(\"destination\").value || \"\";\r\n                    const { lng, lat } = globalPosition;\r\n                    db.collection(\"PINS\")\r\n                        .insertOne({\r\n                            name: title,\r\n                            description: description,\r\n                            hint: hint,\r\n                            destination: destination,\r\n                            long: lng,\r\n                            lat: lat\r\n                        })\r\n                    props.setMarkers(\r\n                        [...props.markers,\r\n                        <Marker key={globalPosition} position={[lat, lng]}>\r\n                            <Popup>\r\n                                <h1>{title}</h1>\r\n                                <p>{description}</p>\r\n                                <p>{hint}</p>\r\n                                <p>{destination}</p>\r\n                            </Popup>\r\n                        </Marker>\r\n                        ]\r\n                    );\r\n                    props.onHide();\r\n                }}>\r\n                    Submit\r\n                </button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst DropPin = () => {\r\n    const [position, setPosition] = useState([45, 45]);\r\n    const [markers, setMarkers] = useState([]);\r\n    const [canPlacePin, setCanPlacePin] = useState(false);\r\n    const [ modalShow, setModalShow ] = useState(false);\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(pos => {\r\n            const { latitude, longitude } = pos.coords;\r\n            setPosition([latitude, longitude]);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <Map center={position} zoom={13}\r\n            onClick={e => {\r\n                if (canPlacePin) {\r\n                    globalPosition = e.latlng;\r\n                    setModalShow(true);\r\n                    setCanPlacePin(!canPlacePin);\r\n                }\r\n            }}\r\n        >\r\n            <AddpinForm \r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                setMarkers={setMarkers}\r\n                markers={markers}\r\n            />\r\n            <button style={floatStyle} onClick={()=>setCanPlacePin(!canPlacePin)}>\r\n                <div style={{fontSize: \"40px\"}}>+</div>\r\n            </button>\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n            />\r\n            <Marker position={position}>\r\n                <Popup >Your location</Popup>\r\n            </Marker>\r\n            {markers}\r\n        </Map>\r\n    );\r\n}\r\n\r\nexport default DropPin;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Menu from './Menu'\r\n\r\n\r\nconst StyledBurger = styled.button`\r\n  position: fixed;\r\n  top: 10px;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 1502;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.25rem;\r\n    background: ${({ open }) => open ? '#FFFFFF' : '#FFFFFF'};\r\n    border-radius: 10px;\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => open ? '0' : '1'};\r\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\r\n    }\r\n  }\r\n`\r\n\r\nconst Burger = ({ open, setOpen, center_container }) => {\r\n  console.log(center_container.center_container.current)\r\n  return (\r\n    <StyledBurger open={open} onClick={() => {\r\n      setOpen(!open)\r\n      if(!open)\r\n        center_container.center_container.current.style.opacity = .5 \r\n      else\r\n        center_container.center_container.current.style.opacity = 1\r\n    }}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </StyledBurger>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst NavMenu = (center_container) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n        <div>\r\n        <Burger open={open} setOpen={setOpen} center_container={center_container} />\r\n        <Menu open={open} setOpen={setOpen} center_container={center_container}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavMenu","import React, { Component} from 'react'\r\n\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\r\nimport {Container} from 'react-bootstrap'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport {Stitch,RemoteMongoClient } from \"mongodb-stitch-browser-sdk\"\r\nimport {ObjectId} from 'mongodb'\r\n\r\nexport default class Module extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            current_position:[],\r\n            module_info: {\r\n                name:'',\r\n                owner_email: '',\r\n                owner_id: '',\r\n                owner_name: '',\r\n                description: '',\r\n            },\r\n        }\r\n\r\n        this.getUserPosition = this.getUserPosition.bind(this)\r\n        this.fetch_userinfo = this.fetch_userinfo.bind(this)\r\n\r\n        const appId = \"capstonear_app-xkqng\"\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId)\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n              );\r\n              //select the db in our mongdb atlas cluster\r\n              this.db = mongodb.db(\"APP\");\r\n            console.log(\"client\")\r\n        }\r\n        else{\r\n            this.client = Stitch.initializeAppClient(appId)\r\n            console.log(\"client init\")\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        this.getUserPosition()\r\n        this.fetch_userinfo()\r\n        const appId = \"capstonear_app-xkqng\"\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId)\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n              );\r\n              //select the db in our mongdb atlas cluster\r\n              this.db = mongodb.db(\"APP\");\r\n            console.log(\"client\")\r\n        }\r\n        else{\r\n            this.client = Stitch.initializeAppClient(appId)\r\n            console.log(\"client init\")\r\n        }\r\n    }\r\n\r\n    async fetch_userinfo(){\r\n        await this.db.collection(\"MODULES\").find({\r\n            _id: ObjectId(this.props.match.params.id)\r\n        })\r\n        .asArray()\r\n        .then((module_info) => {\r\n            if(module_info === undefined || module_info.length === 0)\r\n            {\r\n                console.log(module_info)\r\n                return\r\n            }\r\n            this.setState({module_info: module_info[0]}\r\n            )\r\n          console.log(module_info)\r\n        }\r\n        )\r\n        .catch((err) => {this.setState({error: err})\r\n         console.log(err)\r\n        }\r\n        )\r\n       \r\n    }\r\n\r\n    getUserPosition(){\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n          this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\r\n          \r\n          console.log(this.state)\r\n          \r\n        })\r\n    }\r\n\r\n    renderMap(){\r\n        const userLocation = this.state.userLocationFound ? (\r\n            <Marker position={this.state.userLocation}>\r\n              <Popup >Your location</Popup>\r\n            </Marker>\r\n          ) : null\r\n\r\n        return (\r\n        <div id='leaflet-container'>\r\n        <Map center={this.state.currentLocation} zoom={13} maxZoom={18} >\r\n            <TileLayer\r\n            \r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n            />\r\n            {userLocation}     \r\n        </Map>\r\n        </div>\r\n        )   \r\n    }\r\n\r\n\r\n\r\n    render(){\r\n      \r\n        return(\r\n            <Container>\r\n                title: \r\n                <br />\r\n                {this.state.module_info.title}\r\n                <br />\r\n                <br />\r\n\r\n                owner_email: \r\n                <br />\r\n                {this.state.module_info.owner_email}\r\n                <br />\r\n                <br />\r\n\r\n                owner_name: \r\n                <br />\r\n                {this.state.module_info.owner_name}\r\n                <br />\r\n                <br />\r\n\r\n                owner_id: \r\n                <br />\r\n                {this.state.module_info.owner_id}\r\n                <br />\r\n                <br />\r\n\r\n                description: \r\n                <br />\r\n                {this.state.module_info.description}\r\n                <br />\r\n                <br />\r\n              \r\n\r\n\r\n                <button className='btn btn-primary'>start module</button>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React, { Component, } from 'react'\r\nimport { Row, Col, Form, Button } from 'react-bootstrap'\r\nimport {Stitch, RemoteMongoClient} from \"mongodb-stitch-browser-sdk\" \r\n\r\nexport default class EditModule extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selected: true\r\n        }\r\n\r\n        this.save_module = this.save_module.bind(this);\r\n\r\n        const appId = \"capstonear_app-xkqng\"\r\n        this.client = Stitch.hasAppClient(appId)\r\n            ? Stitch.getAppClient(appId)\r\n            : Stitch.initializeDefaultAppClient(appId)\r\n        const mongodb = this.client.getServiceClient(\r\n            RemoteMongoClient.factory,\r\n            \"mongodb-atlas\"\r\n        )\r\n        this.db = mongodb.db(\"APP\")\r\n    }\r\n\r\n    save_module() {\r\n        const title = document.getElementById(\"title\").value || \"\";\r\n        const description = document.getElementById(\"description\").value || \"\";\r\n        const radiotype = this.state.selected;\r\n        this.db.collection(\"MODULES\")\r\n            .insertOne({\r\n                title: title,\r\n                owner_id: this.client.auth.authInfo.userId,\r\n                owner_name: this.client.auth.authInfo.userProfile.name,\r\n                owner_email: this.client.auth.authInfo.userProfile.email,\r\n                description: description,\r\n                pins: [],\r\n                shared_array: [],\r\n                public: radiotype,\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Form style={{\r\n                top: '40px',\r\n                position: 'relative',\r\n                textAlign: 'center',\r\n            }}>\r\n                <Form.Group>\r\n                    <Form.Control type=\"title\" id=\"title\" placeholder=\"Module Title\" \r\n                    style={{ textAlign: 'center', width: '300px', margin: '0 auto',}} />\r\n                </Form.Group>\r\n    \r\n                <Form.Group>\r\n                    <Form.Control as=\"textarea\" rows=\"5\" id=\"description\" placeholder=\"Description\"\r\n                    style={{ textAlign: 'center', width: '300px', margin: '0 auto',}}/>\r\n                </Form.Group>\r\n                <fieldset>\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={10}>\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Public\"\r\n                            name=\"formHorizontalRadios\"\r\n                            id=\"true\"\r\n                            checked={this.state.selected === true} onChange={(e) => this.setState({ selected: true })}\r\n                            />\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Private\"\r\n                            name=\"formHorizontalRadios\"\r\n                            id=\"false\"\r\n                            checked={this.state.selected === false} onChange={(e) => this.setState({ selected: false })}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                </fieldset>\r\n    \r\n                <Form.Group as={Row}>\r\n                    <Col sm={{ span: 10, offset: 2 }}>  \r\n                        <Button variant=\"primary\">Add Pins</Button>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Col sm={{ span: 10, offset: 2 }}>\r\n                        <Button className=\"btn btn-primary\" onClick={(event) => {\r\n                            event.preventDefault();\r\n                            var save = window.confirm(\r\n                                'You have saved the module!'\r\n                            );\r\n                            this.save_module();\r\n                            this.props.history.goBack();\r\n                        }}>\r\n                            Save\r\n                        </Button>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Col sm={{ span: 10, offset: 2 }}>   \r\n                        <Button variant=\"primary\">Share</Button>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n        )\r\n    }\r\n}","import React, { Component, } from 'react'\r\nimport {Card, Tab, Tabs, CardDeck, Form, Button, Spinner} from 'react-bootstrap'\r\nimport {Stitch,RemoteMongoClient,  } from \"mongodb-stitch-browser-sdk\"\r\n//import {AwsServiceClient, AwsRequest} from 'mongodb-stitch-browser-services-aws'\r\n\r\nexport default class ViewModules extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            \r\n            modules: [],\r\n            my_modules: [],\r\n            shared_modules:[],\r\n            img1:'',\r\n            stitch_res:[],\r\n        \r\n        }\r\n\r\n        //refs\r\n        this.goto_module_id = React.createRef()\r\n\r\n        this.add_module_cards = this.add_module_cards.bind(this)\r\n        this.fetch_modules = this.fetch_modules.bind(this)\r\n        this.goto_module = this.goto_module.bind(this)\r\n        \r\n        const appId = \"capstonear_app-xkqng\"\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId)\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n              );\r\n              //select the db in our mongdb atlas cluster\r\n              this.db = mongodb.db(\"APP\");\r\n        }\r\n        else{\r\n            this.client = Stitch.initializeAppClient(appId)\r\n            //console.log(\"client init\")\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetch_modules()\r\n\r\n        console.log(this.state)\r\n    }\r\n\r\n    async fetch_modules(){\r\n        await this.db.collection(\"MODULES\").find({\r\n           owner_id: this.client.auth.authInfo.userId\r\n        })\r\n        .asArray()\r\n        .then((my_modules) => {\r\n            this.setState({\r\n                my_modules : my_modules,\r\n                modules: {\r\n                    0: my_modules,\r\n                    1: this.state.shared_modules\r\n                }\r\n            })\r\n\r\n\r\n            console.log(this.state.my_modules)\r\n        }\r\n        )\r\n\r\n\r\n        //fetch shared modules\r\n        await this.db.collection(\"MODULES\").find({\r\n           shared_with : this.client.auth.authInfo.userProfile.data.email\r\n        })\r\n        .asArray()\r\n        .then((shared_modules) => {this.setState({\r\n            shared_modules : shared_modules,\r\n            modules: {\r\n                0: this.state.my_modules,\r\n                1: shared_modules\r\n            }\r\n        })\r\n            console.log(shared_modules)\r\n        }\r\n        )\r\n        console.log(this.state.modules)\r\n        \r\n    }\r\n\r\n  \r\n\r\n    goto_module(id){\r\n        window.location.assign('#/module/' + id)\r\n    }\r\n\r\n    add_module_cards(type){\r\n        \r\n        if(this.state.modules.length === 0)\r\n            return\r\n\r\n        const mds= this.state.modules[type].map(function(module,idx) {\r\n            return (\r\n                <div className=\"col-md-6 col-lg-4 \" key={idx}>\r\n                    <Card className='h-100' style={{\r\n                        display: 'fixed',\r\n                        \r\n                        Width: '25rem',\r\n                        margin: '0.25rem',\r\n                        justifyContent:'center',\r\n                        textAlign:'center'\r\n                    }} >\r\n                        <Card.Body>\r\n                            <Card.Img variant=\"top\" src=\"https://capstoneusercontent.s3.amazonaws.com/ar.png\" />\r\n                            <Card.Title>{module.title}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">by {module.owner_name} ({module.owner_email})</Card.Subtitle>\r\n                            <Card.Text>\r\n                                {module.description}\r\n                            </Card.Text>\r\n                            <div className='btn-toolbar' style={{\r\n                                justifyContent:'center'\r\n                            }}>\r\n                                <div className='btn-group mr-2'>\r\n                                    <button className=\"btn btn-primary\" onClick={()=> window.location.assign('#/module/' + module._id)}>View Details</button>\r\n                                </div>\r\n                                <div className='btn-group mr-2'>\r\n                                    <button className=\"btn btn-primary\">Start Module</button>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <div style={{\r\n                top: '50px',\r\n                bottom: '0px',\r\n                position: 'relative',\r\n            }}\r\n                className=\"container\"\r\n            >\r\n                <CardDeck style={{\r\n                    top: '50px',\r\n                }}>\r\n                    {mds}\r\n                </CardDeck>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n\r\n       \r\n\r\n\r\n        return(\r\n            <div style={{\r\n                position:'absolute',\r\n                top: '0px',\r\n                bottom:'0px',\r\n                width: '100%',\r\n                overflowY: 'scroll'\r\n            }}>\r\n            <div style={{\r\n                top:'10px',\r\n                position:'relative',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                \r\n            }\r\n            }>\r\n\r\n                <Tabs defaultActiveKey=\"My Modules\" transition={false} style={{\r\n                    textAlign:'center',\r\n                    justifyContent:'center',\r\n                }}>\r\n                    <Tab eventKey=\"My Modules\" title=\"My Modules\">\r\n                        {this.add_module_cards(0)}\r\n                    </Tab>\r\n\r\n                    <Tab eventKey=\"Shared Modules\" title=\"Shared with me\">\r\n                        {this.add_module_cards(1)}\r\n                    </Tab>\r\n\r\n                    \r\n                    <Tab eventKey=\"Go To\" title=\"Go To\">\r\n                        <Form >\r\n                            <Form.Group controlId=\"formModuleId\">\r\n                                <Form.Label>Module ID:</Form.Label>\r\n                                <Form.Control required type=\"string\" placeholder=\"Enter module id\" ref={this.goto_module_id} />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" onClick={ ()=>{\r\n                                window.location.assign('#/module/' + this.goto_module_id.current.value)\r\n                            }\r\n                            } >\r\n                                View Module\r\n                            </Button>\r\n                        </Form>\r\n\r\n                    </Tab>\r\n\r\n                </Tabs>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n} from \"reactstrap\";\r\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\r\n\r\nexport default class ManageModules extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modules: [],\r\n            modal: false,\r\n            idx: -1,\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.modal_message = this.modal_message.bind(this);\r\n        this.list_modules = this.list_modules.bind(this);\r\n        this.load_modules = this.load_modules.bind(this);\r\n        this.delete_module = this.delete_module.bind(this);\r\n        this.add_module = this.add_module.bind(this);\r\n        this.save_modules = this.save_modules.bind(this);\r\n\r\n        // Setting up DB with Stitch\r\n        const appId = \"capstonear_app-xkqng\";\r\n        this.client = Stitch.hasAppClient(appId)\r\n            ? Stitch.getAppClient(appId)\r\n            : Stitch.initializeDefaultAppClient(appId);\r\n        const mongodb = this.client.getServiceClient(\r\n            RemoteMongoClient.factory,\r\n            \"mongodb-atlas\"\r\n        );\r\n        this.db = mongodb.db(\"APP\");\r\n\r\n        this.load_modules();\r\n    }\r\n\r\n    toggle() {\r\n        var modal = !this.state.modal;\r\n        this.setState({ modal: modal });\r\n    }\r\n\r\n    modal_message() {\r\n        if (this.state.idx < 0) return <p>Nothing to delete</p>;\r\n        else\r\n            return (\r\n                <p>\r\n                    Are you sure you want to delete{\" \"}\r\n                    <b>{this.state.modules[this.state.idx].title}</b>?\r\n                </p>\r\n            );\r\n    }\r\n\r\n    list_modules() {\r\n        return this.state.modules.map((module, idx) => {\r\n            return (\r\n                <div key={idx}>\r\n                    <Row form>\r\n                        <Col xs=\"6\">\r\n                            <FormGroup>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    value={this.state.modules[idx].title}\r\n                                    onChange={(event) => {\r\n                                        event.preventDefault();\r\n\r\n                                        var modules = [...this.state.modules];\r\n                                        modules[idx].title = event.target.value;\r\n                                        this.setState({ modules });\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                color=\"link\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n\r\n                                    // How should we navigate to \"Edit Module\" view?\r\n                                    // How do you convert an ObjectID to a usable String?\r\n                                    //var id = this.state.modules[idx]._id\r\n                                    //this.props.history.push(\"#/editmodule/module?id=\" + id)\r\n                                }}\r\n                            >\r\n                                Edit\r\n                            </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                color=\"danger\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.setState({ idx: idx });\r\n                                    this.toggle();\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    load_modules() {\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .find({\r\n                owner_id: this.client.auth.authInfo.userId\r\n                }\r\n            )\r\n            .toArray()\r\n            .then((res) => {\r\n                console.log(\"Load response: \", res);\r\n\r\n                this.setState({ modules: res });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    delete_module(idx) {\r\n        const query = { _id: this.state.modules[idx]._id };\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .deleteOne(query)\r\n            .then((res) => {\r\n                console.log(\"Delete response: \", res);\r\n\r\n                // Update module list\r\n                var modules = [...this.state.modules];\r\n                modules.splice(idx, 1);\r\n                this.setState({ modules: modules, idx: -1 });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    add_module() {\r\n        const query = {\r\n            title: \"title\",\r\n            owner_id: this.client.auth.authInfo.userId,\r\n            owner_name: this.client.auth.authInfo.userProfile.name,\r\n            owner_email: this.client.auth.authInfo.userProfile.email,\r\n            description: \"\",\r\n            pins: [],\r\n            shared_with: [],\r\n            public: false,\r\n        };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .insertOne(query)\r\n            .then((res) => {\r\n                console.log(\"Add response: \", res);\r\n\r\n                // Update module list\r\n                var modules = [...this.state.modules];\r\n                modules.push(query);\r\n                this.setState({ modules });\r\n\r\n                // How should we navigate to \"Edit Module\" view?\r\n                // How do you convert an ObjectID to a usable String?\r\n                //var id = res.insertedId._id\r\n                //this.props.history.push(\"#/editmodule/module?id=\" + id)\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    save_modules() {\r\n        Promise.all(\r\n            this.state.modules.map((module) => {\r\n                const query = { _id: module._id };\r\n                const update = {\r\n                    $set: {\r\n                        title: module.title,\r\n                    },\r\n                };\r\n                const options = { upsert: false };\r\n\r\n                return this.db\r\n                    .collection(\"MODULES\")\r\n                    .updateOne(query, update, options);\r\n            })\r\n        )\r\n            .then((res) => {\r\n                console.log(\"Save response: \", res);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    top: \"10px\",\r\n                    position: \"relative\",\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\",\r\n                    height: \"100%\",\r\n                    overflow: \"hidden\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                }}\r\n                className=\"container\"\r\n            >\r\n                <div\r\n                    style={{\r\n                        height: \"100%\",\r\n                        overflow: \"hidden\",\r\n                    }}\r\n                >\r\n                    <Form\r\n                        style={{ height: \"100%\" }}\r\n                        onSubmit={(event) => {\r\n                            event.preventDefault();\r\n                            this.save_modules();\r\n                        }}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                maxHeight: \"60%\",\r\n                                overflowY: \"scroll\",\r\n                                overflowX: \"hidden\",\r\n                            }}\r\n                        >\r\n                            {this.list_modules()}\r\n                        </div>\r\n\r\n                        <div style={{ marginTop: \"10px\" }}>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                size=\"lg\"\r\n                                block\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.add_module();\r\n                                }}\r\n                            >\r\n                                Add Module\r\n                            </Button>\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                size=\"lg\"\r\n                                block\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.save_modules();\r\n                                    window.location.assign(\"#/\");\r\n                                }}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                    <Modal\r\n                        isOpen={this.state.modal}\r\n                        toggle={(event) => {\r\n                            event.preventDefault();\r\n                            this.toggle();\r\n                        }}\r\n                        style={{\r\n                            marginTop: \"50px\",\r\n                        }}\r\n                    >\r\n                        <ModalHeader\r\n                            toggle={(event) => {\r\n                                event.preventDefault();\r\n                                this.toggle();\r\n                            }}\r\n                        >\r\n                            Confirm Deletion\r\n                        </ModalHeader>\r\n                        <ModalBody>{this.modal_message()}</ModalBody>\r\n                        <ModalFooter>\r\n                            <Button\r\n                                color=\"danger\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    if (this.state.idx > -1)\r\n                                        this.delete_module(this.state.idx);\r\n                                    this.toggle();\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </Button>{\" \"}\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.toggle();\r\n                                }}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport MapView from './components/MapView.js'\r\nimport Menu from './components/Menu/Menu.js'\r\nimport { Stitch} from 'mongodb-stitch-browser-sdk'\r\nimport Login from './components/Login'\r\nimport DropPin from './components/DropPin';\r\nimport NavMenu from './components/Menu/NavMenu'\r\nimport Module from './components/Module'\r\nimport EditModule from './components/EditModule'\r\nimport {Navbar} from 'react-bootstrap'\r\nimport ViewModules from './components/ViewModules'\r\nimport ManageModules from './components/ManageModules'\r\nimport {\r\n  Switch,\r\n  Route,\r\n  HashRouter,\r\n\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const appId = \"capstonear_app-xkqng\"\r\n    this.client = Stitch.hasAppClient(appId)\r\n      ? Stitch.getAppClient(appId)\r\n      : Stitch.initializeDefaultAppClient(appId)\r\n      \r\n    if (this.client.auth.hasRedirectResult()) {\r\n      console.log(\"has results\")\r\n\r\n      this.client.auth.handleRedirectResult().then(user => {\r\n        window.location.assign('/')\r\n      }\r\n      )\r\n    }\r\n    else {\r\n\r\n      //window.location.replace('#/login')\r\n\r\n    }\r\n    this.state = {\r\n      isLoggedIn : false,\r\n    }\r\n\r\n    //refs\r\n   \r\n    this.center_container = React.createRef()\r\n\r\n    \r\n    \r\n\r\n    this.NavMenu = this.NavMenu.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n\r\n  }\r\n\r\n  handleStitchClient(){\r\n    this.setState(\r\n      {\r\n        stitchClient : this.client,\r\n        userProfile : this.client.auth.userProfile,\r\n        isLoggedIn : true,\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  Home = () => {\r\n    if (this.client.auth.isLoggedIn) {\r\n      return (\r\n        <div>\r\n          <MapView />\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n          <Login />\r\n      );\r\n    }\r\n  }\r\n\r\n  NavMenu = () => {\r\n    if (this.client.auth.isLoggedIn) {\r\n      \r\n\r\n      return (\r\n        <NavMenu center_container={this.center_container}/>\r\n      );\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <HashRouter basename=\"/\" >\r\n\r\n       \r\n          <div>\r\n          <Navbar className=\"navbar bg-dark navbar-dark\" style={{\r\n            position:'fixed',\r\n            width:'100%',\r\n            height: '50px',\r\n            zIndex:1500,\r\n          }}>\r\n            <Navbar.Brand href='#/'>\r\n              Context AR\r\n            </Navbar.Brand>\r\n          </Navbar>\r\n          {this.NavMenu()}\r\n          </div>\r\n\r\n          <div ref={this.center_container} className='center_container' style={{\r\n              position: 'fixed',\r\n              top: '50px',\r\n              bottom: '0',\r\n              width:\"100%\",\r\n              height:'calc(100% - 50px)',\r\n              \r\n          }}>\r\n          <Switch>\r\n            <Route exact path=\"/\">{this.Home}</Route>\r\n            <Route exact path=\"/menu\" component={Menu} />\r\n            <Route exact path=\"/droppin\">\r\n              <DropPin />\r\n            </Route>\r\n            <Route exact path=\"/create_module\" component={Create_Modules} />\r\n            <Route exact path=\"/viewmodules\" component={ViewModules} />\r\n            <Route exact path=\"/managemodules\" component={ManageModules} />\r\n            <Route exact path=\"/editmodule\" component={EditModule} />\r\n            <Route  path='/module/:id' component={Module}/>\r\n          </Switch>\r\n          </div>\r\n       \r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst Create_Modules = () => {\r\n  return <h2>Admin</h2>;\r\n}\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}