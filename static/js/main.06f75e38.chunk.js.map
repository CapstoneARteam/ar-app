{"version":3,"sources":["../node_modules/require_optional sync","components/MapView.js","components/Menu/Menu.js","components/Login.js","components/DropPin.js","components/Menu/NavMenu.js","components/ViewModules.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapView","props","state","currentLocation","lat","lng","zoom","userLocation","userLocationFound","getUserPosition","bind","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","console","log","this","Marker","Popup","Map","center","maxZoom","TileLayer","url","attribution","Component","Menu","username","useremail","userID","stitch_res","menuOpen","open","login","logout","addamodule","listmymodules","appId","Stitch","hasAppClient","client","getAppClient","mongodb","getServiceClient","RemoteMongoClient","factory","db","auth","isLoggedIn","authInfo","userProfile","data","first_name","email","userId","userImg","picture","credential","GoogleRedirectCredential","loginWithRedirect","window","location","reload","collection","insertOne","name","temp_module_name","owner","catch","error","find","_id","ObjectId","asArray","then","StyledMenu","setOpen","center_container","style","top","src","maxHeigh","maxWidth","borderRadius","fontSize","color","zIndex","listStyleType","paddingLeft","onClick","current","opacity","href","fontColor","bottom","styled","nav","withRouter","Login","hasRedirectResult","handleRedirectResult","user","replace","class","margin","left","right","height","floatStyle","width","backgroundColor","textAlign","boxShadow","DropPin","useState","setPosition","markers","setMarkers","canPlacePin","setCanPlacePin","useEffect","pos","initializeDefaultAppClient","key","latlng","long","StyledBurger","button","Burger","NavMenu","React","ViewModules","modules","img1","add_module_cards","get_image","initializeAppClient","mds","map","idx","className","Card","display","maxHeight","Body","Img","variant","Title","Subtitle","Text","CardDeck","App","Home","createRef","stitchClient","basename","Navbar","Brand","ref","postion","exact","path","component","Create_Modules","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.06f75e38.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 139;","import React, {Component} from 'react'\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport L from 'leaflet'\n\n\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n\n\nclass MapView extends Component{\n  constructor(props){\n    super(props)\n\n    this.state ={\n      currentLocation: {lat: 45.51, lng:-122.68},\n      zoom: 13,\n      userLocation:[],\n      userLocationFound: false,\n    }\n  this.getUserPosition = this.getUserPosition.bind(this)\n  }\n  \n\n  getUserPosition(){\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\n      \n      console.log(this.state)\n      \n    })\n  \n  }\n\n  componentDidMount(){\n    this.getUserPosition()\n\n    \n  }\n\n  render(){\n    const userLocation = this.state.userLocationFound ? (\n      <Marker position={this.state.userLocation}>\n        <Popup >Your location</Popup>\n      </Marker>\n    ) : null\n\n    return (\n      <div id='leaflet-container'>\n      <Map center={this.state.currentLocation} zoom={13} maxZoom={18} >\n        <TileLayer\n          \n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n        />\n        {userLocation}     \n      </Map>\n      </div>\n    );\n    }\n}\n\nexport default MapView;","import React, {Component} from 'react'\nimport {Stitch, RemoteMongoClient, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\nimport { ObjectId } from 'mongodb'\nimport styled from 'styled-components'\nimport { withRouter } from 'react-router';\n\n\n\nclass Menu extends Component{\n  constructor(props){\n      super(props)\n      this.state ={\n        username:\"\",\n        useremail:\"\",\n        userID:\"\",\n        stitch_res:[],\n        menuOpen: this.props.open,\n      }\n\n      //bind functions\n      this.login = this.login.bind(this)\n      this.logout = this.logout.bind(this)\n      this.addamodule = this.addamodule.bind(this)\n      this.listmymodules = this.listmymodules.bind(this)\n      console.log(props)\n      const appId = \"capstonear_app-xkqng\"\n      if (Stitch.hasAppClient(appId)){\n        this.client = Stitch.getAppClient(appId)\n        const mongodb = this.client.getServiceClient(\n          RemoteMongoClient.factory,\n          \"mongodb-atlas\"\n        );\n        //select the db in our mongdb atlas cluster\n        this.db = mongodb.db(\"APP\");\n      }\n  }\n\n  async componentDidMount(){\n    //init mongodb stitch\n  \n      \n      if (this.client.auth.isLoggedIn && this.client.auth.authInfo.userProfile) {\n        this.setState(\n          {\n            username: this.client.auth.authInfo.userProfile.data.first_name,\n            useremail: this.client.auth.authInfo.userProfile.data.email,\n            userID: this.client.auth.authInfo.userId,\n            userImg: this.client.auth.authInfo.userProfile.data.picture,\n          }\n        )\n        \n        console.log(this.client.auth.authInfo.userProfile.data)\n      }\n\n\n  }\n\n\n\n  //login button handler\n  async login(){       \n      //login using google redirect\n      const credential = new GoogleRedirectCredential();\n      this.client.auth.loginWithRedirect(credential);\n      console.log(this.state)\n  }\n\n  async logout(){\n    await this.client.auth.logout()\n    this.setState({\n        username:\"\",\n        useremail:\"\",\n        userID:\"\"\n    })\n    window.location.reload()\n  }\n\n  addamodule(){\n    this.db.collection(\"MODULES\")\n    .insertOne({\n      userID: this.state.userID,\n      name: this.state.temp_module_name,\n      owner: this.state.useremail,\n    })\n    .catch(console.error);\n  }\n\n  listmymodules() {\n    if(!this.client.auth.isLoggedIn){\n        return\n    }\n    this.db.collection(\"PINS\").find({_id: ObjectId(\"5ebed1bc5992681f357d7948\")})\n    .asArray()\n    .then((stitch_res) => {this.setState({stitch_res})\n      console.log(this.state.stitch_res[0])\n    }\n    )\n  }\n\n  render(){\n    return(\n      <StyledMenu open={this.props.open} setOpen={this.props.setOpen} center_container={this.props.center_container}>\n        <div style={{\n          position: 'absolute',\n          top: '2rem',\n        }}>\n        <img src={this.state.userImg} style={{\n          maxHeigh: '80px',\n          maxWidth: '80px',\n          borderRadius: '50%',\n          top: '1rem',\n        }}></img>\n\n         <p style={{\n          fontSize: '1.5rem',\n          top: '4rem',\n          color: 'white',\n          zIndex: 1002,\n          }}> Welcome, <br /> {this.state.username} </p>\n        </div>\n        \n          <ul style={{listStyleType: 'none', paddingLeft: 0}} onClick={ ()=> {\n            this.props.center_container.center_container.current.style.opacity = 1\n            this.props.setOpen(!this.props.open)\n          }}>\n            <li><a href=\"#/\">Home</a></li>\n            <br/>\n            <li><a href=\"#/droppin\">Drop pin</a></li>\n            <br/>\n            <li><a href=\"#/viewmodules\">My Modules</a></li>\n          </ul>\n        \n\n\n        <a href=\"#\" onClick={this.logout} style={{\n          position:'absolute',\n          fontSize: '1rem',\n          fontColor: '#00000',\n          bottom: '10rem',\n        }}>Log Out </a>\n        \n\n      </StyledMenu>\n    )\n  }\n}\n\n\n\n\n\n// menu style sheet\n// tutorial from https://css-tricks.com/hamburger-menu-with-a-side-of-react-hooks-and-styled-components/ with modified styles\nconst StyledMenu = styled.nav`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: #343a40;\n  transform: ${({ open }) => open ? 'translateX(-100)' : 'translateX(100%)'};\n  height: 100vh;\n  text-align: left;\n  padding: 2rem;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom:0;\n  transition: transform 0.3s ease-in-out;\n  z-index: 1501;\n\n  @media (max-width: 150px) {\n      width: 100%;\n    }\n\n  a {\n    font-size: 1.5rem;\n    text-transform: uppercase;\n    padding: 2rem 0;\n    font-weight: Light;\n    letter-spacing: 0.5rem;\n    color: #FFFFF;\n    text-decoration: none;\n    transition: color 0.3s linear;\n  \n    \n    @media (max-width: 150px) {\n      font-size: 1rem;\n      text-align: center;\n    }\n\n    &:hover {\n      color: #343078;\n    }\n  }\n`\n\nexport default withRouter(Menu)\n","import React, {Component} from 'react'\nimport './Login.css'\nimport {Stitch, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\n\nexport default class Login extends Component{\n    constructor(){\n        super()\n        const appId = \"capstonear_app-xkqng\"\n        this.client = Stitch.getAppClient(appId)\n        this.login = this.login.bind(this)\n    }\n\n    componentDidMount(){\n      if (this.client.auth.hasRedirectResult()) {\n        console.log(\"has results\")\n  \n        this.client.auth.handleRedirectResult().then(user => {\n          this.setState(\n            {\n              username: this.client.auth.authInfo.userProfile.data.name,\n              useremail: this.client.auth.authInfo.userProfile.data.email,\n              userID: this.client.auth.authInfo.userId,\n  \n            }\n          )\n          window.location.replace('#/')\n        }\n        )\n      }\n        \n       \n    }\n\n\n    async login(){\n          \n          //login using google redirect\n          const credential = new GoogleRedirectCredential();\n          await this.client.auth.loginWithRedirect(credential);\n          console.log(this.state)\n          \n        \n    }\n\n\n  render() {\n    return (\n      \n          <div class=\"row justify-content-center\" style={{\n            position: \"fixed\",\n            margin: \"auto\",\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0,\n            height: \"50px\"\n          }}>\n              <button class=\"btn btn-primary\"onClick={this.login}>Login with Google</button>\n          </div>\n      \n    )\n  }\n}","import React, { useState, useEffect } from 'react'\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport {Stitch, RemoteMongoClient, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\n\n\nconst floatStyle = {\n    position: \"fixed\",\n    width: \"60px\",\n    height: \"60px\",\n    bottom: \"40px\",\n    right: \"40px\",\n    backgroundColor: \"#0C9\",\n    color: \"#FFF\",\n    borderRadius: \"50px\",\n    textAlign: \"center\",\n    boxShadow: \"2px 2px 3px #999\",\n    zIndex: 1500\n}\n\nconst DropPin = () => {\n    const [position, setPosition] = useState([45, 45]);\n    const [markers, setMarkers] = useState([]);\n    const [canPlacePin, setCanPlacePin] = useState(false);\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(pos => {\n            const { latitude, longitude } = pos.coords;\n            setPosition([latitude, longitude]);\n            console.log(pos.coords)\n        })\n    }, []);\n\n    const appId = \"capstonear_app-xkqng\"\n    const client = Stitch.hasAppClient(appId)\n    ? Stitch.getAppClient(appId)\n    : Stitch.initializeDefaultAppClient(appId)\n    const mongodb = client.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    );\n    const db = mongodb.db(\"APP\"); \n\n    return (\n        <Map center={position} zoom={13}\n            onClick={e => {\n                if (canPlacePin) {\n                    setMarkers(\n                        [...markers,\n                        <Marker key={e.latlng} position={[e.latlng.lat, e.latlng.lng]}>\n                            <Popup>testing</Popup>\n                        </Marker>\n                        ]\n                    );\n                    db.collection(\"PINS\")\n                    .insertOne({\n                    name: \"test\",\n                    long:  e.latlng.lng,\n                    lat: e.latlng.lat\n                    })\n                    setCanPlacePin(!canPlacePin);\n                }\n            }}\n        >\n            <button style={floatStyle} onClick={()=>setCanPlacePin(!canPlacePin)}>\n                <div style={{fontSize: \"40px\"}}>+</div>\n            </button>\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n            />\n            <Marker position={position}>\n            <Popup >Your location</Popup>\n            </Marker>\n            {markers}\n        </Map>\n    );\n}\n\nexport default DropPin;\n","import React from 'react'\nimport styled from 'styled-components'\nimport Menu from './Menu'\n\n\nconst StyledBurger = styled.button`\n  position: fixed;\n  top: 10px;\n  right: 2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 2rem;\n  height: 2rem;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 1502;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 2rem;\n    height: 0.25rem;\n    background: ${({ open }) => open ? '#FFFFFF' : '#FFFFFF'};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => open ? '0' : '1'};\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`\n\nconst Burger = ({ open, setOpen, center_container }) => {\n  console.log(center_container.center_container.current)\n  return (\n    <StyledBurger open={open} onClick={() => {\n      setOpen(!open)\n      if(!open)\n        center_container.center_container.current.style.opacity = .5 \n      else\n        center_container.center_container.current.style.opacity = 1\n    }}>\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  )\n}\n\n\n\n\nconst NavMenu = (center_container) => {\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <div>\n        <Burger open={open} setOpen={setOpen} center_container={center_container} />\n        <Menu open={open} setOpen={setOpen} center_container={center_container}/>\n        </div>\n    )\n}\n\nexport default NavMenu","import React, { Component } from 'react'\nimport {Card, CardGroup, CardDeck} from 'react-bootstrap'\nimport {Stitch, } from \"mongodb-stitch-browser-sdk\"\nimport {AwsServiceClient, AwsRequest} from 'mongodb-stitch-browser-services-aws'\n\nexport default class ViewModules extends Component{\n\n    constructor(props){\n        super(props)\n        this.state ={\n            modules : [{name:'OMSI'},{name:'PSU'},{name:'DOWNTOWN'}, {name:'DOWNTOWN2'},{name:'OMSI'},{name:'PSU'},{name:'DOWNTOWN'}, {name:'DOWNTOWN2'},{name:'OMSI'},{name:'PSU'},{name:'DOWNTOWN'}, {name:'DOWNTOWN2'},],\n            img1:''\n        }\n        this.add_module_cards = this.add_module_cards.bind(this)\n        this.get_image = this.get_image.bind(this)\n\n        const appId = \"capstonear_app-xkqng\"\n        if (Stitch.hasAppClient(appId)) {\n            this.client = Stitch.getAppClient(appId)\n            console.log(\"client\")\n        }\n        else{\n            this.client = Stitch.initializeAppClient(appId)\n            console.log(\"client init\")\n        }\n        \n    }\n\n    componentDidMount(){\n        this.get_image()\n        console.log(this.state)\n    }\n\n    async get_image(){\n\n    }\n\n    add_module_cards(){\n        \n        const mds= this.state.modules.map(function(module,idx) {\n          \n            return (\n                <div className=\"col-md-6 col-lg-4 col-xl-3\">\n                    <Card style={{\n                        display: 'block',\n                        maxHeight: '25rem',\n                        margin: '.5rem',\n                    }} key={idx}>\n                        <Card.Body>\n                            <Card.Img variant=\"top\" src=\"https://capstoneusercontent.s3.amazonaws.com/ar.png\" />\n                            <Card.Title>{module.name}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">by someone</Card.Subtitle>\n                            <Card.Text>\n                                this is the description of this OMSI module\n                            </Card.Text>\n                            <button className=\"btn btn-primary\">View Module</button>\n                        </Card.Body>\n                    </Card>\n                </div>\n            )\n        })\n        return (\n            <div style={{\n                top: '50px',\n                bottom: '0px',\n                position: 'relative',\n            }}\n                className=\"container\"\n            >\n                <CardDeck style={{\n                    top: '10px',\n                }}>\n                    {mds}\n                </CardDeck>\n            </div>\n        )\n    }\n\n    render(){\n        return(\n            this.add_module_cards()\n        )\n    }\n\n}","import React, { Component } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport MapView from './components/MapView.js'\nimport Menu from './components/Menu/Menu.js'\nimport { Stitch} from 'mongodb-stitch-browser-sdk'\nimport Login from './components/Login'\nimport DropPin from './components/DropPin';\nimport NavMenu from './components/Menu/NavMenu'\nimport {Navbar} from 'react-bootstrap'\nimport ViewModules, {View_Modules} from './components/ViewModules'\nimport {\n  Switch,\n  Route,\n  HashRouter,\n} from \"react-router-dom\";\n\n\n\nexport default class App extends Component {\n\n  constructor() {\n    super()\n    const appId = \"capstonear_app-xkqng\"\n    this.client = Stitch.hasAppClient(appId)\n      ? Stitch.getAppClient(appId)\n      : Stitch.initializeDefaultAppClient(appId)\n      \n    if (this.client.auth.hasRedirectResult()) {\n      console.log(\"has results\")\n\n      this.client.auth.handleRedirectResult().then(user => {\n        window.location.reload()\n      }\n      )\n    }\n    else {\n\n      //window.location.replace('#/login')\n\n    }\n    this.state = {\n      isLoggedIn : false,\n    }\n\n    //refs\n   \n    this.center_container = React.createRef()\n\n    \n    \n\n    this.NavMenu = this.NavMenu.bind(this)\n  }\n\n  componentDidMount() {\n    \n\n  }\n\n  handleStitchClient(){\n    this.setState(\n      {\n        stitchClient : this.client,\n        userProfile : this.client.auth.userProfile,\n        isLoggedIn : true,\n      }\n    )\n\n  }\n\n  Home = () => {\n    if (this.client.auth.isLoggedIn) {\n      return (\n        <div>\n          <MapView />\n        </div>\n      );\n    }\n    else {\n      return (\n          <Login />\n      );\n    }\n  }\n\n  NavMenu = () => {\n    if (this.client.auth.isLoggedIn) {\n      \n\n      return (\n        <NavMenu center_container={this.center_container}/>\n      );\n    }\n  }\n\n  \n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n\n        <div className=\"\" style={{\n          height:'100vh'\n        }}>\n          <div>\n          <Navbar className=\"navbar bg-dark navbar-dark\" style={{\n            position:'fixed',\n            width:'100%',\n            height: '50px',\n            zIndex:1500,\n          }}>\n            <Navbar.Brand href='#/'>\n              CS Capstone\n            </Navbar.Brand>\n          \n            \n          </Navbar>\n          {this.NavMenu()}\n          </div>\n\n          <div ref={this.center_container} className='mid_container' style={{\n              postion: 'fixed',\n              top: '50px',\n             \n          }}>\n          <Switch>\n            <Route exact path=\"/\">{this.Home}</Route>\n            <Route exact path=\"/menu\" component={Menu} />\n            <Route exact path=\"/droppin\">\n              <DropPin />\n            </Route>\n            <Route exact path=\"/create_module\" component={Create_Modules} />\n            <Route exact path=\"/viewmodules\" component={ViewModules} />\n          </Switch>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\n\n\nconst Create_Modules = () => {\n  return <h2>Admin</h2>;\n}\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}